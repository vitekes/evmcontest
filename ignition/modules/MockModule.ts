import {buildModule} from "@nomicfoundation/hardhat-ignition/modules";

const MockModule = buildModule("MockModule", (m) => {
    console.log("üß™ –î–µ–ø–ª–æ–π Mock —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...");

    // =============================================
    // –î–ï–ü–õ–û–ô MOCK –¢–û–ö–ï–ù–û–í
    // =============================================

    // Mock USDC (6 decimals)
    const mockUSDC = m.contract("MockERC20", [
        "Mock USD Coin",
        "USDC",
        6,
        "1000000000000000" // 1 –º–∏–ª–ª–∏–∞—Ä–¥ USDC –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    ]);

    // Mock USDT (6 decimals)
    const mockUSDT = m.contract("MockERC20", [
        "Mock Tether USD",
        "USDT",
        6,
        "1000000000000000" // 1 –º–∏–ª–ª–∏–∞—Ä–¥ USDT –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    ]);

    // Mock WETH (18 decimals)
    const mockWETH = m.contract("MockERC20", [
        "Mock Wrapped Ether",
        "WETH",
        18,
        "1000000000000000000000000" // 1 –º–∏–ª–ª–∏–æ–Ω WETH –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    ]);

    // =============================================
    // MOCK PRICE FEEDS (–¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
    // =============================================

    // Mock Chainlink price feeds
    const usdcPriceFeed = m.contract("MockPriceFeed", [
        8, // decimals
        "100000000" // $1.00 —Å 8 decimals (1 * 10^8)
    ]);

    const usdtPriceFeed = m.contract("MockPriceFeed", [
        8,
        "100000000" // $1.00
    ]);

    const wethPriceFeed = m.contract("MockPriceFeed", [
        8,
        "250000000000" // $2500 —Å 8 decimals (2500 * 10^8)
    ]);

    // =============================================
    // –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ö–û–ù–¢–†–ê–ö–¢–´ –î–õ–Ø –¢–ï–°–¢–û–í
    // =============================================

    // –ö–æ–Ω—Ç—Ä–∞–∫—Ç –¥–ª—è —Ä–∞–∑–¥–∞—á–∏ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Ç–µ—Å—Ç–∞—Ö
    const testHelper = m.contract("TestHelper", [
        mockUSDC,
        mockUSDT,
        mockWETH
    ]);

    // Factory –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö mock —Ç–æ–∫–µ–Ω–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    const mockFactory = m.contract("MockTokenFactory");

    console.log("‚úÖ Mock —Ç–æ–∫–µ–Ω—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã!");
    console.log(`üìÑ Mock USDC: ${mockUSDC}`);
    console.log(`üìÑ Mock USDT: ${mockUSDT}`);
    console.log(`üìÑ Mock WETH: ${mockWETH}`);

    return {
        // Mock —Ç–æ–∫–µ–Ω—ã
        mockUSDC,
        mockUSDT,
        mockWETH,

        // Mock price feeds
        usdcPriceFeed,
        usdtPriceFeed,
        wethPriceFeed,

        // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã
        testHelper,
        mockFactory
    };
});

export default MockModule;