{
  "id": "b0531df91d1372854921d274b44067df",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/Giveaways.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\nimport \"./interfaces/iPayment.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\ncontract Giveaways is ReentrancyGuard{\n    struct Giveaway {\n        address owner;\n        IERC20  token;\n        uint    prize;\n        uint8[] prizeType;\n\n        uint    startTime;\n        uint    endTime;\n        uint    prizeTime;\n\n        address[]  users;\n        address[]  winners;\n\n        bool    active;\n    }\n    uint64  id;\n    IPayment payment;\n    address payable public owner;\n    mapping (uint64 => Giveaway) giveaways;\n    mapping (uint64 => mapping (address => uint64)) usersId;\n    event sendMoney(address user, uint amount, IERC20 token);\n    event endGiveaways(uint64 id, Giveaway data);\n    constructor(IPayment _payment) {\n        owner = payable(msg.sender);\n        payment = _payment;\n    }\n    fallback()external{}\n    receive() external payable{}\n//____Owner____//\n    function endGiveaway(uint64 _id, address[] memory _winners) external {\n        Giveaway storage gw = giveaways[_id];\n        require(gw.endTime < block.timestamp, \"Giveaway is not ended\");\n        require(gw.winners.length == 0, \"Giveaway is ended\");\n        require(msg.sender == owner, \"You aren't the owner\");\n        gw.active  = false;\n        if(gw.users.length < gw.prizeType.length){\n            send(gw.token,gw.prize,gw.owner);\n            gw.winners.push(gw.owner);\n            emit endGiveaways(_id, gw);\n            return;\n        }else{\n            require((_winners.length) == gw.prizeType.length, \"Wrong winners amount\");\n        }\n        gw.winners = _winners;\n        emit endGiveaways(_id, gw);\n    }\n\n    function changeActive(uint64 _id, bool _active) external {\n        require(msg.sender == owner, \"Wrong sender\");\n        giveaways[_id].active = _active;\n    }\n\n    function withdraw(IERC20 _token, uint _amount) external {\n        require(msg.sender == owner, \"Wrong sender\");\n        send(_token,_amount,owner);\n    }\n\n    function sendPrize(address[] memory _users, uint[] memory _amount, IERC20 _token) external {\n        require(_users.length == _amount.length, \"arrays must be the same length\");\n        require(msg.sender == owner, \"Wrong sender\");\n        if (_token == IERC20(address(0))){\n            for(uint i = 0; i < _users.length; i++){\n                (bool sent, ) = _users[i].call{value: _amount[i]}(\"\");\n                if(sent){\n                    emit sendMoney(_users[i], _amount[i], _token);\n                }                 \n            }\n        } else {\n            for(uint i = 0; i < _users.length; i++){\n                _token.transfer(_users[i], _amount[i]);\n                emit sendMoney(_users[i], _amount[i], _token);\n            }\n        }\n\n    }\n\n//____User____//\n    function createGiveaway(uint _prize, IERC20 _token, uint8[] memory _prizeType, uint _startTime, uint _endTime, uint _prizeTime) external payable nonReentrant() {\n        (uint premiumPrice, ) = payment.getTokenPrices(_token);\n        if(_token == IERC20(address(0))) {\n            _prize = msg.value;\n        } else {\n            _token.transferFrom(msg.sender, address(this), _prize);\n        }\n        require(_endTime > _startTime, \"End time must be more than start time\");\n        require(_prizeTime >= _endTime, \"Prize time must be >= end time\");\n        require(msg.sender != address(0), \"Wrong sender\");\n        require(premiumPrice > 0, \"Can't use this token\");\n        require(_prize > 0, \"choose prize above 0\");\n        _startTime += block.timestamp;\n        _endTime += block.timestamp;\n        _prizeTime += block.timestamp;\n        address[] memory _users;\n        giveaways[id] = Giveaway(\n            msg.sender,\n            _token,\n            _prize,\n            _prizeType,\n            _startTime,\n            _endTime,\n            _prizeTime,\n            _users,\n            _users,\n            true\n        );\n        id++;\n    }\n\n    function addPrize(uint64 _id, uint _prize) external payable nonReentrant(){\n        Giveaway storage gw = giveaways[_id];\n        require(msg.sender != address(0), \"Wrong sender\");\n        require(gw.owner == msg.sender, \"Wrong sender\");\n        gw.prize += _prize;\n    }\n\n    function participate(uint64 _id) external {\n        Giveaway storage gw = giveaways[_id];\n        require(gw.active, \"Giveaway is not active\");\n        require(msg.sender != address(0), \"Wrong sender\");\n        require(usersId[_id][msg.sender] == 0, \"You are already participated\");\n        require(gw.startTime < block.timestamp && gw.endTime > block.timestamp, \"giveaway is not active\");\n        gw.users.push(payable(msg.sender));\n        usersId[_id][msg.sender] = uint64(gw.users.length);\n    }\n//__Private__//\n    function send(IERC20 _token, uint _amount, address _to) private {\n        if(_token == IERC20(address(0))){\n            (bool sent, ) = _to.call{value: _amount}(\"\");\n            require(sent);        \n        } else {\n            _token.transfer(_to, _amount);\n        }        \n    }\n//____View____//\n    function getGiveaway(uint64 _id) external view returns (Giveaway memory _gw) {\n        _gw = giveaways[_id];\n    }\n\n    function getGiveaways(uint64 _page, uint64 _amount) external view returns (Giveaway[] memory _gw) {\n        if(_amount == 0){\n            _amount = id;\n            _page = 0;\n        }\n        _gw = new Giveaway[](_amount);\n        for(uint64 i=_page * _amount; i<_amount;i++){\n            Giveaway memory item = giveaways[i];\n            _gw[i] = item;\n        }\n    }\n\n    function getWinners(uint64 _id) external view returns (address[] memory _winners) {\n        _winners = giveaways[_id].winners;\n    }\n}\n"
      },
      "contracts/interfaces/iPayment.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\ninterface IPayment {\r\n\r\n    function getTokenPrices(IERC20 _token) external view returns (uint _premiumPrice, uint _aiPrice);\r\n\r\n\r\n}"
      },
      "contracts/Payment.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.28;\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\ncontract Payments is ReentrancyGuard{\r\n    uint txId;\r\n    uint16 fee; // 55 = 5.5%   x / 1000 * fee\r\n    address payable public owner;\r\n    mapping (IERC20 => uint) tokenAiPrice;\r\n    mapping (IERC20 => uint) tokenPremiumPrice;\r\n    mapping (address => uint16) public personalFee;\r\n    mapping (address => mapping (uint16 => mapping (IERC20 => uint))) itemPrice;\r\n    mapping (address => mapping (uint8 => mapping (IERC20 => uint))) subLevelPrice;\r\n    event newPremium(address user, uint8 month, uint price, IERC20 token, uint id);\r\n    event newAiToken(address user, uint8 amount, uint price, IERC20 token, uint id);\r\n    event newDonation(address from, address to, uint amount, IERC20 token, uint id);\r\n    event newItem(address user, address seller, uint16 itemId, uint price, IERC20 token, uint id);\r\n    event newSubToUser(address user, address subscribeTo, uint8 month, uint8 level, uint price, IERC20 token, uint id);\r\n    constructor() {\r\n        owner = payable(msg.sender);\r\n    }\r\n    fallback()external{}\r\n    receive() external payable{}\r\n//____Owner____//\r\n    function changeTokenPrices(IERC20 _token, uint _premiumPrice, uint _aiPrice) external {\r\n        require(msg.sender == owner, \"Wrong sender\");\r\n        tokenPremiumPrice[_token] = _premiumPrice;\r\n        tokenAiPrice[_token] = _aiPrice;\r\n    }\r\n\r\n    function withdraw(IERC20 _token, uint _amount) external {\r\n        require(msg.sender == owner, \"Wrong sender\");\r\n        if(_token == IERC20(address(0))){\r\n            (bool sent, ) = owner.call{value: _amount}(\"\");\r\n            require(sent);        \r\n        } else {\r\n            _token.transfer(owner, _amount);\r\n        }\r\n    }\r\n\r\n    function chagneOwner(address _owner) external {\r\n        require(msg.sender == owner, \"Wrong sender\");\r\n        owner = payable(_owner);\r\n    }\r\n    \r\n    function changeFee(uint16 _fee) external {\r\n        require(msg.sender == owner, \"Wrong sender\");\r\n        fee = _fee;\r\n    }\r\n\r\n    function changePersonalFee(address _user, uint16 _fee) external {\r\n        require(msg.sender == owner, \"Wrong sender\");\r\n        personalFee[_user] = _fee;\r\n    }\r\n//____User____//\r\n    function buyAiToken(address _to, uint8 _amount, IERC20 _token) external payable nonReentrant(){\r\n        require(tokenAiPrice[_token] > 0, \"Can't pay with this token\");\r\n        require(msg.sender != address(0), \"Wrong sender\");\r\n        uint price = tokenAiPrice[_token] * _amount;\r\n        if(_token == IERC20(address(0)))\r\n            require(msg.value >= price, \"Wrong eth amount\");\r\n        send(_token, price, msg.sender, owner);\r\n        emit newAiToken(_to, _amount, price, _token, txId);\r\n        txId++;\r\n    }\r\n\r\n    function buyPremium(address _to, uint8 _month, IERC20 _token) external payable nonReentrant(){\r\n        require(_month == 1 || _month == 3 || _month == 6 || _month == 9 || _month == 12, \"Choose correct month\");\r\n        require(tokenPremiumPrice[_token] > 0, \"Can't pay with this token\");\r\n        require(msg.sender != address(0), \"Wrong sender\");\r\n        uint price = tokenPremiumPrice[_token] * _month;\r\n        if(_token == IERC20(address(0)))\r\n            require(msg.value >= price, 'Wrong eth amount');\r\n        send(_token, price, msg.sender, owner);\r\n        emit newPremium(_to, _month, price, _token, txId);\r\n        txId++;\r\n    }\r\n\r\n    function buySubToUser(address _to, address _user, uint8 _month, uint8 _level, IERC20 _token) external payable nonReentrant(){\r\n        require(_month == 1 || _month == 3 || _month == 6 || _month == 9 || _month == 12, \"Choose correct month\");\r\n        require(subLevelPrice[_user][_level][_token] > 0 && tokenPremiumPrice[_token] > 0, \"Can't pay with this token\");\r\n        require(msg.sender != address(0), \"Wrong sender\");\r\n        uint price = subLevelPrice[_user][_level][_token] * _month;\r\n        uint _fee = personalFee[msg.sender] == 0 ? fee : personalFee[msg.sender];\r\n        uint tax = price * _fee / 1000 ;\r\n        if(_token == IERC20(address(0)))\r\n            require(msg.value >= price, 'Wrong eth amount');\r\n        send(_token, (price - tax), msg.sender, _user);\r\n        send(_token, tax, msg.sender, owner);\r\n        emit newSubToUser(_to, _user, _month, _level, price, _token, txId);\r\n        txId++;\r\n    }\r\n\r\n    function buyItem(address _to, address _seller, uint16 _itemId, IERC20 _token) external payable nonReentrant(){\r\n        uint price = itemPrice[_seller][_itemId][_token];\r\n        require(tokenPremiumPrice[_token] > 0 && price > 0, \"Can't use this token\");\r\n        uint _fee = personalFee[msg.sender] == 0 ? fee : personalFee[msg.sender];\r\n        uint tax = price * _fee / 1000 ;\r\n        if(_token == IERC20(address(0)))\r\n            require(msg.value >= price, \"Not enough eth to buy item\");\r\n        send(_token, (price - tax), msg.sender, _seller);\r\n        send(_token, tax, msg.sender, owner);\r\n        emit newItem(_to, _seller, _itemId, price, _token, txId);\r\n        txId++;\r\n    }\r\n\r\n    function donation(address _user, uint _amount, IERC20 _token) external payable nonReentrant(){\r\n        require(tokenPremiumPrice[_token] > 0, \"can't use this token\");\r\n        if(_token == IERC20(address(0)))\r\n            _amount = msg.value;\r\n        send(_token, _amount, msg.sender, _user);\r\n        emit newDonation(msg.sender, _user, _amount, _token, txId);\r\n        txId++;\r\n    }\r\n\r\n    function changeUserSubPrice(IERC20 _token, uint8 _level, uint _price) external {\r\n        require(tokenPremiumPrice[_token] > 0, \"Can't use this token\");\r\n        subLevelPrice[msg.sender][_level][_token] = _price;\r\n    }\r\n\r\n    function changeItemPrice(IERC20 _token, uint16 _id, uint _price) external {\r\n        require(tokenPremiumPrice[_token] > 0, \"Can't use this token\");\r\n        itemPrice[msg.sender][_id][_token] = _price; \r\n    }\r\n//___Private___//\r\n    function send(IERC20 _token, uint _amount, address _from, address _to) private {\r\n        if(_token == IERC20(address(0))){\r\n            (bool sent, ) = _to.call{value: _amount}(\"\");\r\n            require(sent);        \r\n        } else {\r\n            _token.transferFrom(_from, _to, _amount);\r\n        }        \r\n    }\r\n//____View____//\r\n    function getTokenPrices(IERC20 _token) external view returns (uint _premiumPrice, uint _aiPrice) {\r\n        _premiumPrice = tokenPremiumPrice[_token];\r\n        _aiPrice = tokenAiPrice[_token];\r\n    }\r\n\r\n    function getUserLevelPrice(address _user, uint8 _level, IERC20 _token) external view returns (uint _subLevelPrice) {\r\n        _subLevelPrice = subLevelPrice[_user][_level][_token];\r\n    }\r\n}\r\n"
      },
      "contracts/usdt.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.18;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract usdtMock is ERC20 {\r\n    constructor( ) ERC20(\"USDt\", \"USDt\") {\r\n    }\r\n\r\n\r\nfunction mint(address user, uint amount) external {\r\n    _mint(user,amount*10**decimals());\r\n}\r\n\r\nfunction decimals() public pure override returns(uint8){\r\n    return 18;\r\n}\r\n}"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 1
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              136
            ],
            "IERC20Errors": [
              41
            ],
            "IERC721Errors": [
              89
            ]
          },
          "id": 137,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:0",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 41,
              "linearizedBaseContracts": [
                41
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:0",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 11,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "654:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "670:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "687:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:0"
                  },
                  "src": "623:80:0"
                },
                {
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 16,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "891:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:0"
                  },
                  "src": "866:41:0"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 21,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 21,
                        "src": "1104:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:0"
                  },
                  "src": "1077:45:0"
                },
                {
                  "documentation": {
                    "id": 22,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:0",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 30,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1511:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 26,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1528:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 28,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "1547:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 27,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:0"
                  },
                  "src": "1478:85:0"
                },
                {
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 35,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 35,
                        "src": "1775:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:0"
                  },
                  "src": "1748:45:0"
                },
                {
                  "documentation": {
                    "id": 36,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:0",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 40,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 38,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2025:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 37,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:0"
                  },
                  "src": "1999:43:0"
                }
              ],
              "scope": 137,
              "src": "280:1764:0",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 42,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:0",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 89,
              "linearizedBaseContracts": [
                89
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 43,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:0",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 47,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "2469:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:0"
                  },
                  "src": "2444:40:0"
                },
                {
                  "documentation": {
                    "id": 48,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:0",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 52,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "2656:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:0"
                  },
                  "src": "2627:46:0"
                },
                {
                  "documentation": {
                    "id": 53,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:0",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 61,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3000:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3016:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 61,
                        "src": "3033:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:0"
                  },
                  "src": "2973:75:0"
                },
                {
                  "documentation": {
                    "id": 62,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 66,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "3237:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:0"
                  },
                  "src": "3211:42:0"
                },
                {
                  "documentation": {
                    "id": 67,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 71,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 71,
                        "src": "3451:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:0"
                  },
                  "src": "3423:46:0"
                },
                {
                  "documentation": {
                    "id": 72,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:0",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 78,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 77,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "3760:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 76,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 78,
                        "src": "3778:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 75,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:0"
                  },
                  "src": "3727:68:0"
                },
                {
                  "documentation": {
                    "id": 79,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 83,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 82,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 83,
                        "src": "4008:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:0"
                  },
                  "src": "3980:46:0"
                },
                {
                  "documentation": {
                    "id": 84,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:0",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 88,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 87,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 86,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 88,
                        "src": "4262:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 85,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:0"
                  },
                  "src": "4234:46:0"
                }
              ],
              "scope": 137,
              "src": "2190:2092:0",
              "usedErrors": [
                47,
                52,
                61,
                66,
                71,
                78,
                83,
                88
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 90,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:0",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 136,
              "linearizedBaseContracts": [
                136
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 91,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:0",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 101,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4860:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4876:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 97,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4893:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 99,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4909:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:0"
                  },
                  "src": "4827:99:0"
                },
                {
                  "documentation": {
                    "id": 102,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:0",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 106,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "5116:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:0"
                  },
                  "src": "5089:43:0"
                },
                {
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:0",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 111,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 110,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 109,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 111,
                        "src": "5331:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 108,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:0"
                  },
                  "src": "5302:47:0"
                },
                {
                  "documentation": {
                    "id": 112,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:0",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 118,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "5651:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 118,
                        "src": "5669:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:0"
                  },
                  "src": "5616:68:0"
                },
                {
                  "documentation": {
                    "id": 119,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:0",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 123,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 122,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 121,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 123,
                        "src": "5898:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 120,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:0"
                  },
                  "src": "5869:47:0"
                },
                {
                  "documentation": {
                    "id": 124,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:0",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 128,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 127,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 126,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "6153:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:0"
                  },
                  "src": "6124:47:0"
                },
                {
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:0",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 135,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "6494:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "6513:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:0"
                  },
                  "src": "6462:73:0"
                }
              ],
              "scope": 137,
              "src": "4430:2107:0",
              "usedErrors": [
                101,
                106,
                111,
                118,
                123,
                128,
                135
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              785
            ],
            "ERC20": [
              651
            ],
            "IERC20": [
              729
            ],
            "IERC20Errors": [
              41
            ],
            "IERC20Metadata": [
              755
            ]
          },
          "id": 652,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 138,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 140,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 730,
              "src": "131:36:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 139,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 729,
                    "src": "139:6:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 142,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 756,
              "src": "168:63:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 141,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 755,
                    "src": "176:14:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 144,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 786,
              "src": "232:48:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 143,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 785,
                    "src": "240:7:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 146,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 652,
              "sourceUnit": 137,
              "src": "281:65:1",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 145,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41,
                    "src": "289:12:1",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 148,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 785,
                    "src": "1133:7:1"
                  },
                  "id": 149,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:1"
                },
                {
                  "baseName": {
                    "id": 150,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 729,
                    "src": "1142:6:1"
                  },
                  "id": 151,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:1"
                },
                {
                  "baseName": {
                    "id": 152,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 755,
                    "src": "1150:14:1"
                  },
                  "id": 153,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:1"
                },
                {
                  "baseName": {
                    "id": 154,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 41,
                    "src": "1166:12:1"
                  },
                  "id": 155,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:1"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 147,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:1",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 651,
              "linearizedBaseContracts": [
                651,
                41,
                755,
                729,
                785
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 159,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1185:53:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 158,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:1",
                    "keyType": {
                      "id": 156,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 157,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1245:83:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 164,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:1",
                    "keyType": {
                      "id": 160,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 163,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:1",
                      "keyType": {
                        "id": 161,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1335:28:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 169,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1370:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 651,
                  "src": "1396:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 187,
                    "nodeType": "Block",
                    "src": "1638:57:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 179,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1648:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 180,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 174,
                            "src": "1656:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 182,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:1"
                      },
                      {
                        "expression": {
                          "id": 185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 183,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1671:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 184,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 176,
                            "src": "1681:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 186,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 172,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:1",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 188,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1594:19:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 188,
                        "src": "1615:21:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:1"
                  },
                  "returnParameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:1"
                  },
                  "scope": 651,
                  "src": "1582:113:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    742
                  ],
                  "body": {
                    "id": 196,
                    "nodeType": "Block",
                    "src": "1820:29:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 194,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "1837:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 193,
                        "id": 195,
                        "nodeType": "Return",
                        "src": "1830:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 189,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:1",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 197,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 190,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:1"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 197,
                        "src": "1805:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:1"
                  },
                  "scope": 651,
                  "src": "1760:89:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    748
                  ],
                  "body": {
                    "id": 205,
                    "nodeType": "Block",
                    "src": "2024:31:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 203,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2041:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 204,
                        "nodeType": "Return",
                        "src": "2034:14:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 198,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:1",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 206,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:1"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 206,
                        "src": "2009:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:1"
                  },
                  "scope": 651,
                  "src": "1962:93:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    754
                  ],
                  "body": {
                    "id": 214,
                    "nodeType": "Block",
                    "src": "2744:26:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 211,
                        "id": 213,
                        "nodeType": "Return",
                        "src": "2754:9:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 207,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:1",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 215,
                        "src": "2737:5:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:1"
                  },
                  "scope": 651,
                  "src": "2688:82:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    678
                  ],
                  "body": {
                    "id": 223,
                    "nodeType": "Block",
                    "src": "2891:36:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 221,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "2908:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 220,
                        "id": 222,
                        "nodeType": "Return",
                        "src": "2901:19:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 216,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:1",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 224,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:1"
                  },
                  "returnParameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2882:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:1"
                  },
                  "scope": 651,
                  "src": "2830:97:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    686
                  ],
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "3059:42:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 232,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 159,
                            "src": "3076:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 234,
                          "indexExpression": {
                            "id": 233,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "3086:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 231,
                        "id": 235,
                        "nodeType": "Return",
                        "src": "3069:25:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 225,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:1",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 227,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "3004:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:1"
                  },
                  "returnParameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 230,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "3050:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:1"
                  },
                  "scope": 651,
                  "src": "2985:116:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    696
                  ],
                  "body": {
                    "id": 260,
                    "nodeType": "Block",
                    "src": "3371:103:1",
                    "statements": [
                      {
                        "assignments": [
                          248
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 248,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 260,
                            "src": "3381:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 247,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 251,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 249,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "3397:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 253,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "3429:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 254,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 240,
                              "src": "3436:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 255,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 242,
                              "src": "3440:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 252,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "3419:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 257,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 246,
                        "id": 259,
                        "nodeType": "Return",
                        "src": "3456:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 238,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:1",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 261,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3314:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3326:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:1"
                  },
                  "returnParameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 245,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 261,
                        "src": "3365:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 244,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:1"
                  },
                  "scope": 651,
                  "src": "3296:178:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    706
                  ],
                  "body": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "3621:51:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 271,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 165,
                              "src": "3638:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 273,
                            "indexExpression": {
                              "id": 272,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "3650:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 275,
                          "indexExpression": {
                            "id": 274,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3657:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 270,
                        "id": 276,
                        "nodeType": "Return",
                        "src": "3631:34:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 262,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:1",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 278,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3551:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3566:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:1"
                  },
                  "returnParameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3612:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:1"
                  },
                  "scope": 651,
                  "src": "3532:140:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    716
                  ],
                  "body": {
                    "id": 301,
                    "nodeType": "Block",
                    "src": "4058:107:1",
                    "statements": [
                      {
                        "assignments": [
                          289
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 289,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 301,
                            "src": "4068:13:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 292,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 290,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "4084:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 294,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 289,
                              "src": "4115:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 295,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "4122:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 296,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "4131:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 293,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              542,
                              602
                            ],
                            "referencedDeclaration": 542,
                            "src": "4106:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 298,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 287,
                        "id": 300,
                        "nodeType": "Return",
                        "src": "4147:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 279,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:1",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "3996:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 283,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "4013:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:1"
                  },
                  "returnParameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "4052:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:1"
                  },
                  "scope": 651,
                  "src": "3979:186:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    728
                  ],
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "4850:151:1",
                    "statements": [
                      {
                        "assignments": [
                          315
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 315,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 333,
                            "src": "4860:15:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 314,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 318,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 316,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 767,
                            "src": "4878:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 320,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "4916:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 321,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 315,
                              "src": "4922:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 322,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4931:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 319,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "4900:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 324,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 326,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 305,
                              "src": "4957:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 327,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "4963:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 328,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4967:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 325,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 381,
                            "src": "4947:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 330,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:1"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 313,
                        "id": 332,
                        "nodeType": "Return",
                        "src": "4983:11:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 303,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:1",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 310,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4779:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 307,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4793:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 306,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4805:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:1"
                  },
                  "returnParameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "4844:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:1"
                  },
                  "scope": 651,
                  "src": "4757:244:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 380,
                    "nodeType": "Block",
                    "src": "5443:231:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 344,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 337,
                            "src": "5457:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 347,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 345,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 358,
                        "nodeType": "IfStatement",
                        "src": "5453:86:1",
                        "trueBody": {
                          "id": 357,
                          "nodeType": "Block",
                          "src": "5477:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 353,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 352,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 351,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 354,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 350,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "5498:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 356,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 359,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "5552:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 360,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 363,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 373,
                        "nodeType": "IfStatement",
                        "src": "5548:86:1",
                        "trueBody": {
                          "id": 372,
                          "nodeType": "Block",
                          "src": "5570:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 368,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 367,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 366,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 365,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5591:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 371,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 375,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 337,
                              "src": "5651:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 376,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "5657:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 377,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 341,
                              "src": "5661:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 374,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "5643:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 335,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 381,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 337,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5393:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5407:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 381,
                        "src": "5419:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:1"
                  },
                  "returnParameters": {
                    "id": 343,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:1"
                  },
                  "scope": 651,
                  "src": "5374:300:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 457,
                    "nodeType": "Block",
                    "src": "6064:1032:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 391,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 384,
                            "src": "6078:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 392,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 428,
                          "nodeType": "Block",
                          "src": "6252:362:1",
                          "statements": [
                            {
                              "assignments": [
                                403
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 403,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 428,
                                  "src": "6266:19:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 402,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 407,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 404,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 159,
                                  "src": "6288:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 406,
                                "indexExpression": {
                                  "id": 405,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "6298:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 410,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 408,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "6321:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 409,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "6335:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 418,
                              "nodeType": "IfStatement",
                              "src": "6317:115:1",
                              "trueBody": {
                                "id": 417,
                                "nodeType": "Block",
                                "src": "6342:90:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 412,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 384,
                                          "src": "6392:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 413,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 403,
                                          "src": "6398:11:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 414,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 388,
                                          "src": "6411:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 411,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11,
                                        "src": "6367:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 415,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 416,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 427,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 425,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 419,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "6552:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 421,
                                      "indexExpression": {
                                        "id": 420,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 384,
                                        "src": "6562:4:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 424,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 422,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 403,
                                        "src": "6570:11:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 423,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 388,
                                        "src": "6584:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 426,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 429,
                        "nodeType": "IfStatement",
                        "src": "6074:540:1",
                        "trueBody": {
                          "id": 401,
                          "nodeType": "Block",
                          "src": "6098:148:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 397,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 167,
                                  "src": "6214:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 398,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 388,
                                  "src": "6230:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 400,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 430,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 386,
                            "src": "6628:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 431,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 449,
                          "nodeType": "Block",
                          "src": "6843:206:1",
                          "statements": [
                            {
                              "id": 448,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 442,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 159,
                                        "src": "7002:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 444,
                                      "indexExpression": {
                                        "id": 443,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 386,
                                        "src": "7012:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 445,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 388,
                                      "src": "7019:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 447,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:1"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 450,
                        "nodeType": "IfStatement",
                        "src": "6624:425:1",
                        "trueBody": {
                          "id": 441,
                          "nodeType": "Block",
                          "src": "6646:191:1",
                          "statements": [
                            {
                              "id": 440,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 436,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 167,
                                      "src": "6791:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 437,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 388,
                                      "src": "6807:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 439,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:1"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 452,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "7073:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 453,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 386,
                              "src": "7079:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 454,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 388,
                              "src": "7083:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 451,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 663,
                            "src": "7064:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 456,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:1",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 458,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6006:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6020:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 458,
                        "src": "6032:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:1"
                  },
                  "returnParameters": {
                    "id": 390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:1"
                  },
                  "scope": 651,
                  "src": "5989:1107:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 490,
                    "nodeType": "Block",
                    "src": "7495:152:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 466,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 461,
                            "src": "7509:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 469,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 467,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 480,
                        "nodeType": "IfStatement",
                        "src": "7505:91:1",
                        "trueBody": {
                          "id": 479,
                          "nodeType": "Block",
                          "src": "7532:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 475,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 474,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 473,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 476,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 472,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "7553:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 477,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 478,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 484,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 483,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 482,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 486,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 461,
                              "src": "7625:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 487,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "7634:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 481,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "7605:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 459,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:1",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 491,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 461,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "7454:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 491,
                        "src": "7471:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:1"
                  },
                  "returnParameters": {
                    "id": 465,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:1"
                  },
                  "scope": 651,
                  "src": "7439:208:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "8021:150:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 499,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 494,
                            "src": "8035:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 500,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 513,
                        "nodeType": "IfStatement",
                        "src": "8031:89:1",
                        "trueBody": {
                          "id": 512,
                          "nodeType": "Block",
                          "src": "8058:62:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 508,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 507,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 506,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 509,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 505,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16,
                                  "src": "8079:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 511,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 515,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 494,
                              "src": "8137:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 516,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 520,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "8158:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 514,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 458,
                            "src": "8129:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 492,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:1",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 494,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7980:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 493,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 496,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7997:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:1"
                  },
                  "returnParameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:1"
                  },
                  "scope": 651,
                  "src": "7965:206:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 541,
                    "nodeType": "Block",
                    "src": "8781:54:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 535,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 527,
                              "src": "8800:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 536,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 529,
                              "src": "8807:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 537,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 531,
                              "src": "8816:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 534,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              542,
                              602
                            ],
                            "referencedDeclaration": 602,
                            "src": "8791:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 540,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 525,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:1",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 542,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8725:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 529,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8740:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 528,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "8757:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:1"
                  },
                  "returnParameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:1"
                  },
                  "scope": 651,
                  "src": "8707:128:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 601,
                    "nodeType": "Block",
                    "src": "9780:334:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 554,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 545,
                            "src": "9794:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 555,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 558,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 568,
                        "nodeType": "IfStatement",
                        "src": "9790:89:1",
                        "trueBody": {
                          "id": 567,
                          "nodeType": "Block",
                          "src": "9815:64:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 563,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 562,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 561,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 564,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 560,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "9836:20:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 566,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:1"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 569,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 547,
                            "src": "9892:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 570,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 583,
                        "nodeType": "IfStatement",
                        "src": "9888:90:1",
                        "trueBody": {
                          "id": 582,
                          "nodeType": "Block",
                          "src": "9915:63:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 578,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 577,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 576,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 575,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "9936:19:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 581,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:1"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 584,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 165,
                                "src": "9987:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 587,
                              "indexExpression": {
                                "id": 585,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 545,
                                "src": "9999:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 588,
                            "indexExpression": {
                              "id": 586,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 547,
                              "src": "10006:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 589,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 549,
                            "src": "10017:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 591,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:1"
                      },
                      {
                        "condition": {
                          "id": 592,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 551,
                          "src": "10036:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 600,
                        "nodeType": "IfStatement",
                        "src": "10032:76:1",
                        "trueBody": {
                          "id": 599,
                          "nodeType": "Block",
                          "src": "10047:61:1",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 594,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 545,
                                    "src": "10075:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 595,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 547,
                                    "src": "10082:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 596,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 549,
                                    "src": "10091:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 593,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 672,
                                  "src": "10066:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 597,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 598,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:1"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 543,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:1",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 602,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 552,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 545,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9700:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 544,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 547,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9715:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 546,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 549,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9732:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 548,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 551,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 602,
                        "src": "9747:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:1"
                  },
                  "returnParameters": {
                    "id": 553,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:1"
                  },
                  "scope": 651,
                  "src": "9682:432:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 649,
                    "nodeType": "Block",
                    "src": "10485:387:1",
                    "statements": [
                      {
                        "assignments": [
                          613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 613,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 649,
                            "src": "10495:24:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 612,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 618,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 615,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 605,
                              "src": "10532:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 616,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 607,
                              "src": "10539:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 614,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 278,
                            "src": "10522:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 619,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 613,
                            "src": "10561:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 621,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:1",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 620,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10580:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:1",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 648,
                        "nodeType": "IfStatement",
                        "src": "10557:309:1",
                        "trueBody": {
                          "id": 647,
                          "nodeType": "Block",
                          "src": "10599:267:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 626,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 613,
                                  "src": "10617:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 627,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 609,
                                  "src": "10636:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 636,
                              "nodeType": "IfStatement",
                              "src": "10613:130:1",
                              "trueBody": {
                                "id": 635,
                                "nodeType": "Block",
                                "src": "10643:100:1",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 630,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 607,
                                          "src": "10695:7:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 631,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 613,
                                          "src": "10704:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 632,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "10722:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 629,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30,
                                        "src": "10668:26:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 633,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 634,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:1"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 646,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:1",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 638,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 605,
                                        "src": "10793:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 639,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 607,
                                        "src": "10800:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 642,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 640,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 613,
                                          "src": "10809:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 641,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 609,
                                          "src": "10828:5:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 643,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 637,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        542,
                                        602
                                      ],
                                      "referencedDeclaration": 602,
                                      "src": "10784:8:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 644,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 645,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:1"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 603,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:1",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 650,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 605,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10421:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 604,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 607,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10436:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 606,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 650,
                        "src": "10453:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:1"
                  },
                  "returnParameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:1"
                  },
                  "scope": 651,
                  "src": "10396:476:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 652,
              "src": "1106:9768:1",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "105:10770:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ]
          },
          "id": 730,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 653,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 654,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:2",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 729,
              "linearizedBaseContracts": [
                729
              ],
              "name": "IERC20",
              "nameLocation": "214:6:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 655,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:2",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 663,
                  "name": "Transfer",
                  "nameLocation": "396:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 657,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "405:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 656,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 659,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "427:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 663,
                        "src": "447:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:2"
                  },
                  "src": "390:72:2"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 664,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:2",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 672,
                  "name": "Approval",
                  "nameLocation": "627:8:2",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 671,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 666,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "636:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 668,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "659:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 667,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 670,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 672,
                        "src": "684:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 669,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:2"
                  },
                  "src": "621:78:2"
                },
                {
                  "documentation": {
                    "id": 673,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:2",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 678,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:2"
                  },
                  "returnParameters": {
                    "id": 677,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 676,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 678,
                        "src": "821:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 675,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:2"
                  },
                  "scope": 729,
                  "src": "775:55:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 679,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:2",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 686,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "931:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:2"
                  },
                  "returnParameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 686,
                        "src": "971:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:2"
                  },
                  "scope": 729,
                  "src": "912:68:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 687,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:2",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 696,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 689,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1222:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1234:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:2"
                  },
                  "returnParameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 696,
                        "src": "1267:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:2"
                  },
                  "scope": 729,
                  "src": "1204:69:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 697,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:2",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 706,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1567:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1582:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:2"
                  },
                  "returnParameters": {
                    "id": 705,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 704,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "1622:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:2"
                  },
                  "scope": 729,
                  "src": "1548:83:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 707,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:2",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 716,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 709,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2326:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 711,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2343:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 710,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:2"
                  },
                  "returnParameters": {
                    "id": 715,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 716,
                        "src": "2376:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:2"
                  },
                  "scope": 729,
                  "src": "2309:73:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 717,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:2",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 728,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 724,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2712:12:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 721,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2726:10:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 720,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 723,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2738:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 722,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:2"
                  },
                  "returnParameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 726,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 728,
                        "src": "2771:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:2"
                  },
                  "scope": 729,
                  "src": "2690:87:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 730,
              "src": "204:2575:2",
              "usedErrors": [],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "106:2674:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ],
            "IERC20Metadata": [
              755
            ]
          },
          "id": 756,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 731,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 733,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 756,
              "sourceUnit": 730,
              "src": "151:37:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 732,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 729,
                    "src": "159:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 735,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 729,
                    "src": "306:6:3"
                  },
                  "id": 736,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:3"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 734,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:3",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 755,
              "linearizedBaseContracts": [
                755,
                729
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 737,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 742,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:3"
                  },
                  "returnParameters": {
                    "id": 741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "417:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:3"
                  },
                  "scope": 755,
                  "src": "378:54:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 743,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:3",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 748,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 744,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:3"
                  },
                  "returnParameters": {
                    "id": 747,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 748,
                        "src": "540:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:3"
                  },
                  "scope": 755,
                  "src": "499:56:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 749,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:3",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 754,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 750,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:3"
                  },
                  "returnParameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 752,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "674:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:3"
                  },
                  "scope": 755,
                  "src": "631:50:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 756,
              "src": "278:405:3",
              "usedErrors": [],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "125:559:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              785
            ]
          },
          "id": 786,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 757,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:4"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 758,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:4",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 785,
              "linearizedBaseContracts": [
                785
              ],
              "name": "Context",
              "nameLocation": "642:7:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 766,
                    "nodeType": "Block",
                    "src": "718:34:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 763,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 762,
                        "id": 765,
                        "nodeType": "Return",
                        "src": "728:17:4"
                      }
                    ]
                  },
                  "id": 767,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 759,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:4"
                  },
                  "returnParameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 761,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 767,
                        "src": "709:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:4"
                  },
                  "scope": 785,
                  "src": "656:96:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 775,
                    "nodeType": "Block",
                    "src": "825:32:4",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 772,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:4",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 771,
                        "id": 774,
                        "nodeType": "Return",
                        "src": "835:15:4"
                      }
                    ]
                  },
                  "id": 776,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:4"
                  },
                  "returnParameters": {
                    "id": 771,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 770,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 776,
                        "src": "809:14:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 769,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:4"
                  },
                  "scope": 785,
                  "src": "758:99:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 783,
                    "nodeType": "Block",
                    "src": "935:25:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 780,
                        "id": 782,
                        "nodeType": "Return",
                        "src": "945:8:4"
                      }
                    ]
                  },
                  "id": 784,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 777,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:4"
                  },
                  "returnParameters": {
                    "id": 780,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 779,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 784,
                        "src": "926:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:4"
                  },
                  "scope": 785,
                  "src": "863:97:4",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 786,
              "src": "624:338:4",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              854
            ]
          },
          "id": 855,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 787,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 788,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:5",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 854,
              "linearizedBaseContracts": [
                854
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 791,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "1818:40:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 789,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 794,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "1864:36:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 796,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 854,
                  "src": "1907:23:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 795,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 797,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:5",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 799,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:5",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:5"
                  },
                  "src": "1994:37:5"
                },
                {
                  "body": {
                    "id": 806,
                    "nodeType": "Block",
                    "src": "2051:38:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 802,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "2061:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 803,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "2071:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 805,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:5"
                      }
                    ]
                  },
                  "id": 807,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 800,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:5"
                  },
                  "returnParameters": {
                    "id": 801,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:5"
                  },
                  "scope": 854,
                  "src": "2037:52:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 817,
                    "nodeType": "Block",
                    "src": "2490:79:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 810,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 834,
                            "src": "2500:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 812,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:5"
                      },
                      {
                        "id": 813,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:5"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 814,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 842,
                            "src": "2542:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 816,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 808,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:5",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 818,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:5",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:5"
                  },
                  "src": "2466:103:5",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 833,
                    "nodeType": "Block",
                    "src": "2614:268:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 821,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "2702:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 822,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "2713:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 828,
                        "nodeType": "IfStatement",
                        "src": "2698:86:5",
                        "trueBody": {
                          "id": 827,
                          "nodeType": "Block",
                          "src": "2722:62:5",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 824,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 799,
                                  "src": "2743:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 826,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 829,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "2858:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 830,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "2868:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 832,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:5"
                      }
                    ]
                  },
                  "id": 834,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 819,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:5"
                  },
                  "returnParameters": {
                    "id": 820,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:5"
                  },
                  "scope": 854,
                  "src": "2575:307:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 841,
                    "nodeType": "Block",
                    "src": "2926:170:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 837,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "3068:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 838,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "3078:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 840,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:5"
                      }
                    ]
                  },
                  "id": 842,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 835,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:5"
                  },
                  "returnParameters": {
                    "id": 836,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:5"
                  },
                  "scope": 854,
                  "src": "2888:208:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 852,
                    "nodeType": "Block",
                    "src": "3339:42:5",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 848,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 796,
                            "src": "3356:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 849,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 794,
                            "src": "3367:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 847,
                        "id": 851,
                        "nodeType": "Return",
                        "src": "3349:25:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 843,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:5",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 853,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:5"
                  },
                  "returnParameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 853,
                        "src": "3333:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:5"
                  },
                  "scope": 854,
                  "src": "3275:106:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 855,
              "src": "1030:2353:5",
              "usedErrors": [
                799
              ],
              "usedEvents": []
            }
          ],
          "src": "109:3275:5"
        },
        "id": 5
      },
      "contracts/Giveaways.sol": {
        "ast": {
          "absolutePath": "contracts/Giveaways.sol",
          "exportedSymbols": {
            "Giveaways": [
              1607
            ],
            "IERC20": [
              729
            ],
            "IPayment": [
              2546
            ],
            "ReentrancyGuard": [
              854
            ]
          },
          "id": 1608,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 856,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:6"
            },
            {
              "absolutePath": "contracts/interfaces/iPayment.sol",
              "file": "./interfaces/iPayment.sol",
              "id": 857,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1608,
              "sourceUnit": 2547,
              "src": "64:35:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 858,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1608,
              "sourceUnit": 855,
              "src": "100:59:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 859,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "182:15:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 854,
                    "src": "182:15:6"
                  },
                  "id": 860,
                  "nodeType": "InheritanceSpecifier",
                  "src": "182:15:6"
                }
              ],
              "canonicalName": "Giveaways",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1607,
              "linearizedBaseContracts": [
                1607,
                854
              ],
              "name": "Giveaways",
              "nameLocation": "169:9:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Giveaways.Giveaway",
                  "id": 885,
                  "members": [
                    {
                      "constant": false,
                      "id": 862,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "237:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "229:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 861,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "229:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 865,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "260:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "252:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$729",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 864,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 863,
                          "name": "IERC20",
                          "nameLocations": [
                            "252:6:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 729,
                          "src": "252:6:6"
                        },
                        "referencedDeclaration": 729,
                        "src": "252:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 867,
                      "mutability": "mutable",
                      "name": "prize",
                      "nameLocation": "283:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "275:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 866,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "275:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 870,
                      "mutability": "mutable",
                      "name": "prizeType",
                      "nameLocation": "306:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "298:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                        "typeString": "uint8[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 868,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "298:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 869,
                        "nodeType": "ArrayTypeName",
                        "src": "298:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                          "typeString": "uint8[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 872,
                      "mutability": "mutable",
                      "name": "startTime",
                      "nameLocation": "334:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "326:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 871,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "326:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 874,
                      "mutability": "mutable",
                      "name": "endTime",
                      "nameLocation": "361:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "353:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 873,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "353:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 876,
                      "mutability": "mutable",
                      "name": "prizeTime",
                      "nameLocation": "386:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "378:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 875,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "378:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 879,
                      "mutability": "mutable",
                      "name": "users",
                      "nameLocation": "417:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "406:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 877,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 878,
                        "nodeType": "ArrayTypeName",
                        "src": "406:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 882,
                      "mutability": "mutable",
                      "name": "winners",
                      "nameLocation": "443:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "432:18:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 880,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "432:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 881,
                        "nodeType": "ArrayTypeName",
                        "src": "432:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 884,
                      "mutability": "mutable",
                      "name": "active",
                      "nameLocation": "469:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 885,
                      "src": "461:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 883,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "461:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Giveaway",
                  "nameLocation": "210:8:6",
                  "nodeType": "StructDefinition",
                  "scope": 1607,
                  "src": "203:279:6",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 887,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "495:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "487:10:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 886,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 890,
                  "mutability": "mutable",
                  "name": "payment",
                  "nameLocation": "512:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "503:16:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPayment_$2546",
                    "typeString": "contract IPayment"
                  },
                  "typeName": {
                    "id": 889,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 888,
                      "name": "IPayment",
                      "nameLocations": [
                        "503:8:6"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2546,
                      "src": "503:8:6"
                    },
                    "referencedDeclaration": 2546,
                    "src": "503:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPayment_$2546",
                      "typeString": "contract IPayment"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 892,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "548:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "525:28:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:15:6",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "giveaways",
                  "nameLocation": "588:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "559:38:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                    "typeString": "mapping(uint64 => struct Giveaways.Giveaway)"
                  },
                  "typeName": {
                    "id": 896,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 893,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "568:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "559:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                      "typeString": "mapping(uint64 => struct Giveaways.Giveaway)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 895,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 894,
                        "name": "Giveaway",
                        "nameLocations": [
                          "578:8:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 885,
                        "src": "578:8:6"
                      },
                      "referencedDeclaration": 885,
                      "src": "578:8:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                        "typeString": "struct Giveaways.Giveaway"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 903,
                  "mutability": "mutable",
                  "name": "usersId",
                  "nameLocation": "651:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1607,
                  "src": "603:55:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_uint64_$_$",
                    "typeString": "mapping(uint64 => mapping(address => uint64))"
                  },
                  "typeName": {
                    "id": 902,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 898,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "612:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "603:47:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_uint64_$_$",
                      "typeString": "mapping(uint64 => mapping(address => uint64))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 901,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 899,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "631:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "622:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                        "typeString": "mapping(address => uint64)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 900,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "642:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9a9c2f752930c6b65ffe6835d58a652f85b2e0d2ce30c65872c1598efeced2bd",
                  "id": 912,
                  "name": "sendMoney",
                  "nameLocation": "670:9:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 905,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "688:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "680:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 904,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "680:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 907,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "699:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "694:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "694:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "714:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "707:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 909,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 908,
                            "name": "IERC20",
                            "nameLocations": [
                              "707:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "707:6:6"
                          },
                          "referencedDeclaration": 729,
                          "src": "707:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "679:41:6"
                  },
                  "src": "664:57:6"
                },
                {
                  "anonymous": false,
                  "eventSelector": "04c28ec0338a332133e6498addd8448c2a3391e5266cc871da83916c27ee191d",
                  "id": 919,
                  "name": "endGiveaways",
                  "nameLocation": "732:12:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 918,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 914,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "752:2:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "745:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 913,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 917,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "765:4:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 919,
                        "src": "756:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                          "typeString": "struct Giveaways.Giveaway"
                        },
                        "typeName": {
                          "id": 916,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 915,
                            "name": "Giveaway",
                            "nameLocations": [
                              "756:8:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 885,
                            "src": "756:8:6"
                          },
                          "referencedDeclaration": 885,
                          "src": "756:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                            "typeString": "struct Giveaways.Giveaway"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "744:26:6"
                  },
                  "src": "726:45:6"
                },
                {
                  "body": {
                    "id": 937,
                    "nodeType": "Block",
                    "src": "807:72:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 925,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 892,
                            "src": "817:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 928,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "833:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "837:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "833:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 927,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "825:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 926,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "825:8:6",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "825:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "817:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 932,
                        "nodeType": "ExpressionStatement",
                        "src": "817:27:6"
                      },
                      {
                        "expression": {
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 933,
                            "name": "payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 890,
                            "src": "854:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPayment_$2546",
                              "typeString": "contract IPayment"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 934,
                            "name": "_payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 922,
                            "src": "864:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPayment_$2546",
                              "typeString": "contract IPayment"
                            }
                          },
                          "src": "854:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPayment_$2546",
                            "typeString": "contract IPayment"
                          }
                        },
                        "id": 936,
                        "nodeType": "ExpressionStatement",
                        "src": "854:18:6"
                      }
                    ]
                  },
                  "id": 938,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 923,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 922,
                        "mutability": "mutable",
                        "name": "_payment",
                        "nameLocation": "797:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 938,
                        "src": "788:17:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPayment_$2546",
                          "typeString": "contract IPayment"
                        },
                        "typeName": {
                          "id": 921,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 920,
                            "name": "IPayment",
                            "nameLocations": [
                              "788:8:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2546,
                            "src": "788:8:6"
                          },
                          "referencedDeclaration": 2546,
                          "src": "788:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPayment_$2546",
                            "typeString": "contract IPayment"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "787:19:6"
                  },
                  "returnParameters": {
                    "id": 924,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "807:0:6"
                  },
                  "scope": 1607,
                  "src": "776:103:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "902:2:6",
                    "statements": []
                  },
                  "id": 942,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 939,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:6"
                  },
                  "returnParameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "902:0:6"
                  },
                  "scope": 1607,
                  "src": "884:20:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 945,
                    "nodeType": "Block",
                    "src": "935:2:6",
                    "statements": []
                  },
                  "id": 946,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 943,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "916:2:6"
                  },
                  "returnParameters": {
                    "id": 944,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "935:0:6"
                  },
                  "scope": 1607,
                  "src": "909:28:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1049,
                    "nodeType": "Block",
                    "src": "1029:652:6",
                    "statements": [
                      {
                        "assignments": [
                          956
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 956,
                            "mutability": "mutable",
                            "name": "gw",
                            "nameLocation": "1056:2:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1049,
                            "src": "1039:19:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                              "typeString": "struct Giveaways.Giveaway"
                            },
                            "typeName": {
                              "id": 955,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 954,
                                "name": "Giveaway",
                                "nameLocations": [
                                  "1039:8:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 885,
                                "src": "1039:8:6"
                              },
                              "referencedDeclaration": 885,
                              "src": "1039:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                "typeString": "struct Giveaways.Giveaway"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 960,
                        "initialValue": {
                          "baseExpression": {
                            "id": 957,
                            "name": "giveaways",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "1061:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                              "typeString": "mapping(uint64 => struct Giveaways.Giveaway storage ref)"
                            }
                          },
                          "id": 959,
                          "indexExpression": {
                            "id": 958,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 948,
                            "src": "1071:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1061:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                            "typeString": "struct Giveaways.Giveaway storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1039:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 962,
                                  "name": "gw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 956,
                                  "src": "1093:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                    "typeString": "struct Giveaways.Giveaway storage pointer"
                                  }
                                },
                                "id": 963,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1096:7:6",
                                "memberName": "endTime",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 874,
                                "src": "1093:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 964,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "1106:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 965,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1112:9:6",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "1106:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1093:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4769766561776179206973206e6f7420656e646564",
                              "id": 967,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1123:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_86f3d997768a71d99857c05ec2c84030d89f7dedf8f4d7394d663bb7dc836de0",
                                "typeString": "literal_string \"Giveaway is not ended\""
                              },
                              "value": "Giveaway is not ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_86f3d997768a71d99857c05ec2c84030d89f7dedf8f4d7394d663bb7dc836de0",
                                "typeString": "literal_string \"Giveaway is not ended\""
                              }
                            ],
                            "id": 961,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1085:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1085:62:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 969,
                        "nodeType": "ExpressionStatement",
                        "src": "1085:62:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 971,
                                    "name": "gw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 956,
                                    "src": "1165:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                      "typeString": "struct Giveaways.Giveaway storage pointer"
                                    }
                                  },
                                  "id": 972,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1168:7:6",
                                  "memberName": "winners",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 882,
                                  "src": "1165:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 973,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1176:6:6",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "1165:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 974,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1186:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1165:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "476976656177617920697320656e646564",
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1189:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d00cea950f9e5c2ff79ac73ef64f82086554cb0ea065bb94bca753f8a8442413",
                                "typeString": "literal_string \"Giveaway is ended\""
                              },
                              "value": "Giveaway is ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d00cea950f9e5c2ff79ac73ef64f82086554cb0ea065bb94bca753f8a8442413",
                                "typeString": "literal_string \"Giveaway is ended\""
                              }
                            ],
                            "id": 970,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1157:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1157:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 978,
                        "nodeType": "ExpressionStatement",
                        "src": "1157:52:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 980,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1227:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1231:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1227:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 982,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 892,
                                "src": "1241:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1227:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f75206172656e277420746865206f776e6572",
                              "id": 984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1248:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a",
                                "typeString": "literal_string \"You aren't the owner\""
                              },
                              "value": "You aren't the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a",
                                "typeString": "literal_string \"You aren't the owner\""
                              }
                            ],
                            "id": 979,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1219:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1219:52:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 986,
                        "nodeType": "ExpressionStatement",
                        "src": "1219:52:6"
                      },
                      {
                        "expression": {
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 987,
                              "name": "gw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "1281:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                "typeString": "struct Giveaways.Giveaway storage pointer"
                              }
                            },
                            "id": 989,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1284:6:6",
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 884,
                            "src": "1281:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1294:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1281:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 992,
                        "nodeType": "ExpressionStatement",
                        "src": "1281:18:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 993,
                                "name": "gw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 956,
                                "src": "1312:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                  "typeString": "struct Giveaways.Giveaway storage pointer"
                                }
                              },
                              "id": 994,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1315:5:6",
                              "memberName": "users",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 879,
                              "src": "1312:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1321:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1312:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 996,
                                "name": "gw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 956,
                                "src": "1330:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                  "typeString": "struct Giveaways.Giveaway storage pointer"
                                }
                              },
                              "id": 997,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1333:9:6",
                              "memberName": "prizeType",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 870,
                              "src": "1330:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                                "typeString": "uint8[] storage ref"
                              }
                            },
                            "id": 998,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1343:6:6",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1330:19:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1312:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1036,
                          "nodeType": "Block",
                          "src": "1510:98:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "expression": {
                                            "id": 1026,
                                            "name": "_winners",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 951,
                                            "src": "1533:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1027,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "1542:6:6",
                                          "memberName": "length",
                                          "nodeType": "MemberAccess",
                                          "src": "1533:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1028,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1532:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 1029,
                                          "name": "gw",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 956,
                                          "src": "1553:2:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                            "typeString": "struct Giveaways.Giveaway storage pointer"
                                          }
                                        },
                                        "id": 1030,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "1556:9:6",
                                        "memberName": "prizeType",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 870,
                                        "src": "1553:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint8_$dyn_storage",
                                          "typeString": "uint8[] storage ref"
                                        }
                                      },
                                      "id": 1031,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "1566:6:6",
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "1553:19:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1532:40:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "57726f6e672077696e6e65727320616d6f756e74",
                                    "id": 1033,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1574:22:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_820b500a778c1d8b4a09db8ef6f69e85e870de30ba1ab591291a6f9336a48b34",
                                      "typeString": "literal_string \"Wrong winners amount\""
                                    },
                                    "value": "Wrong winners amount"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_820b500a778c1d8b4a09db8ef6f69e85e870de30ba1ab591291a6f9336a48b34",
                                      "typeString": "literal_string \"Wrong winners amount\""
                                    }
                                  ],
                                  "id": 1025,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "1524:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1524:73:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1035,
                              "nodeType": "ExpressionStatement",
                              "src": "1524:73:6"
                            }
                          ]
                        },
                        "id": 1037,
                        "nodeType": "IfStatement",
                        "src": "1309:299:6",
                        "trueBody": {
                          "id": 1024,
                          "nodeType": "Block",
                          "src": "1350:156:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1001,
                                      "name": "gw",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 956,
                                      "src": "1369:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                        "typeString": "struct Giveaways.Giveaway storage pointer"
                                      }
                                    },
                                    "id": 1002,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1372:5:6",
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 865,
                                    "src": "1369:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1003,
                                      "name": "gw",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 956,
                                      "src": "1378:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                        "typeString": "struct Giveaways.Giveaway storage pointer"
                                      }
                                    },
                                    "id": 1004,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1381:5:6",
                                    "memberName": "prize",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 867,
                                    "src": "1378:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1005,
                                      "name": "gw",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 956,
                                      "src": "1387:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                        "typeString": "struct Giveaways.Giveaway storage pointer"
                                      }
                                    },
                                    "id": 1006,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1390:5:6",
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 862,
                                    "src": "1387:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1000,
                                  "name": "send",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1514,
                                  "src": "1364:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$returns$__$",
                                    "typeString": "function (contract IERC20,uint256,address)"
                                  }
                                },
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1364:32:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1008,
                              "nodeType": "ExpressionStatement",
                              "src": "1364:32:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1014,
                                      "name": "gw",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 956,
                                      "src": "1426:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                        "typeString": "struct Giveaways.Giveaway storage pointer"
                                      }
                                    },
                                    "id": 1015,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1429:5:6",
                                    "memberName": "owner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 862,
                                    "src": "1426:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 1009,
                                      "name": "gw",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 956,
                                      "src": "1410:2:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                        "typeString": "struct Giveaways.Giveaway storage pointer"
                                      }
                                    },
                                    "id": 1012,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1413:7:6",
                                    "memberName": "winners",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 882,
                                    "src": "1410:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1013,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1421:4:6",
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "1410:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 1016,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1410:25:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1017,
                              "nodeType": "ExpressionStatement",
                              "src": "1410:25:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1019,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 948,
                                    "src": "1467:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  {
                                    "id": 1020,
                                    "name": "gw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 956,
                                    "src": "1472:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                      "typeString": "struct Giveaways.Giveaway storage pointer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                      "typeString": "struct Giveaways.Giveaway storage pointer"
                                    }
                                  ],
                                  "id": 1018,
                                  "name": "endGiveaways",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 919,
                                  "src": "1454:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_struct$_Giveaway_$885_memory_ptr_$returns$__$",
                                    "typeString": "function (uint64,struct Giveaways.Giveaway memory)"
                                  }
                                },
                                "id": 1021,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1454:21:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1022,
                              "nodeType": "EmitStatement",
                              "src": "1449:26:6"
                            },
                            {
                              "functionReturnParameters": 953,
                              "id": 1023,
                              "nodeType": "Return",
                              "src": "1489:7:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1038,
                              "name": "gw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "1617:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                "typeString": "struct Giveaways.Giveaway storage pointer"
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1620:7:6",
                            "memberName": "winners",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 882,
                            "src": "1617:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1041,
                            "name": "_winners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "1630:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "src": "1617:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1043,
                        "nodeType": "ExpressionStatement",
                        "src": "1617:21:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1045,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "1666:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 1046,
                              "name": "gw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 956,
                              "src": "1671:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                "typeString": "struct Giveaways.Giveaway storage pointer"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                "typeString": "struct Giveaways.Giveaway storage pointer"
                              }
                            ],
                            "id": 1044,
                            "name": "endGiveaways",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 919,
                            "src": "1653:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_struct$_Giveaway_$885_memory_ptr_$returns$__$",
                              "typeString": "function (uint64,struct Giveaways.Giveaway memory)"
                            }
                          },
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1653:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1048,
                        "nodeType": "EmitStatement",
                        "src": "1648:26:6"
                      }
                    ]
                  },
                  "functionSelector": "5352937f",
                  "id": 1050,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "endGiveaway",
                  "nameLocation": "969:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 948,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "988:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1050,
                        "src": "981:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 947,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "981:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 951,
                        "mutability": "mutable",
                        "name": "_winners",
                        "nameLocation": "1010:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1050,
                        "src": "993:25:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 949,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "993:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 950,
                          "nodeType": "ArrayTypeName",
                          "src": "993:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "980:39:6"
                  },
                  "returnParameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1029:0:6"
                  },
                  "scope": 1607,
                  "src": "960:721:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1072,
                    "nodeType": "Block",
                    "src": "1744:102:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1058,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1762:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1766:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1762:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1060,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 892,
                                "src": "1776:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1762:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1783:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1057,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1754:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1754:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1064,
                        "nodeType": "ExpressionStatement",
                        "src": "1754:44:6"
                      },
                      {
                        "expression": {
                          "id": 1070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1065,
                                "name": "giveaways",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 897,
                                "src": "1808:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                                  "typeString": "mapping(uint64 => struct Giveaways.Giveaway storage ref)"
                                }
                              },
                              "id": 1067,
                              "indexExpression": {
                                "id": 1066,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1052,
                                "src": "1818:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1808:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                                "typeString": "struct Giveaways.Giveaway storage ref"
                              }
                            },
                            "id": 1068,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1823:6:6",
                            "memberName": "active",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 884,
                            "src": "1808:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1069,
                            "name": "_active",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1054,
                            "src": "1832:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1808:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1071,
                        "nodeType": "ExpressionStatement",
                        "src": "1808:31:6"
                      }
                    ]
                  },
                  "functionSelector": "f2849144",
                  "id": 1073,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeActive",
                  "nameLocation": "1696:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1055,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1052,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "1716:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1073,
                        "src": "1709:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1051,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1709:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1054,
                        "mutability": "mutable",
                        "name": "_active",
                        "nameLocation": "1726:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1073,
                        "src": "1721:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1053,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1721:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1708:26:6"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1744:0:6"
                  },
                  "scope": 1607,
                  "src": "1687:159:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1095,
                    "nodeType": "Block",
                    "src": "1908:97:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1082,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1926:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1930:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1926:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1084,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 892,
                                "src": "1940:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1926:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1947:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1081,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1918:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1918:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1088,
                        "nodeType": "ExpressionStatement",
                        "src": "1918:44:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1090,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1076,
                              "src": "1977:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 1091,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "1984:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1092,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 892,
                              "src": "1992:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1089,
                            "name": "send",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1514,
                            "src": "1972:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,address)"
                            }
                          },
                          "id": 1093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1972:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1094,
                        "nodeType": "ExpressionStatement",
                        "src": "1972:26:6"
                      }
                    ]
                  },
                  "functionSelector": "f3fef3a3",
                  "id": 1096,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "1861:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1079,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1076,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "1877:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1096,
                        "src": "1870:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1075,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1074,
                            "name": "IERC20",
                            "nameLocations": [
                              "1870:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "1870:6:6"
                          },
                          "referencedDeclaration": 729,
                          "src": "1870:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1890:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1096,
                        "src": "1885:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1885:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1869:29:6"
                  },
                  "returnParameters": {
                    "id": 1080,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1908:0:6"
                  },
                  "scope": 1607,
                  "src": "1852:153:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1209,
                    "nodeType": "Block",
                    "src": "2102:668:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1109,
                                  "name": "_users",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1099,
                                  "src": "2120:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 1110,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2127:6:6",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2120:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1111,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "2137:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 1112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2145:6:6",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2137:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2120:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "617272617973206d757374206265207468652073616d65206c656e677468",
                              "id": 1114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2153:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9b08cf45c23faeb3e38f7a98b1df64007d4d738114e9e64eb82f94cd51fbb384",
                                "typeString": "literal_string \"arrays must be the same length\""
                              },
                              "value": "arrays must be the same length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9b08cf45c23faeb3e38f7a98b1df64007d4d738114e9e64eb82f94cd51fbb384",
                                "typeString": "literal_string \"arrays must be the same length\""
                              }
                            ],
                            "id": 1108,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2112:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2112:74:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1116,
                        "nodeType": "ExpressionStatement",
                        "src": "2112:74:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1118,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2204:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2208:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2204:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1120,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 892,
                                "src": "2218:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2204:19:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2225:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1117,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2196:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2196:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1124,
                        "nodeType": "ExpressionStatement",
                        "src": "2196:44:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 1132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1125,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2254:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1129,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2279:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1128,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2271:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1127,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2271:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2271:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1126,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "2264:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2264:18:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2254:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1207,
                          "nodeType": "Block",
                          "src": "2566:197:6",
                          "statements": [
                            {
                              "body": {
                                "id": 1205,
                                "nodeType": "Block",
                                "src": "2619:134:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1187,
                                            "name": "_users",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1099,
                                            "src": "2653:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1189,
                                          "indexExpression": {
                                            "id": 1188,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1174,
                                            "src": "2660:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2653:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 1190,
                                            "name": "_amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1102,
                                            "src": "2664:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 1192,
                                          "indexExpression": {
                                            "id": 1191,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1174,
                                            "src": "2672:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2664:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1184,
                                          "name": "_token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1105,
                                          "src": "2637:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$729",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1186,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2644:8:6",
                                        "memberName": "transfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 696,
                                        "src": "2637:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                          "typeString": "function (address,uint256) external returns (bool)"
                                        }
                                      },
                                      "id": 1193,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2637:38:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1194,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2637:38:6"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1196,
                                            "name": "_users",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1099,
                                            "src": "2708:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1198,
                                          "indexExpression": {
                                            "id": 1197,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1174,
                                            "src": "2715:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2708:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 1199,
                                            "name": "_amount",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1102,
                                            "src": "2719:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 1201,
                                          "indexExpression": {
                                            "id": 1200,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1174,
                                            "src": "2727:1:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2719:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1202,
                                          "name": "_token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1105,
                                          "src": "2731:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$729",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$729",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 1195,
                                        "name": "sendMoney",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 912,
                                        "src": "2698:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_contract$_IERC20_$729_$returns$__$",
                                          "typeString": "function (address,uint256,contract IERC20)"
                                        }
                                      },
                                      "id": 1203,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2698:40:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1204,
                                    "nodeType": "EmitStatement",
                                    "src": "2693:45:6"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1177,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1174,
                                  "src": "2596:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1178,
                                    "name": "_users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1099,
                                    "src": "2600:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2607:6:6",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2600:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2596:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1206,
                              "initializationExpression": {
                                "assignments": [
                                  1174
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1174,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "2589:1:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1206,
                                    "src": "2584:6:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1173,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2584:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1176,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 1175,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2593:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "2584:10:6"
                              },
                              "isSimpleCounterLoop": true,
                              "loopExpression": {
                                "expression": {
                                  "id": 1182,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "2615:3:6",
                                  "subExpression": {
                                    "id": 1181,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1174,
                                    "src": "2615:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1183,
                                "nodeType": "ExpressionStatement",
                                "src": "2615:3:6"
                              },
                              "nodeType": "ForStatement",
                              "src": "2580:173:6"
                            }
                          ]
                        },
                        "id": 1208,
                        "nodeType": "IfStatement",
                        "src": "2250:513:6",
                        "trueBody": {
                          "id": 1172,
                          "nodeType": "Block",
                          "src": "2283:277:6",
                          "statements": [
                            {
                              "body": {
                                "id": 1170,
                                "nodeType": "Block",
                                "src": "2336:214:6",
                                "statements": [
                                  {
                                    "assignments": [
                                      1145,
                                      null
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 1145,
                                        "mutability": "mutable",
                                        "name": "sent",
                                        "nameLocation": "2360:4:6",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 1170,
                                        "src": "2355:9:6",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "typeName": {
                                          "id": 1144,
                                          "name": "bool",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2355:4:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "visibility": "internal"
                                      },
                                      null
                                    ],
                                    "id": 1156,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "hexValue": "",
                                          "id": 1154,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "2404:2:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          },
                                          "value": ""
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                            "typeString": "literal_string \"\""
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                              "typeString": "literal_string \"\""
                                            }
                                          ],
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1146,
                                              "name": "_users",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1099,
                                              "src": "2370:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                "typeString": "address[] memory"
                                              }
                                            },
                                            "id": 1148,
                                            "indexExpression": {
                                              "id": 1147,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1134,
                                              "src": "2377:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2370:9:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "id": 1149,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "2380:4:6",
                                          "memberName": "call",
                                          "nodeType": "MemberAccess",
                                          "src": "2370:14:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                          }
                                        },
                                        "id": 1153,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "names": [
                                          "value"
                                        ],
                                        "nodeType": "FunctionCallOptions",
                                        "options": [
                                          {
                                            "baseExpression": {
                                              "id": 1150,
                                              "name": "_amount",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1102,
                                              "src": "2392:7:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[] memory"
                                              }
                                            },
                                            "id": 1152,
                                            "indexExpression": {
                                              "id": 1151,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1134,
                                              "src": "2400:1:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2392:10:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "src": "2370:33:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                        }
                                      },
                                      "id": 1155,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2370:37:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                        "typeString": "tuple(bool,bytes memory)"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2354:53:6"
                                  },
                                  {
                                    "condition": {
                                      "id": 1157,
                                      "name": "sent",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1145,
                                      "src": "2428:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1169,
                                    "nodeType": "IfStatement",
                                    "src": "2425:94:6",
                                    "trueBody": {
                                      "id": 1168,
                                      "nodeType": "Block",
                                      "src": "2433:86:6",
                                      "statements": [
                                        {
                                          "eventCall": {
                                            "arguments": [
                                              {
                                                "baseExpression": {
                                                  "id": 1159,
                                                  "name": "_users",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1099,
                                                  "src": "2470:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                                    "typeString": "address[] memory"
                                                  }
                                                },
                                                "id": 1161,
                                                "indexExpression": {
                                                  "id": 1160,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1134,
                                                  "src": "2477:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2470:9:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              {
                                                "baseExpression": {
                                                  "id": 1162,
                                                  "name": "_amount",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1102,
                                                  "src": "2481:7:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                    "typeString": "uint256[] memory"
                                                  }
                                                },
                                                "id": 1164,
                                                "indexExpression": {
                                                  "id": 1163,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1134,
                                                  "src": "2489:1:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2481:10:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              {
                                                "id": 1165,
                                                "name": "_token",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1105,
                                                "src": "2493:6:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_contract$_IERC20_$729",
                                                  "typeString": "contract IERC20"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                {
                                                  "typeIdentifier": "t_contract$_IERC20_$729",
                                                  "typeString": "contract IERC20"
                                                }
                                              ],
                                              "id": 1158,
                                              "name": "sendMoney",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 912,
                                              "src": "2460:9:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_contract$_IERC20_$729_$returns$__$",
                                                "typeString": "function (address,uint256,contract IERC20)"
                                              }
                                            },
                                            "id": 1166,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2460:40:6",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_tuple$__$",
                                              "typeString": "tuple()"
                                            }
                                          },
                                          "id": 1167,
                                          "nodeType": "EmitStatement",
                                          "src": "2455:45:6"
                                        }
                                      ]
                                    }
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1137,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1134,
                                  "src": "2313:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1138,
                                    "name": "_users",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1099,
                                    "src": "2317:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                      "typeString": "address[] memory"
                                    }
                                  },
                                  "id": 1139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2324:6:6",
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2317:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2313:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1171,
                              "initializationExpression": {
                                "assignments": [
                                  1134
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 1134,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nameLocation": "2306:1:6",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1171,
                                    "src": "2301:6:6",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 1133,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2301:4:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 1136,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 1135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2310:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "2301:10:6"
                              },
                              "isSimpleCounterLoop": true,
                              "loopExpression": {
                                "expression": {
                                  "id": 1142,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "2332:3:6",
                                  "subExpression": {
                                    "id": 1141,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1134,
                                    "src": "2332:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1143,
                                "nodeType": "ExpressionStatement",
                                "src": "2332:3:6"
                              },
                              "nodeType": "ForStatement",
                              "src": "2297:253:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "e399cbfd",
                  "id": 1210,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendPrize",
                  "nameLocation": "2020:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1099,
                        "mutability": "mutable",
                        "name": "_users",
                        "nameLocation": "2047:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "2030:23:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1097,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2030:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1098,
                          "nodeType": "ArrayTypeName",
                          "src": "2030:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2069:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "2055:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1100,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2055:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1101,
                          "nodeType": "ArrayTypeName",
                          "src": "2055:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2085:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1210,
                        "src": "2078:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1104,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1103,
                            "name": "IERC20",
                            "nameLocations": [
                              "2078:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "2078:6:6"
                          },
                          "referencedDeclaration": 729,
                          "src": "2078:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2029:63:6"
                  },
                  "returnParameters": {
                    "id": 1107,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2102:0:6"
                  },
                  "scope": 1607,
                  "src": "2011:759:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1345,
                    "nodeType": "Block",
                    "src": "2953:990:6",
                    "statements": [
                      {
                        "assignments": [
                          1230,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1230,
                            "mutability": "mutable",
                            "name": "premiumPrice",
                            "nameLocation": "2969:12:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1345,
                            "src": "2964:17:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1229,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2964:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1235,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1233,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "3010:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            ],
                            "expression": {
                              "id": 1231,
                              "name": "payment",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "2987:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IPayment_$2546",
                                "typeString": "contract IPayment"
                              }
                            },
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2995:14:6",
                            "memberName": "getTokenPrices",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2545,
                            "src": "2987:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$729_$returns$_t_uint256_$_t_uint256_$",
                              "typeString": "function (contract IERC20) view external returns (uint256,uint256)"
                            }
                          },
                          "id": 1234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2987:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2963:54:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 1243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1236,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1215,
                            "src": "3030:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1240,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3055:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3047:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1238,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3047:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1241,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3047:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1237,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "3040:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3040:18:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3030:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1262,
                          "nodeType": "Block",
                          "src": "3109:79:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1253,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3143:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1254,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3147:6:6",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3143:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1257,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "3163:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Giveaways_$1607",
                                          "typeString": "contract Giveaways"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Giveaways_$1607",
                                          "typeString": "contract Giveaways"
                                        }
                                      ],
                                      "id": 1256,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "3155:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1255,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3155:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1258,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3155:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1259,
                                    "name": "_prize",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1212,
                                    "src": "3170:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1250,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1215,
                                    "src": "3123:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3130:12:6",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 728,
                                  "src": "3123:19:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3123:54:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1261,
                              "nodeType": "ExpressionStatement",
                              "src": "3123:54:6"
                            }
                          ]
                        },
                        "id": 1263,
                        "nodeType": "IfStatement",
                        "src": "3027:161:6",
                        "trueBody": {
                          "id": 1249,
                          "nodeType": "Block",
                          "src": "3060:43:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1244,
                                  "name": "_prize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1212,
                                  "src": "3074:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1245,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3083:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1246,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3087:5:6",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3083:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3074:18:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1248,
                              "nodeType": "ExpressionStatement",
                              "src": "3074:18:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1265,
                                "name": "_endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "3205:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 1266,
                                "name": "_startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1220,
                                "src": "3216:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3205:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456e642074696d65206d757374206265206d6f7265207468616e2073746172742074696d65",
                              "id": 1268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3228:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_857b5228f070fb201a7d8cd17d9981a3073d152840d1f18684914ee0f3494154",
                                "typeString": "literal_string \"End time must be more than start time\""
                              },
                              "value": "End time must be more than start time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_857b5228f070fb201a7d8cd17d9981a3073d152840d1f18684914ee0f3494154",
                                "typeString": "literal_string \"End time must be more than start time\""
                              }
                            ],
                            "id": 1264,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3197:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3197:71:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1270,
                        "nodeType": "ExpressionStatement",
                        "src": "3197:71:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1272,
                                "name": "_prizeTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1224,
                                "src": "3286:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1273,
                                "name": "_endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "3300:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3286:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072697a652074696d65206d757374206265203e3d20656e642074696d65",
                              "id": 1275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3310:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c62fb87402d87fbcdb9a7ce49cdac0b7e1f0a76c315370a1d6cd19efffc7bc70",
                                "typeString": "literal_string \"Prize time must be >= end time\""
                              },
                              "value": "Prize time must be >= end time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c62fb87402d87fbcdb9a7ce49cdac0b7e1f0a76c315370a1d6cd19efffc7bc70",
                                "typeString": "literal_string \"Prize time must be >= end time\""
                              }
                            ],
                            "id": 1271,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3278:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3278:65:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ExpressionStatement",
                        "src": "3278:65:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1279,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3361:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3365:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3361:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3383:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3375:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1281,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3375:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3375:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3361:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1286,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3387:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1278,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3353:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3353:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1288,
                        "nodeType": "ExpressionStatement",
                        "src": "3353:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1290,
                                "name": "premiumPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1230,
                                "src": "3420:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1291,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3435:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3420:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e277420757365207468697320746f6b656e",
                              "id": 1293,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3438:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9c3cd806b7cade9adedcb20dbc3237b2e93c42852d74778537f101b315ee201",
                                "typeString": "literal_string \"Can't use this token\""
                              },
                              "value": "Can't use this token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9c3cd806b7cade9adedcb20dbc3237b2e93c42852d74778537f101b315ee201",
                                "typeString": "literal_string \"Can't use this token\""
                              }
                            ],
                            "id": 1289,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3412:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3412:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1295,
                        "nodeType": "ExpressionStatement",
                        "src": "3412:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1297,
                                "name": "_prize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1212,
                                "src": "3479:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3488:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3479:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63686f6f7365207072697a652061626f76652030",
                              "id": 1300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3491:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_290487f15ef295e13c549949187ab84cfb5e4d30fb2ee0eb69f71711626044c6",
                                "typeString": "literal_string \"choose prize above 0\""
                              },
                              "value": "choose prize above 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_290487f15ef295e13c549949187ab84cfb5e4d30fb2ee0eb69f71711626044c6",
                                "typeString": "literal_string \"choose prize above 0\""
                              }
                            ],
                            "id": 1296,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3471:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:43:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1302,
                        "nodeType": "ExpressionStatement",
                        "src": "3471:43:6"
                      },
                      {
                        "expression": {
                          "id": 1306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1303,
                            "name": "_startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1220,
                            "src": "3524:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1304,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3538:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3544:9:6",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3538:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3524:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1307,
                        "nodeType": "ExpressionStatement",
                        "src": "3524:29:6"
                      },
                      {
                        "expression": {
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1308,
                            "name": "_endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1222,
                            "src": "3563:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1309,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3575:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3581:9:6",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3575:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3563:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1312,
                        "nodeType": "ExpressionStatement",
                        "src": "3563:27:6"
                      },
                      {
                        "expression": {
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1313,
                            "name": "_prizeTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "3600:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1314,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3614:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3620:9:6",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3614:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3600:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1317,
                        "nodeType": "ExpressionStatement",
                        "src": "3600:29:6"
                      },
                      {
                        "assignments": [
                          1322
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1322,
                            "mutability": "mutable",
                            "name": "_users",
                            "nameLocation": "3656:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1345,
                            "src": "3639:23:6",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1320,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3639:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1321,
                              "nodeType": "ArrayTypeName",
                              "src": "3639:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1323,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3639:23:6"
                      },
                      {
                        "expression": {
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1324,
                              "name": "giveaways",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "3672:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                                "typeString": "mapping(uint64 => struct Giveaways.Giveaway storage ref)"
                              }
                            },
                            "id": 1326,
                            "indexExpression": {
                              "id": 1325,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 887,
                              "src": "3682:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3672:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                              "typeString": "struct Giveaways.Giveaway storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1328,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3710:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3714:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3710:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 1330,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1215,
                                "src": "3734:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$729",
                                  "typeString": "contract IERC20"
                                }
                              },
                              {
                                "id": 1331,
                                "name": "_prize",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1212,
                                "src": "3754:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1332,
                                "name": "_prizeType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1218,
                                "src": "3774:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                }
                              },
                              {
                                "id": 1333,
                                "name": "_startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1220,
                                "src": "3798:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1334,
                                "name": "_endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1222,
                                "src": "3822:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1335,
                                "name": "_prizeTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1224,
                                "src": "3844:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1336,
                                "name": "_users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1322,
                                "src": "3868:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              {
                                "id": 1337,
                                "name": "_users",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1322,
                                "src": "3888:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 1338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3908:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$729",
                                  "typeString": "contract IERC20"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                                  "typeString": "uint8[] memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 1327,
                              "name": "Giveaway",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 885,
                              "src": "3688:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Giveaway_$885_storage_ptr_$",
                                "typeString": "type(struct Giveaways.Giveaway storage pointer)"
                              }
                            },
                            "id": 1339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3688:234:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                              "typeString": "struct Giveaways.Giveaway memory"
                            }
                          },
                          "src": "3672:250:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                            "typeString": "struct Giveaways.Giveaway storage ref"
                          }
                        },
                        "id": 1341,
                        "nodeType": "ExpressionStatement",
                        "src": "3672:250:6"
                      },
                      {
                        "expression": {
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3932:4:6",
                          "subExpression": {
                            "id": 1342,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 887,
                            "src": "3932:2:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1344,
                        "nodeType": "ExpressionStatement",
                        "src": "3932:4:6"
                      }
                    ]
                  },
                  "functionSelector": "d9b75a8c",
                  "id": 1346,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1227,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1226,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "2938:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 818,
                        "src": "2938:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2938:14:6"
                    }
                  ],
                  "name": "createGiveaway",
                  "nameLocation": "2802:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1212,
                        "mutability": "mutable",
                        "name": "_prize",
                        "nameLocation": "2822:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "2817:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1211,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2817:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1215,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2837:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "2830:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1214,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1213,
                            "name": "IERC20",
                            "nameLocations": [
                              "2830:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "2830:6:6"
                          },
                          "referencedDeclaration": 729,
                          "src": "2830:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "_prizeType",
                        "nameLocation": "2860:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "2845:25:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                          "typeString": "uint8[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1216,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "2845:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "id": 1217,
                          "nodeType": "ArrayTypeName",
                          "src": "2845:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                            "typeString": "uint8[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "_startTime",
                        "nameLocation": "2877:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "2872:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2872:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1222,
                        "mutability": "mutable",
                        "name": "_endTime",
                        "nameLocation": "2894:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "2889:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2889:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1224,
                        "mutability": "mutable",
                        "name": "_prizeTime",
                        "nameLocation": "2909:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "2904:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1223,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2904:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2816:104:6"
                  },
                  "returnParameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2953:0:6"
                  },
                  "scope": 1607,
                  "src": "2793:1150:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1388,
                    "nodeType": "Block",
                    "src": "4023:197:6",
                    "statements": [
                      {
                        "assignments": [
                          1357
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1357,
                            "mutability": "mutable",
                            "name": "gw",
                            "nameLocation": "4050:2:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1388,
                            "src": "4033:19:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                              "typeString": "struct Giveaways.Giveaway"
                            },
                            "typeName": {
                              "id": 1356,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1355,
                                "name": "Giveaway",
                                "nameLocations": [
                                  "4033:8:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 885,
                                "src": "4033:8:6"
                              },
                              "referencedDeclaration": 885,
                              "src": "4033:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                "typeString": "struct Giveaways.Giveaway"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1361,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1358,
                            "name": "giveaways",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "4055:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                              "typeString": "mapping(uint64 => struct Giveaways.Giveaway storage ref)"
                            }
                          },
                          "id": 1360,
                          "indexExpression": {
                            "id": 1359,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1348,
                            "src": "4065:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4055:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                            "typeString": "struct Giveaways.Giveaway storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4033:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1363,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4087:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4091:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4087:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1367,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4109:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1366,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4101:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1365,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4101:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4101:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4087:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4113:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1362,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4079:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4079:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1372,
                        "nodeType": "ExpressionStatement",
                        "src": "4079:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1374,
                                  "name": "gw",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1357,
                                  "src": "4146:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                    "typeString": "struct Giveaways.Giveaway storage pointer"
                                  }
                                },
                                "id": 1375,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4149:5:6",
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 862,
                                "src": "4146:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1376,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4158:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1377,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4162:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4158:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4146:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1379,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4170:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1373,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4138:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4138:47:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1381,
                        "nodeType": "ExpressionStatement",
                        "src": "4138:47:6"
                      },
                      {
                        "expression": {
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1382,
                              "name": "gw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1357,
                              "src": "4195:2:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                "typeString": "struct Giveaways.Giveaway storage pointer"
                              }
                            },
                            "id": 1384,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4198:5:6",
                            "memberName": "prize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 867,
                            "src": "4195:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1385,
                            "name": "_prize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "4207:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4195:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1387,
                        "nodeType": "ExpressionStatement",
                        "src": "4195:18:6"
                      }
                    ]
                  },
                  "functionSelector": "ce1911ee",
                  "id": 1389,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1353,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1352,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4009:12:6"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 818,
                        "src": "4009:12:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4009:14:6"
                    }
                  ],
                  "name": "addPrize",
                  "nameLocation": "3958:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "3974:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "3967:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "3967:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1350,
                        "mutability": "mutable",
                        "name": "_prize",
                        "nameLocation": "3984:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1389,
                        "src": "3979:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1349,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3979:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3966:25:6"
                  },
                  "returnParameters": {
                    "id": 1354,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4023:0:6"
                  },
                  "scope": 1607,
                  "src": "3949:271:6",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1471,
                    "nodeType": "Block",
                    "src": "4268:457:6",
                    "statements": [
                      {
                        "assignments": [
                          1396
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1396,
                            "mutability": "mutable",
                            "name": "gw",
                            "nameLocation": "4295:2:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1471,
                            "src": "4278:19:6",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                              "typeString": "struct Giveaways.Giveaway"
                            },
                            "typeName": {
                              "id": 1395,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1394,
                                "name": "Giveaway",
                                "nameLocations": [
                                  "4278:8:6"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 885,
                                "src": "4278:8:6"
                              },
                              "referencedDeclaration": 885,
                              "src": "4278:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                "typeString": "struct Giveaways.Giveaway"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1400,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1397,
                            "name": "giveaways",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "4300:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                              "typeString": "mapping(uint64 => struct Giveaways.Giveaway storage ref)"
                            }
                          },
                          "id": 1399,
                          "indexExpression": {
                            "id": 1398,
                            "name": "_id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1391,
                            "src": "4310:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4300:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                            "typeString": "struct Giveaways.Giveaway storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4278:36:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1402,
                                "name": "gw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1396,
                                "src": "4332:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                  "typeString": "struct Giveaways.Giveaway storage pointer"
                                }
                              },
                              "id": 1403,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4335:6:6",
                              "memberName": "active",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 884,
                              "src": "4332:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4769766561776179206973206e6f7420616374697665",
                              "id": 1404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4343:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d03f8db1bc929fe1b6df9f2e137aed498e83d9247fb401e30bca1f2f0ee0a656",
                                "typeString": "literal_string \"Giveaway is not active\""
                              },
                              "value": "Giveaway is not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d03f8db1bc929fe1b6df9f2e137aed498e83d9247fb401e30bca1f2f0ee0a656",
                                "typeString": "literal_string \"Giveaway is not active\""
                              }
                            ],
                            "id": 1401,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4324:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4324:44:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1406,
                        "nodeType": "ExpressionStatement",
                        "src": "4324:44:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1408,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4386:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4390:6:6",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4386:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1412,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4408:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1411,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4400:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1410,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4400:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4400:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "4386:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4412:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1407,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4378:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4378:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1417,
                        "nodeType": "ExpressionStatement",
                        "src": "4378:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "id": 1426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 1419,
                                    "name": "usersId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 903,
                                    "src": "4445:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_uint64_$_$",
                                      "typeString": "mapping(uint64 => mapping(address => uint64))"
                                    }
                                  },
                                  "id": 1421,
                                  "indexExpression": {
                                    "id": 1420,
                                    "name": "_id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1391,
                                    "src": "4453:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4445:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                                    "typeString": "mapping(address => uint64)"
                                  }
                                },
                                "id": 1424,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1422,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4458:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4462:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4458:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4445:24:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4473:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4445:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "596f752061726520616c726561647920706172746963697061746564",
                              "id": 1427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4476:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1aa35ae26d359aae03efe06946d5a87cf528a04c805c6a4a28b8c4125464a582",
                                "typeString": "literal_string \"You are already participated\""
                              },
                              "value": "You are already participated"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1aa35ae26d359aae03efe06946d5a87cf528a04c805c6a4a28b8c4125464a582",
                                "typeString": "literal_string \"You are already participated\""
                              }
                            ],
                            "id": 1418,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4437:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4437:70:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1429,
                        "nodeType": "ExpressionStatement",
                        "src": "4437:70:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1431,
                                    "name": "gw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1396,
                                    "src": "4525:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                      "typeString": "struct Giveaways.Giveaway storage pointer"
                                    }
                                  },
                                  "id": 1432,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4528:9:6",
                                  "memberName": "startTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 872,
                                  "src": "4525:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1433,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4540:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4546:9:6",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4540:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4525:30:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1436,
                                    "name": "gw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1396,
                                    "src": "4559:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                      "typeString": "struct Giveaways.Giveaway storage pointer"
                                    }
                                  },
                                  "id": 1437,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4562:7:6",
                                  "memberName": "endTime",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 874,
                                  "src": "4559:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1438,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "4572:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1439,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4578:9:6",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "4572:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4559:28:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4525:62:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "6769766561776179206973206e6f7420616374697665",
                              "id": 1442,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4589:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cae76fc30d64605ff9670942f00035849d9706fbb4b3596679d624cb589a5c48",
                                "typeString": "literal_string \"giveaway is not active\""
                              },
                              "value": "giveaway is not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cae76fc30d64605ff9670942f00035849d9706fbb4b3596679d624cb589a5c48",
                                "typeString": "literal_string \"giveaway is not active\""
                              }
                            ],
                            "id": 1430,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4517:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4517:97:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1444,
                        "nodeType": "ExpressionStatement",
                        "src": "4517:97:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1452,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4646:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4650:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4646:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4638:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1450,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4638:8:6",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4638:19:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "id": 1445,
                                "name": "gw",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1396,
                                "src": "4624:2:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                  "typeString": "struct Giveaways.Giveaway storage pointer"
                                }
                              },
                              "id": 1448,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4627:5:6",
                              "memberName": "users",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 879,
                              "src": "4624:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4633:4:6",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4624:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 1455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4624:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1456,
                        "nodeType": "ExpressionStatement",
                        "src": "4624:34:6"
                      },
                      {
                        "expression": {
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1457,
                                "name": "usersId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 903,
                                "src": "4668:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_mapping$_t_address_$_t_uint64_$_$",
                                  "typeString": "mapping(uint64 => mapping(address => uint64))"
                                }
                              },
                              "id": 1461,
                              "indexExpression": {
                                "id": 1458,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1391,
                                "src": "4676:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4668:12:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
                                "typeString": "mapping(address => uint64)"
                              }
                            },
                            "id": 1462,
                            "indexExpression": {
                              "expression": {
                                "id": 1459,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4681:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4685:6:6",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4681:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4668:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "expression": {
                                    "id": 1465,
                                    "name": "gw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1396,
                                    "src": "4702:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                      "typeString": "struct Giveaways.Giveaway storage pointer"
                                    }
                                  },
                                  "id": 1466,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4705:5:6",
                                  "memberName": "users",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 879,
                                  "src": "4702:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4711:6:6",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4702:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4695:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint64_$",
                                "typeString": "type(uint64)"
                              },
                              "typeName": {
                                "id": 1463,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "4695:6:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4695:23:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "4668:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "id": 1470,
                        "nodeType": "ExpressionStatement",
                        "src": "4668:50:6"
                      }
                    ]
                  },
                  "functionSelector": "8d212a89",
                  "id": 1472,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "participate",
                  "nameLocation": "4235:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1392,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1391,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "4254:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1472,
                        "src": "4247:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1390,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "4247:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4246:12:6"
                  },
                  "returnParameters": {
                    "id": 1393,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4268:0:6"
                  },
                  "scope": 1607,
                  "src": "4226:499:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1513,
                    "nodeType": "Block",
                    "src": "4810:220:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 1489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1482,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1475,
                            "src": "4823:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1486,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4848:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1485,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4840:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1484,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4840:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1487,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4840:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1483,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "4833:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4833:18:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4823:28:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1511,
                          "nodeType": "Block",
                          "src": "4962:54:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1507,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1479,
                                    "src": "4992:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1508,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1477,
                                    "src": "4997:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1504,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1475,
                                    "src": "4976:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1506,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4983:8:6",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 696,
                                  "src": "4976:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1509,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4976:29:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1510,
                              "nodeType": "ExpressionStatement",
                              "src": "4976:29:6"
                            }
                          ]
                        },
                        "id": 1512,
                        "nodeType": "IfStatement",
                        "src": "4820:196:6",
                        "trueBody": {
                          "id": 1503,
                          "nodeType": "Block",
                          "src": "4852:104:6",
                          "statements": [
                            {
                              "assignments": [
                                1491,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1491,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "4872:4:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1503,
                                  "src": "4867:9:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1490,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4867:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 1498,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1496,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4907:2:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1492,
                                      "name": "_to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1479,
                                      "src": "4882:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4886:4:6",
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "4882:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1495,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1494,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1477,
                                      "src": "4898:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "4882:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4882:28:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4866:44:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1500,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1491,
                                    "src": "4932:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1499,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "4924:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 1501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4924:13:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1502,
                              "nodeType": "ExpressionStatement",
                              "src": "4924:13:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 1514,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "send",
                  "nameLocation": "4755:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1475,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "4767:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1514,
                        "src": "4760:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1474,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1473,
                            "name": "IERC20",
                            "nameLocations": [
                              "4760:6:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "4760:6:6"
                          },
                          "referencedDeclaration": 729,
                          "src": "4760:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1477,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "4780:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1514,
                        "src": "4775:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1476,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4775:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "4797:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1514,
                        "src": "4789:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1478,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4789:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4759:42:6"
                  },
                  "returnParameters": {
                    "id": 1481,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4810:0:6"
                  },
                  "scope": 1607,
                  "src": "4746:284:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1528,
                    "nodeType": "Block",
                    "src": "5129:37:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1522,
                            "name": "_gw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1520,
                            "src": "5139:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                              "typeString": "struct Giveaways.Giveaway memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 1523,
                              "name": "giveaways",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 897,
                              "src": "5145:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                                "typeString": "mapping(uint64 => struct Giveaways.Giveaway storage ref)"
                              }
                            },
                            "id": 1525,
                            "indexExpression": {
                              "id": 1524,
                              "name": "_id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1516,
                              "src": "5155:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5145:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                              "typeString": "struct Giveaways.Giveaway storage ref"
                            }
                          },
                          "src": "5139:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                            "typeString": "struct Giveaways.Giveaway memory"
                          }
                        },
                        "id": 1527,
                        "nodeType": "ExpressionStatement",
                        "src": "5139:20:6"
                      }
                    ]
                  },
                  "functionSelector": "c3f12761",
                  "id": 1529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGiveaway",
                  "nameLocation": "5061:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1516,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "5080:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "5073:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1515,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5073:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5072:12:6"
                  },
                  "returnParameters": {
                    "id": 1521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1520,
                        "mutability": "mutable",
                        "name": "_gw",
                        "nameLocation": "5124:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1529,
                        "src": "5108:19:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                          "typeString": "struct Giveaways.Giveaway"
                        },
                        "typeName": {
                          "id": 1519,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1518,
                            "name": "Giveaway",
                            "nameLocations": [
                              "5108:8:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 885,
                            "src": "5108:8:6"
                          },
                          "referencedDeclaration": 885,
                          "src": "5108:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                            "typeString": "struct Giveaways.Giveaway"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5107:21:6"
                  },
                  "scope": 1607,
                  "src": "5052:114:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1589,
                    "nodeType": "Block",
                    "src": "5270:271:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1540,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1533,
                            "src": "5283:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5294:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5283:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1552,
                        "nodeType": "IfStatement",
                        "src": "5280:76:6",
                        "trueBody": {
                          "id": 1551,
                          "nodeType": "Block",
                          "src": "5296:60:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1543,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1533,
                                  "src": "5310:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1544,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 887,
                                  "src": "5320:2:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "src": "5310:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 1546,
                              "nodeType": "ExpressionStatement",
                              "src": "5310:12:6"
                            },
                            {
                              "expression": {
                                "id": 1549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1547,
                                  "name": "_page",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1531,
                                  "src": "5336:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1548,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5344:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "5336:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "id": 1550,
                              "nodeType": "ExpressionStatement",
                              "src": "5336:9:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1553,
                            "name": "_gw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1538,
                            "src": "5365:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Giveaway_$885_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Giveaways.Giveaway memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1558,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1533,
                                "src": "5386:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              ],
                              "id": 1557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "5371:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Giveaway_$885_memory_ptr_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (struct Giveaways.Giveaway memory[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 1555,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 1554,
                                    "name": "Giveaway",
                                    "nameLocations": [
                                      "5375:8:6"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 885,
                                    "src": "5375:8:6"
                                  },
                                  "referencedDeclaration": 885,
                                  "src": "5375:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                    "typeString": "struct Giveaways.Giveaway"
                                  }
                                },
                                "id": 1556,
                                "nodeType": "ArrayTypeName",
                                "src": "5375:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Giveaway_$885_storage_$dyn_storage_ptr",
                                  "typeString": "struct Giveaways.Giveaway[]"
                                }
                              }
                            },
                            "id": 1559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5371:23:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Giveaway_$885_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Giveaways.Giveaway memory[] memory"
                            }
                          },
                          "src": "5365:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Giveaway_$885_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Giveaways.Giveaway memory[] memory"
                          }
                        },
                        "id": 1561,
                        "nodeType": "ExpressionStatement",
                        "src": "5365:29:6"
                      },
                      {
                        "body": {
                          "id": 1587,
                          "nodeType": "Block",
                          "src": "5448:87:6",
                          "statements": [
                            {
                              "assignments": [
                                1576
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1576,
                                  "mutability": "mutable",
                                  "name": "item",
                                  "nameLocation": "5478:4:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1587,
                                  "src": "5462:20:6",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                                    "typeString": "struct Giveaways.Giveaway"
                                  },
                                  "typeName": {
                                    "id": 1575,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 1574,
                                      "name": "Giveaway",
                                      "nameLocations": [
                                        "5462:8:6"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 885,
                                      "src": "5462:8:6"
                                    },
                                    "referencedDeclaration": 885,
                                    "src": "5462:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                                      "typeString": "struct Giveaways.Giveaway"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1580,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 1577,
                                  "name": "giveaways",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 897,
                                  "src": "5485:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                                    "typeString": "mapping(uint64 => struct Giveaways.Giveaway storage ref)"
                                  }
                                },
                                "id": 1579,
                                "indexExpression": {
                                  "id": 1578,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1563,
                                  "src": "5495:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5485:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                                  "typeString": "struct Giveaways.Giveaway storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5462:35:6"
                            },
                            {
                              "expression": {
                                "id": 1585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1581,
                                    "name": "_gw",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1538,
                                    "src": "5511:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Giveaway_$885_memory_ptr_$dyn_memory_ptr",
                                      "typeString": "struct Giveaways.Giveaway memory[] memory"
                                    }
                                  },
                                  "id": 1583,
                                  "indexExpression": {
                                    "id": 1582,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1563,
                                    "src": "5515:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5511:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                                    "typeString": "struct Giveaways.Giveaway memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1584,
                                  "name": "item",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1576,
                                  "src": "5520:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                                    "typeString": "struct Giveaways.Giveaway memory"
                                  }
                                },
                                "src": "5511:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Giveaway_$885_memory_ptr",
                                  "typeString": "struct Giveaways.Giveaway memory"
                                }
                              },
                              "id": 1586,
                              "nodeType": "ExpressionStatement",
                              "src": "5511:13:6"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1568,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1563,
                            "src": "5434:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1569,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1533,
                            "src": "5436:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "5434:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1588,
                        "initializationExpression": {
                          "assignments": [
                            1563
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1563,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5415:1:6",
                              "nodeType": "VariableDeclaration",
                              "scope": 1588,
                              "src": "5408:8:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              "typeName": {
                                "id": 1562,
                                "name": "uint64",
                                "nodeType": "ElementaryTypeName",
                                "src": "5408:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1567,
                          "initialValue": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 1566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1564,
                              "name": "_page",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1531,
                              "src": "5417:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1565,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1533,
                              "src": "5425:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "5417:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5408:24:6"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5444:3:6",
                            "subExpression": {
                              "id": 1571,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1563,
                              "src": "5444:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "id": 1573,
                          "nodeType": "ExpressionStatement",
                          "src": "5444:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "5404:131:6"
                      }
                    ]
                  },
                  "functionSelector": "1dae1c8c",
                  "id": 1590,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getGiveaways",
                  "nameLocation": "5181:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1531,
                        "mutability": "mutable",
                        "name": "_page",
                        "nameLocation": "5201:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "5194:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1530,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5194:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1533,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "5215:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "5208:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5208:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5193:30:6"
                  },
                  "returnParameters": {
                    "id": 1539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1538,
                        "mutability": "mutable",
                        "name": "_gw",
                        "nameLocation": "5265:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1590,
                        "src": "5247:21:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Giveaway_$885_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Giveaways.Giveaway[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1536,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 1535,
                              "name": "Giveaway",
                              "nameLocations": [
                                "5247:8:6"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 885,
                              "src": "5247:8:6"
                            },
                            "referencedDeclaration": 885,
                            "src": "5247:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Giveaway_$885_storage_ptr",
                              "typeString": "struct Giveaways.Giveaway"
                            }
                          },
                          "id": 1537,
                          "nodeType": "ArrayTypeName",
                          "src": "5247:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Giveaway_$885_storage_$dyn_storage_ptr",
                            "typeString": "struct Giveaways.Giveaway[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5246:23:6"
                  },
                  "scope": 1607,
                  "src": "5172:369:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1605,
                    "nodeType": "Block",
                    "src": "5629:50:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1598,
                            "name": "_winners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "5639:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1599,
                                "name": "giveaways",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 897,
                                "src": "5650:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Giveaway_$885_storage_$",
                                  "typeString": "mapping(uint64 => struct Giveaways.Giveaway storage ref)"
                                }
                              },
                              "id": 1601,
                              "indexExpression": {
                                "id": 1600,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1592,
                                "src": "5660:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5650:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Giveaway_$885_storage",
                                "typeString": "struct Giveaways.Giveaway storage ref"
                              }
                            },
                            "id": 1602,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5665:7:6",
                            "memberName": "winners",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 882,
                            "src": "5650:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "src": "5639:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 1604,
                        "nodeType": "ExpressionStatement",
                        "src": "5639:33:6"
                      }
                    ]
                  },
                  "functionSelector": "2d949136",
                  "id": 1606,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getWinners",
                  "nameLocation": "5556:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1592,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "5574:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1606,
                        "src": "5567:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "typeName": {
                          "id": 1591,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5567:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5566:12:6"
                  },
                  "returnParameters": {
                    "id": 1597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1596,
                        "mutability": "mutable",
                        "name": "_winners",
                        "nameLocation": "5619:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1606,
                        "src": "5602:25:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1594,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5602:7:6",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1595,
                          "nodeType": "ArrayTypeName",
                          "src": "5602:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5601:27:6"
                  },
                  "scope": 1607,
                  "src": "5547:132:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1608,
              "src": "160:5521:6",
              "usedErrors": [
                799
              ],
              "usedEvents": [
                912,
                919
              ]
            }
          ],
          "src": "39:5643:6"
        },
        "id": 6
      },
      "contracts/Payment.sol": {
        "ast": {
          "absolutePath": "contracts/Payment.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ],
            "Payments": [
              2532
            ],
            "ReentrancyGuard": [
              854
            ]
          },
          "id": 2533,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1609,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:7"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 1610,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2533,
              "sourceUnit": 730,
              "src": "66:56:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 1611,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2533,
              "sourceUnit": 855,
              "src": "124:59:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1612,
                    "name": "ReentrancyGuard",
                    "nameLocations": [
                      "206:15:7"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 854,
                    "src": "206:15:7"
                  },
                  "id": 1613,
                  "nodeType": "InheritanceSpecifier",
                  "src": "206:15:7"
                }
              ],
              "canonicalName": "Payments",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2532,
              "linearizedBaseContracts": [
                2532,
                854
              ],
              "name": "Payments",
              "nameLocation": "194:8:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1615,
                  "mutability": "mutable",
                  "name": "txId",
                  "nameLocation": "233:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "228:9:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1614,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "228:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1617,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "251:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "244:10:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1616,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "244:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 1619,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "314:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "291:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "291:15:7",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1624,
                  "mutability": "mutable",
                  "name": "tokenAiPrice",
                  "nameLocation": "351:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "326:37:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                    "typeString": "mapping(contract IERC20 => uint256)"
                  },
                  "typeName": {
                    "id": 1623,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1621,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1620,
                        "name": "IERC20",
                        "nameLocations": [
                          "335:6:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 729,
                        "src": "335:6:7"
                      },
                      "referencedDeclaration": 729,
                      "src": "335:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$729",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "326:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                      "typeString": "mapping(contract IERC20 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1622,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "345:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1629,
                  "mutability": "mutable",
                  "name": "tokenPremiumPrice",
                  "nameLocation": "395:17:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "370:42:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                    "typeString": "mapping(contract IERC20 => uint256)"
                  },
                  "typeName": {
                    "id": 1628,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1626,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1625,
                        "name": "IERC20",
                        "nameLocations": [
                          "379:6:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 729,
                        "src": "379:6:7"
                      },
                      "referencedDeclaration": 729,
                      "src": "379:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$729",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "370:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                      "typeString": "mapping(contract IERC20 => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1627,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "389:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "cc6533dd",
                  "id": 1633,
                  "mutability": "mutable",
                  "name": "personalFee",
                  "nameLocation": "454:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "419:46:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                    "typeString": "mapping(address => uint16)"
                  },
                  "typeName": {
                    "id": 1632,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1630,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "428:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "419:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                      "typeString": "mapping(address => uint16)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1631,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "439:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1642,
                  "mutability": "mutable",
                  "name": "itemPrice",
                  "nameLocation": "538:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "472:75:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint16_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                    "typeString": "mapping(address => mapping(uint16 => mapping(contract IERC20 => uint256)))"
                  },
                  "typeName": {
                    "id": 1641,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1634,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "481:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "472:65:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint16_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                      "typeString": "mapping(address => mapping(uint16 => mapping(contract IERC20 => uint256)))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1640,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 1635,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "501:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "492:44:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$",
                        "typeString": "mapping(uint16 => mapping(contract IERC20 => uint256))"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 1639,
                        "keyName": "",
                        "keyNameLocation": "-1:-1:-1",
                        "keyType": {
                          "id": 1637,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1636,
                            "name": "IERC20",
                            "nameLocations": [
                              "520:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "520:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "520:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "511:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 1638,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "530:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1651,
                  "mutability": "mutable",
                  "name": "subLevelPrice",
                  "nameLocation": "619:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2532,
                  "src": "554:78:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                    "typeString": "mapping(address => mapping(uint8 => mapping(contract IERC20 => uint256)))"
                  },
                  "typeName": {
                    "id": 1650,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1643,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "563:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "554:64:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                      "typeString": "mapping(address => mapping(uint8 => mapping(contract IERC20 => uint256)))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1649,
                      "keyName": "",
                      "keyNameLocation": "-1:-1:-1",
                      "keyType": {
                        "id": 1644,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "583:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "574:43:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$",
                        "typeString": "mapping(uint8 => mapping(contract IERC20 => uint256))"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 1648,
                        "keyName": "",
                        "keyNameLocation": "-1:-1:-1",
                        "keyType": {
                          "id": 1646,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1645,
                            "name": "IERC20",
                            "nameLocations": [
                              "601:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "601:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "601:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "592:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 1647,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "611:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b349e4993cef149e70b6e1c4b249cbf8571c7df1605d213ad5152c245e9e24dc",
                  "id": 1664,
                  "name": "newPremium",
                  "nameLocation": "645:10:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1653,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "664:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1664,
                        "src": "656:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1652,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "656:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1655,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "month",
                        "nameLocation": "676:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1664,
                        "src": "670:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1654,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1657,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "688:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1664,
                        "src": "683:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1656,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1660,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "702:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1664,
                        "src": "695:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1659,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1658,
                            "name": "IERC20",
                            "nameLocations": [
                              "695:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "695:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "695:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1662,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "714:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1664,
                        "src": "709:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1661,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "655:62:7"
                  },
                  "src": "639:79:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1aa13d83d0941f18b84ec5bd2489673b21a33087534ea39f9c2f69d8ffebf265",
                  "id": 1677,
                  "name": "newAiToken",
                  "nameLocation": "730:10:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1676,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1666,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "749:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1677,
                        "src": "741:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "741:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1668,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "761:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1677,
                        "src": "755:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1670,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "774:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1677,
                        "src": "769:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1669,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "769:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1673,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "788:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1677,
                        "src": "781:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1672,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1671,
                            "name": "IERC20",
                            "nameLocations": [
                              "781:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "781:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "781:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1675,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "800:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1677,
                        "src": "795:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1674,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "795:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "740:63:7"
                  },
                  "src": "724:80:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5a2f1ad79d3b13290e448ad9be056a7e0663f2109e69b98665aa82cc884cb73b",
                  "id": 1690,
                  "name": "newDonation",
                  "nameLocation": "816:11:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1679,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "836:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "828:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1678,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "828:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1681,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "850:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "842:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1680,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "842:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1683,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "859:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "854:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1682,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "854:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1686,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "874:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "867:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1685,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1684,
                            "name": "IERC20",
                            "nameLocations": [
                              "867:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "867:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "867:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1688,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "886:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1690,
                        "src": "881:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1687,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "881:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "827:62:7"
                  },
                  "src": "810:80:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f75bfe060373b450661e4e6eb654aad71847df6d54c2e9818b7ab96462ee101e",
                  "id": 1705,
                  "name": "newItem",
                  "nameLocation": "902:7:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1704,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1692,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "918:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "910:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1691,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "910:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1694,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "seller",
                        "nameLocation": "932:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "924:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1693,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "924:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1696,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "itemId",
                        "nameLocation": "947:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "940:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1695,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1698,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "960:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "955:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1697,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "955:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1701,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "974:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "967:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1700,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1699,
                            "name": "IERC20",
                            "nameLocations": [
                              "967:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "967:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "967:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1703,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "986:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1705,
                        "src": "981:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1702,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "981:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "909:80:7"
                  },
                  "src": "896:94:7"
                },
                {
                  "anonymous": false,
                  "eventSelector": "1b011d73e7df1d8680c86a339410375bb01ae38e38411fc30c0912d61e2a4aa8",
                  "id": 1722,
                  "name": "newSubToUser",
                  "nameLocation": "1002:12:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1707,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1023:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1722,
                        "src": "1015:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1706,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1015:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1709,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "subscribeTo",
                        "nameLocation": "1037:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1722,
                        "src": "1029:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1029:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1711,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "month",
                        "nameLocation": "1056:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1722,
                        "src": "1050:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1710,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1050:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1713,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "level",
                        "nameLocation": "1069:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1722,
                        "src": "1063:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1712,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1063:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1715,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "1081:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1722,
                        "src": "1076:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1714,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1076:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1718,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "1095:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1722,
                        "src": "1088:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1717,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1716,
                            "name": "IERC20",
                            "nameLocations": [
                              "1088:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "1088:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "1088:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1720,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "1107:2:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1722,
                        "src": "1102:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1719,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1014:96:7"
                  },
                  "src": "996:115:7"
                },
                {
                  "body": {
                    "id": 1733,
                    "nodeType": "Block",
                    "src": "1131:46:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1725,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1619,
                            "src": "1142:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1728,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1158:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1162:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1158:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1150:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 1726,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1150:8:7",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1150:19:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1142:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1732,
                        "nodeType": "ExpressionStatement",
                        "src": "1142:27:7"
                      }
                    ]
                  },
                  "id": 1734,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1723,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1128:2:7"
                  },
                  "returnParameters": {
                    "id": 1724,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1131:0:7"
                  },
                  "scope": 2532,
                  "src": "1117:60:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1737,
                    "nodeType": "Block",
                    "src": "1201:2:7",
                    "statements": []
                  },
                  "id": 1738,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1735,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1191:2:7"
                  },
                  "returnParameters": {
                    "id": 1736,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1201:0:7"
                  },
                  "scope": 2532,
                  "src": "1183:20:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1741,
                    "nodeType": "Block",
                    "src": "1235:2:7",
                    "statements": []
                  },
                  "id": 1742,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1739,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1216:2:7"
                  },
                  "returnParameters": {
                    "id": 1740,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1235:0:7"
                  },
                  "scope": 2532,
                  "src": "1209:28:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1772,
                    "nodeType": "Block",
                    "src": "1348:157:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1753,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1367:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1754,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1371:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1367:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1755,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1619,
                                "src": "1381:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1367:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1757,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1388:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1752,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1359:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1359:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1759,
                        "nodeType": "ExpressionStatement",
                        "src": "1359:44:7"
                      },
                      {
                        "expression": {
                          "id": 1764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1760,
                              "name": "tokenPremiumPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "1414:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 1762,
                            "indexExpression": {
                              "id": 1761,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1745,
                              "src": "1432:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1414:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1763,
                            "name": "_premiumPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1747,
                            "src": "1442:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1414:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1765,
                        "nodeType": "ExpressionStatement",
                        "src": "1414:41:7"
                      },
                      {
                        "expression": {
                          "id": 1770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1766,
                              "name": "tokenAiPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1624,
                              "src": "1466:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 1768,
                            "indexExpression": {
                              "id": 1767,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1745,
                              "src": "1479:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1466:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1769,
                            "name": "_aiPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1749,
                            "src": "1489:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1466:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1771,
                        "nodeType": "ExpressionStatement",
                        "src": "1466:31:7"
                      }
                    ]
                  },
                  "functionSelector": "f0aecbc8",
                  "id": 1773,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeTokenPrices",
                  "nameLocation": "1271:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1750,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1745,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "1296:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1773,
                        "src": "1289:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1744,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1743,
                            "name": "IERC20",
                            "nameLocations": [
                              "1289:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "1289:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "1289:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1747,
                        "mutability": "mutable",
                        "name": "_premiumPrice",
                        "nameLocation": "1309:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1773,
                        "src": "1304:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1746,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1304:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1749,
                        "mutability": "mutable",
                        "name": "_aiPrice",
                        "nameLocation": "1329:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1773,
                        "src": "1324:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1748,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1324:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:50:7"
                  },
                  "returnParameters": {
                    "id": 1751,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1348:0:7"
                  },
                  "scope": 2532,
                  "src": "1262:243:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1820,
                    "nodeType": "Block",
                    "src": "1569:278:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1782,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1588:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1783,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1592:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1588:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1784,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1619,
                                "src": "1602:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1588:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1609:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1781,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1580:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1580:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1788,
                        "nodeType": "ExpressionStatement",
                        "src": "1580:44:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 1796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1789,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1776,
                            "src": "1638:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1793,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1663:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1792,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1655:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1791,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1655:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1655:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1790,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "1648:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1648:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "1638:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1818,
                          "nodeType": "Block",
                          "src": "1782:58:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1814,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1619,
                                    "src": "1813:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "id": 1815,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1778,
                                    "src": "1820:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1811,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1776,
                                    "src": "1797:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1813,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1804:8:7",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 696,
                                  "src": "1797:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1797:31:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1817,
                              "nodeType": "ExpressionStatement",
                              "src": "1797:31:7"
                            }
                          ]
                        },
                        "id": 1819,
                        "nodeType": "IfStatement",
                        "src": "1635:205:7",
                        "trueBody": {
                          "id": 1810,
                          "nodeType": "Block",
                          "src": "1667:109:7",
                          "statements": [
                            {
                              "assignments": [
                                1798,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1798,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "1688:4:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1810,
                                  "src": "1683:9:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 1797,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1683:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 1805,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 1803,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1725:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 1799,
                                      "name": "owner",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1619,
                                      "src": "1698:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    "id": 1800,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "1704:4:7",
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "1698:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 1802,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 1801,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1778,
                                      "src": "1716:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "1698:26:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1698:30:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1682:46:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1807,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1798,
                                    "src": "1751:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 1806,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "1743:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 1808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1743:13:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1809,
                              "nodeType": "ExpressionStatement",
                              "src": "1743:13:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "functionSelector": "f3fef3a3",
                  "id": 1821,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "1522:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1779,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1776,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "1538:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1821,
                        "src": "1531:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1775,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1774,
                            "name": "IERC20",
                            "nameLocations": [
                              "1531:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "1531:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "1531:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1778,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1551:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1821,
                        "src": "1546:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1777,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1546:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1530:29:7"
                  },
                  "returnParameters": {
                    "id": 1780,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1569:0:7"
                  },
                  "scope": 2532,
                  "src": "1513:334:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1841,
                    "nodeType": "Block",
                    "src": "1901:97:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1827,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "1920:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1924:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "1920:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1829,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1619,
                                "src": "1934:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1920:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1831,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1941:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1826,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1912:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1912:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1833,
                        "nodeType": "ExpressionStatement",
                        "src": "1912:44:7"
                      },
                      {
                        "expression": {
                          "id": 1839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1834,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1619,
                            "src": "1967:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1837,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1823,
                                "src": "1983:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1975:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 1835,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1975:8:7",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1975:15:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1967:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1840,
                        "nodeType": "ExpressionStatement",
                        "src": "1967:23:7"
                      }
                    ]
                  },
                  "functionSelector": "4b5ad09e",
                  "id": 1842,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "chagneOwner",
                  "nameLocation": "1864:11:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1824,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1823,
                        "mutability": "mutable",
                        "name": "_owner",
                        "nameLocation": "1884:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1842,
                        "src": "1876:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1822,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1876:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1875:16:7"
                  },
                  "returnParameters": {
                    "id": 1825,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1901:0:7"
                  },
                  "scope": 2532,
                  "src": "1855:143:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1859,
                    "nodeType": "Block",
                    "src": "2051:84:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1851,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1848,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2070:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2074:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2070:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1850,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1619,
                                "src": "2084:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2070:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2091:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1847,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2062:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2062:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1854,
                        "nodeType": "ExpressionStatement",
                        "src": "2062:44:7"
                      },
                      {
                        "expression": {
                          "id": 1857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1855,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1617,
                            "src": "2117:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1856,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1844,
                            "src": "2123:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "2117:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1858,
                        "nodeType": "ExpressionStatement",
                        "src": "2117:10:7"
                      }
                    ]
                  },
                  "functionSelector": "3407facd",
                  "id": 1860,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeFee",
                  "nameLocation": "2019:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1845,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1844,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "2036:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1860,
                        "src": "2029:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1843,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2029:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2028:13:7"
                  },
                  "returnParameters": {
                    "id": 1846,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:7"
                  },
                  "scope": 2532,
                  "src": "2010:125:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1881,
                    "nodeType": "Block",
                    "src": "2207:99:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1868,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2226:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1869,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2230:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2226:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 1870,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1619,
                                "src": "2240:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "2226:19:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2247:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1867,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2218:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2218:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1874,
                        "nodeType": "ExpressionStatement",
                        "src": "2218:44:7"
                      },
                      {
                        "expression": {
                          "id": 1879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1875,
                              "name": "personalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "2273:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                                "typeString": "mapping(address => uint16)"
                              }
                            },
                            "id": 1877,
                            "indexExpression": {
                              "id": 1876,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1862,
                              "src": "2285:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2273:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1878,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1864,
                            "src": "2294:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "2273:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1880,
                        "nodeType": "ExpressionStatement",
                        "src": "2273:25:7"
                      }
                    ]
                  },
                  "functionSelector": "402af311",
                  "id": 1882,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changePersonalFee",
                  "nameLocation": "2152:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1865,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1862,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "2178:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1882,
                        "src": "2170:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1861,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2170:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1864,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "2192:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1882,
                        "src": "2185:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 1863,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "2185:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2169:28:7"
                  },
                  "returnParameters": {
                    "id": 1866,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2207:0:7"
                  },
                  "scope": 2532,
                  "src": "2143:163:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1958,
                    "nodeType": "Block",
                    "src": "2424:426:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1895,
                                  "name": "tokenAiPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1624,
                                  "src": "2443:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                    "typeString": "mapping(contract IERC20 => uint256)"
                                  }
                                },
                                "id": 1897,
                                "indexExpression": {
                                  "id": 1896,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1889,
                                  "src": "2456:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$729",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2443:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2466:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2443:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e2774207061792077697468207468697320746f6b656e",
                              "id": 1900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2469:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_55f05edd4035044e24f58ddbcea0949f31d0e6f5afe569db3a6c6f7d1d444ff2",
                                "typeString": "literal_string \"Can't pay with this token\""
                              },
                              "value": "Can't pay with this token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_55f05edd4035044e24f58ddbcea0949f31d0e6f5afe569db3a6c6f7d1d444ff2",
                                "typeString": "literal_string \"Can't pay with this token\""
                              }
                            ],
                            "id": 1894,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2435:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2435:62:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1902,
                        "nodeType": "ExpressionStatement",
                        "src": "2435:62:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1904,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2516:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1905,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2520:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2516:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1908,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2538:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1907,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2530:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1906,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2530:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2530:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2516:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 1911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2542:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 1903,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2508:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2508:49:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1913,
                        "nodeType": "ExpressionStatement",
                        "src": "2508:49:7"
                      },
                      {
                        "assignments": [
                          1915
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1915,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "2573:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1958,
                            "src": "2568:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1914,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2568:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1921,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1916,
                              "name": "tokenAiPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1624,
                              "src": "2581:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 1918,
                            "indexExpression": {
                              "id": 1917,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1889,
                              "src": "2594:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2581:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1919,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1886,
                            "src": "2604:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2581:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2568:43:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 1929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1922,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1889,
                            "src": "2625:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2650:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1925,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2642:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1924,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2642:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2642:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1923,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "2635:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2635:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2625:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1938,
                        "nodeType": "IfStatement",
                        "src": "2622:93:7",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1931,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2676:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2680:5:7",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "2676:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 1933,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1915,
                                  "src": "2689:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2676:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "57726f6e672065746820616d6f756e74",
                                "id": 1935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2696:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_30752d3c04f64766e40f93295a8f97db272f737f4524c27346d3f55dd7cc355a",
                                  "typeString": "literal_string \"Wrong eth amount\""
                                },
                                "value": "Wrong eth amount"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30752d3c04f64766e40f93295a8f97db272f737f4524c27346d3f55dd7cc355a",
                                  "typeString": "literal_string \"Wrong eth amount\""
                                }
                              ],
                              "id": 1930,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "2668:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 1936,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2668:47:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1937,
                          "nodeType": "ExpressionStatement",
                          "src": "2668:47:7"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1940,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1889,
                              "src": "2731:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 1941,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1915,
                              "src": "2739:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1942,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2746:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2750:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2746:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1944,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1619,
                              "src": "2758:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1939,
                            "name": "send",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "2726:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,address,address)"
                            }
                          },
                          "id": 1945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2726:38:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1946,
                        "nodeType": "ExpressionStatement",
                        "src": "2726:38:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1948,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1884,
                              "src": "2791:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1949,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1886,
                              "src": "2796:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 1950,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1915,
                              "src": "2805:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1951,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1889,
                              "src": "2812:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 1952,
                              "name": "txId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1615,
                              "src": "2820:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1947,
                            "name": "newAiToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1677,
                            "src": "2780:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_contract$_IERC20_$729_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint8,uint256,contract IERC20,uint256)"
                            }
                          },
                          "id": 1953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2780:45:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1954,
                        "nodeType": "EmitStatement",
                        "src": "2775:50:7"
                      },
                      {
                        "expression": {
                          "id": 1956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2836:6:7",
                          "subExpression": {
                            "id": 1955,
                            "name": "txId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1615,
                            "src": "2836:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1957,
                        "nodeType": "ExpressionStatement",
                        "src": "2836:6:7"
                      }
                    ]
                  },
                  "functionSelector": "87311b9a",
                  "id": 1959,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1892,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1891,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "2410:12:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 818,
                        "src": "2410:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2410:14:7"
                    }
                  ],
                  "name": "buyAiToken",
                  "nameLocation": "2339:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1890,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1884,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "2358:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1959,
                        "src": "2350:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1883,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2350:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1886,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "2369:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1959,
                        "src": "2363:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1885,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2363:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1889,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2385:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1959,
                        "src": "2378:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1888,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1887,
                            "name": "IERC20",
                            "nameLocations": [
                              "2378:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "2378:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "2378:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2349:43:7"
                  },
                  "returnParameters": {
                    "id": 1893,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2424:0:7"
                  },
                  "scope": 2532,
                  "src": "2330:520:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2058,
                    "nodeType": "Block",
                    "src": "2951:550:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 1986,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 1982,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 1978,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1974,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1972,
                                        "name": "_month",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1963,
                                        "src": "2970:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 1973,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2980:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "2970:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 1977,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1975,
                                        "name": "_month",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1963,
                                        "src": "2985:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "33",
                                        "id": 1976,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2995:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "src": "2985:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "2970:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 1981,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1979,
                                      "name": "_month",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1963,
                                      "src": "3000:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "36",
                                      "id": 1980,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3010:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_6_by_1",
                                        "typeString": "int_const 6"
                                      },
                                      "value": "6"
                                    },
                                    "src": "3000:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "2970:41:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 1985,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1983,
                                    "name": "_month",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1963,
                                    "src": "3015:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "39",
                                    "id": 1984,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3025:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_9_by_1",
                                      "typeString": "int_const 9"
                                    },
                                    "value": "9"
                                  },
                                  "src": "3015:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "2970:56:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 1989,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1987,
                                  "name": "_month",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1963,
                                  "src": "3030:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3132",
                                  "id": 1988,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3040:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_12_by_1",
                                    "typeString": "int_const 12"
                                  },
                                  "value": "12"
                                },
                                "src": "3030:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "2970:72:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43686f6f736520636f7272656374206d6f6e7468",
                              "id": 1991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3044:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9c9bf4cd4e14bb513f5650ed2e49f7abbd6c27db5b743bf147edbadc7972b916",
                                "typeString": "literal_string \"Choose correct month\""
                              },
                              "value": "Choose correct month"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9c9bf4cd4e14bb513f5650ed2e49f7abbd6c27db5b743bf147edbadc7972b916",
                                "typeString": "literal_string \"Choose correct month\""
                              }
                            ],
                            "id": 1971,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2962:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2962:105:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1993,
                        "nodeType": "ExpressionStatement",
                        "src": "2962:105:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 1995,
                                  "name": "tokenPremiumPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1629,
                                  "src": "3086:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                    "typeString": "mapping(contract IERC20 => uint256)"
                                  }
                                },
                                "id": 1997,
                                "indexExpression": {
                                  "id": 1996,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1966,
                                  "src": "3104:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$729",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3086:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3114:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3086:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e2774207061792077697468207468697320746f6b656e",
                              "id": 2000,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3117:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_55f05edd4035044e24f58ddbcea0949f31d0e6f5afe569db3a6c6f7d1d444ff2",
                                "typeString": "literal_string \"Can't pay with this token\""
                              },
                              "value": "Can't pay with this token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_55f05edd4035044e24f58ddbcea0949f31d0e6f5afe569db3a6c6f7d1d444ff2",
                                "typeString": "literal_string \"Can't pay with this token\""
                              }
                            ],
                            "id": 1994,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3078:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3078:67:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2002,
                        "nodeType": "ExpressionStatement",
                        "src": "3078:67:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2004,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3164:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3168:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3164:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2008,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3186:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2007,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3178:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2006,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3178:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3178:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3164:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 2011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3190:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 2003,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3156:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3156:49:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2013,
                        "nodeType": "ExpressionStatement",
                        "src": "3156:49:7"
                      },
                      {
                        "assignments": [
                          2015
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2015,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "3221:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2058,
                            "src": "3216:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2014,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3216:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2021,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2016,
                              "name": "tokenPremiumPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "3229:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 2018,
                            "indexExpression": {
                              "id": 2017,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1966,
                              "src": "3247:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3229:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2019,
                            "name": "_month",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1963,
                            "src": "3257:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3229:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3216:47:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 2029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2022,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1966,
                            "src": "3277:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2026,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3302:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2025,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3294:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2024,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3294:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2027,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3294:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2023,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "3287:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3287:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3277:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2038,
                        "nodeType": "IfStatement",
                        "src": "3274:93:7",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2031,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3328:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2032,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3332:5:7",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "3328:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2033,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2015,
                                  "src": "3341:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3328:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "57726f6e672065746820616d6f756e74",
                                "id": 2035,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3348:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_30752d3c04f64766e40f93295a8f97db272f737f4524c27346d3f55dd7cc355a",
                                  "typeString": "literal_string \"Wrong eth amount\""
                                },
                                "value": "Wrong eth amount"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30752d3c04f64766e40f93295a8f97db272f737f4524c27346d3f55dd7cc355a",
                                  "typeString": "literal_string \"Wrong eth amount\""
                                }
                              ],
                              "id": 2030,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "3320:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 2036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3320:47:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2037,
                          "nodeType": "ExpressionStatement",
                          "src": "3320:47:7"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2040,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1966,
                              "src": "3383:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2041,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "3391:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2042,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3398:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3402:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3398:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2044,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1619,
                              "src": "3410:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2039,
                            "name": "send",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "3378:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,address,address)"
                            }
                          },
                          "id": 2045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3378:38:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2046,
                        "nodeType": "ExpressionStatement",
                        "src": "3378:38:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2048,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1961,
                              "src": "3443:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2049,
                              "name": "_month",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1963,
                              "src": "3448:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 2050,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2015,
                              "src": "3456:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2051,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1966,
                              "src": "3463:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2052,
                              "name": "txId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1615,
                              "src": "3471:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2047,
                            "name": "newPremium",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1664,
                            "src": "3432:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_contract$_IERC20_$729_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint8,uint256,contract IERC20,uint256)"
                            }
                          },
                          "id": 2053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3432:44:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2054,
                        "nodeType": "EmitStatement",
                        "src": "3427:49:7"
                      },
                      {
                        "expression": {
                          "id": 2056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "3487:6:7",
                          "subExpression": {
                            "id": 2055,
                            "name": "txId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1615,
                            "src": "3487:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2057,
                        "nodeType": "ExpressionStatement",
                        "src": "3487:6:7"
                      }
                    ]
                  },
                  "functionSelector": "ded97a9d",
                  "id": 2059,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 1969,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1968,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "2937:12:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 818,
                        "src": "2937:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2937:14:7"
                    }
                  ],
                  "name": "buyPremium",
                  "nameLocation": "2867:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1967,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1961,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "2886:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "2878:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1960,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2878:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1963,
                        "mutability": "mutable",
                        "name": "_month",
                        "nameLocation": "2897:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "2891:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1962,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2891:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1966,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2912:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2059,
                        "src": "2905:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1965,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1964,
                            "name": "IERC20",
                            "nameLocations": [
                              "2905:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "2905:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "2905:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2877:42:7"
                  },
                  "returnParameters": {
                    "id": 1970,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2951:0:7"
                  },
                  "scope": 2532,
                  "src": "2858:643:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2212,
                    "nodeType": "Block",
                    "src": "3633:802:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 2090,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "id": 2086,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "id": 2082,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 2078,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2076,
                                        "name": "_month",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2065,
                                        "src": "3652:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 2077,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3662:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "3652:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "||",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 2081,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 2079,
                                        "name": "_month",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2065,
                                        "src": "3667:6:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "==",
                                      "rightExpression": {
                                        "hexValue": "33",
                                        "id": 2080,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3677:1:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_3_by_1",
                                          "typeString": "int_const 3"
                                        },
                                        "value": "3"
                                      },
                                      "src": "3667:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "src": "3652:26:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "||",
                                  "rightExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    "id": 2085,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2083,
                                      "name": "_month",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2065,
                                      "src": "3682:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "36",
                                      "id": 2084,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3692:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_6_by_1",
                                        "typeString": "int_const 6"
                                      },
                                      "value": "6"
                                    },
                                    "src": "3682:11:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "src": "3652:41:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "id": 2089,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2087,
                                    "name": "_month",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2065,
                                    "src": "3697:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "39",
                                    "id": 2088,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3707:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_9_by_1",
                                      "typeString": "int_const 9"
                                    },
                                    "value": "9"
                                  },
                                  "src": "3697:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3652:56:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "id": 2093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2091,
                                  "name": "_month",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2065,
                                  "src": "3712:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "3132",
                                  "id": 2092,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3722:2:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_12_by_1",
                                    "typeString": "int_const 12"
                                  },
                                  "value": "12"
                                },
                                "src": "3712:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3652:72:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43686f6f736520636f7272656374206d6f6e7468",
                              "id": 2095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3726:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9c9bf4cd4e14bb513f5650ed2e49f7abbd6c27db5b743bf147edbadc7972b916",
                                "typeString": "literal_string \"Choose correct month\""
                              },
                              "value": "Choose correct month"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9c9bf4cd4e14bb513f5650ed2e49f7abbd6c27db5b743bf147edbadc7972b916",
                                "typeString": "literal_string \"Choose correct month\""
                              }
                            ],
                            "id": 2075,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3644:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2096,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3644:105:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2097,
                        "nodeType": "ExpressionStatement",
                        "src": "3644:105:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2107,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2099,
                                        "name": "subLevelPrice",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1651,
                                        "src": "3768:13:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                                          "typeString": "mapping(address => mapping(uint8 => mapping(contract IERC20 => uint256)))"
                                        }
                                      },
                                      "id": 2101,
                                      "indexExpression": {
                                        "id": 2100,
                                        "name": "_user",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2063,
                                        "src": "3782:5:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3768:20:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$",
                                        "typeString": "mapping(uint8 => mapping(contract IERC20 => uint256))"
                                      }
                                    },
                                    "id": 2103,
                                    "indexExpression": {
                                      "id": 2102,
                                      "name": "_level",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2067,
                                      "src": "3789:6:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3768:28:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                      "typeString": "mapping(contract IERC20 => uint256)"
                                    }
                                  },
                                  "id": 2105,
                                  "indexExpression": {
                                    "id": 2104,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2070,
                                    "src": "3797:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3768:36:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3807:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3768:40:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2108,
                                    "name": "tokenPremiumPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1629,
                                    "src": "3812:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                      "typeString": "mapping(contract IERC20 => uint256)"
                                    }
                                  },
                                  "id": 2110,
                                  "indexExpression": {
                                    "id": 2109,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2070,
                                    "src": "3830:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3812:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2111,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3840:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3812:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "3768:73:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e2774207061792077697468207468697320746f6b656e",
                              "id": 2114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3843:27:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_55f05edd4035044e24f58ddbcea0949f31d0e6f5afe569db3a6c6f7d1d444ff2",
                                "typeString": "literal_string \"Can't pay with this token\""
                              },
                              "value": "Can't pay with this token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_55f05edd4035044e24f58ddbcea0949f31d0e6f5afe569db3a6c6f7d1d444ff2",
                                "typeString": "literal_string \"Can't pay with this token\""
                              }
                            ],
                            "id": 2098,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3760:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3760:111:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2116,
                        "nodeType": "ExpressionStatement",
                        "src": "3760:111:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 2124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 2118,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3890:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3894:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3890:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2122,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3912:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2121,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3904:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2120,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3904:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2123,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3904:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3890:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57726f6e672073656e646572",
                              "id": 2125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3916:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              },
                              "value": "Wrong sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a1c5b09ace4f934886aa0d095bd2558e481071e5ba1b5ae5575a30022a93dc30",
                                "typeString": "literal_string \"Wrong sender\""
                              }
                            ],
                            "id": 2117,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3882:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3882:49:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2127,
                        "nodeType": "ExpressionStatement",
                        "src": "3882:49:7"
                      },
                      {
                        "assignments": [
                          2129
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2129,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "3947:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2212,
                            "src": "3942:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2128,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3942:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2139,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2130,
                                  "name": "subLevelPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1651,
                                  "src": "3955:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                                    "typeString": "mapping(address => mapping(uint8 => mapping(contract IERC20 => uint256)))"
                                  }
                                },
                                "id": 2132,
                                "indexExpression": {
                                  "id": 2131,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2063,
                                  "src": "3969:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3955:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$",
                                  "typeString": "mapping(uint8 => mapping(contract IERC20 => uint256))"
                                }
                              },
                              "id": 2134,
                              "indexExpression": {
                                "id": 2133,
                                "name": "_level",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2067,
                                "src": "3976:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3955:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 2136,
                            "indexExpression": {
                              "id": 2135,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2070,
                              "src": "3984:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3955:36:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 2137,
                            "name": "_month",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2065,
                            "src": "3994:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3955:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3942:58:7"
                      },
                      {
                        "assignments": [
                          2141
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2141,
                            "mutability": "mutable",
                            "name": "_fee",
                            "nameLocation": "4016:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2212,
                            "src": "4011:9:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2140,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4011:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2154,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2142,
                                "name": "personalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1633,
                                "src": "4023:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                                  "typeString": "mapping(address => uint16)"
                                }
                              },
                              "id": 2145,
                              "indexExpression": {
                                "expression": {
                                  "id": 2143,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4035:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4039:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4035:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4023:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4050:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4023:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "baseExpression": {
                              "id": 2149,
                              "name": "personalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "4060:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                                "typeString": "mapping(address => uint16)"
                              }
                            },
                            "id": 2152,
                            "indexExpression": {
                              "expression": {
                                "id": 2150,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4072:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4076:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4072:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4060:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "id": 2153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4023:60:7",
                          "trueExpression": {
                            "id": 2148,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1617,
                            "src": "4054:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4011:72:7"
                      },
                      {
                        "assignments": [
                          2156
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2156,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "4099:3:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2212,
                            "src": "4094:8:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2155,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4094:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2162,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2157,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2129,
                              "src": "4105:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2158,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2141,
                              "src": "4113:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4105:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4120:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4105:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4094:30:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 2170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2163,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2070,
                            "src": "4139:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2167,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4164:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4156:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2165,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4156:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4156:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2164,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "4149:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4149:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4139:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2179,
                        "nodeType": "IfStatement",
                        "src": "4136:93:7",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2172,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4190:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4194:5:7",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4190:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2174,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2129,
                                  "src": "4203:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4190:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "57726f6e672065746820616d6f756e74",
                                "id": 2176,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4210:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_30752d3c04f64766e40f93295a8f97db272f737f4524c27346d3f55dd7cc355a",
                                  "typeString": "literal_string \"Wrong eth amount\""
                                },
                                "value": "Wrong eth amount"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_30752d3c04f64766e40f93295a8f97db272f737f4524c27346d3f55dd7cc355a",
                                  "typeString": "literal_string \"Wrong eth amount\""
                                }
                              ],
                              "id": 2171,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4182:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 2177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4182:47:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2178,
                          "nodeType": "ExpressionStatement",
                          "src": "4182:47:7"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2181,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2070,
                              "src": "4245:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2182,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2129,
                                    "src": "4254:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2183,
                                    "name": "tax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2156,
                                    "src": "4262:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4254:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2185,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4253:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2186,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4268:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4272:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4268:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2188,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2063,
                              "src": "4280:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2180,
                            "name": "send",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "4240:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,address,address)"
                            }
                          },
                          "id": 2189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4240:46:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2190,
                        "nodeType": "ExpressionStatement",
                        "src": "4240:46:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2192,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2070,
                              "src": "4302:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2193,
                              "name": "tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2156,
                              "src": "4310:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2194,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4315:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4319:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4315:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2196,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1619,
                              "src": "4327:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2191,
                            "name": "send",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "4297:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,address,address)"
                            }
                          },
                          "id": 2197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4297:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2198,
                        "nodeType": "ExpressionStatement",
                        "src": "4297:36:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2200,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2061,
                              "src": "4362:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2201,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2063,
                              "src": "4367:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2202,
                              "name": "_month",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2065,
                              "src": "4374:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 2203,
                              "name": "_level",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2067,
                              "src": "4382:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 2204,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2129,
                              "src": "4390:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2205,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2070,
                              "src": "4397:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2206,
                              "name": "txId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1615,
                              "src": "4405:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2199,
                            "name": "newSubToUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1722,
                            "src": "4349:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint8_$_t_uint8_$_t_uint256_$_t_contract$_IERC20_$729_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint8,uint8,uint256,contract IERC20,uint256)"
                            }
                          },
                          "id": 2207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4349:61:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2208,
                        "nodeType": "EmitStatement",
                        "src": "4344:66:7"
                      },
                      {
                        "expression": {
                          "id": 2210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4421:6:7",
                          "subExpression": {
                            "id": 2209,
                            "name": "txId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1615,
                            "src": "4421:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2211,
                        "nodeType": "ExpressionStatement",
                        "src": "4421:6:7"
                      }
                    ]
                  },
                  "functionSelector": "31829ff1",
                  "id": 2213,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 2073,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2072,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "3619:12:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 818,
                        "src": "3619:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3619:14:7"
                    }
                  ],
                  "name": "buySubToUser",
                  "nameLocation": "3518:12:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2061,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "3539:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2213,
                        "src": "3531:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2060,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3531:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2063,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "3552:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2213,
                        "src": "3544:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2062,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3544:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2065,
                        "mutability": "mutable",
                        "name": "_month",
                        "nameLocation": "3565:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2213,
                        "src": "3559:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2064,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3559:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2067,
                        "mutability": "mutable",
                        "name": "_level",
                        "nameLocation": "3579:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2213,
                        "src": "3573:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2066,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3573:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2070,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "3594:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2213,
                        "src": "3587:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2069,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2068,
                            "name": "IERC20",
                            "nameLocations": [
                              "3587:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "3587:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "3587:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3530:71:7"
                  },
                  "returnParameters": {
                    "id": 2074,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3633:0:7"
                  },
                  "scope": 2532,
                  "src": "3509:926:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2321,
                    "nodeType": "Block",
                    "src": "4552:582:7",
                    "statements": [
                      {
                        "assignments": [
                          2228
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2228,
                            "mutability": "mutable",
                            "name": "price",
                            "nameLocation": "4568:5:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2321,
                            "src": "4563:10:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2227,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4563:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2236,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2229,
                                "name": "itemPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "4576:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint16_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                                  "typeString": "mapping(address => mapping(uint16 => mapping(contract IERC20 => uint256)))"
                                }
                              },
                              "id": 2231,
                              "indexExpression": {
                                "id": 2230,
                                "name": "_seller",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2217,
                                "src": "4586:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4576:18:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$",
                                "typeString": "mapping(uint16 => mapping(contract IERC20 => uint256))"
                              }
                            },
                            "id": 2233,
                            "indexExpression": {
                              "id": 2232,
                              "name": "_itemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2219,
                              "src": "4595:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4576:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                              "typeString": "mapping(contract IERC20 => uint256)"
                            }
                          },
                          "id": 2235,
                          "indexExpression": {
                            "id": 2234,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2222,
                            "src": "4604:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4576:35:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4563:48:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 2246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2242,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 2238,
                                    "name": "tokenPremiumPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1629,
                                    "src": "4630:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                      "typeString": "mapping(contract IERC20 => uint256)"
                                    }
                                  },
                                  "id": 2240,
                                  "indexExpression": {
                                    "id": 2239,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2222,
                                    "src": "4648:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4630:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2241,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4658:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4630:29:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2245,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2243,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2228,
                                  "src": "4663:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 2244,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4671:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4663:9:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4630:42:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e277420757365207468697320746f6b656e",
                              "id": 2247,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4674:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9c3cd806b7cade9adedcb20dbc3237b2e93c42852d74778537f101b315ee201",
                                "typeString": "literal_string \"Can't use this token\""
                              },
                              "value": "Can't use this token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9c3cd806b7cade9adedcb20dbc3237b2e93c42852d74778537f101b315ee201",
                                "typeString": "literal_string \"Can't use this token\""
                              }
                            ],
                            "id": 2237,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4622:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4622:75:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2249,
                        "nodeType": "ExpressionStatement",
                        "src": "4622:75:7"
                      },
                      {
                        "assignments": [
                          2251
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2251,
                            "mutability": "mutable",
                            "name": "_fee",
                            "nameLocation": "4713:4:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2321,
                            "src": "4708:9:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2250,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4708:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2264,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            "id": 2257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 2252,
                                "name": "personalFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1633,
                                "src": "4720:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                                  "typeString": "mapping(address => uint16)"
                                }
                              },
                              "id": 2255,
                              "indexExpression": {
                                "expression": {
                                  "id": 2253,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "4732:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 2254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4736:6:7",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4732:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4720:23:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4747:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4720:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "baseExpression": {
                              "id": 2259,
                              "name": "personalFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1633,
                              "src": "4757:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                                "typeString": "mapping(address => uint16)"
                              }
                            },
                            "id": 2262,
                            "indexExpression": {
                              "expression": {
                                "id": 2260,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4769:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4773:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4769:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4757:23:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "id": 2263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4720:60:7",
                          "trueExpression": {
                            "id": 2258,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1617,
                            "src": "4751:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4708:72:7"
                      },
                      {
                        "assignments": [
                          2266
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2266,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "4796:3:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2321,
                            "src": "4791:8:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2265,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4791:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2272,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2267,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "4802:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2268,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2251,
                              "src": "4810:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4802:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31303030",
                            "id": 2270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4817:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "src": "4802:19:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4791:30:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 2280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2273,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2222,
                            "src": "4836:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4861:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4853:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2275,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4853:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4853:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2274,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "4846:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4846:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4836:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2289,
                        "nodeType": "IfStatement",
                        "src": "4833:103:7",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 2282,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4887:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2283,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4891:5:7",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "4887:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 2284,
                                  "name": "price",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2228,
                                  "src": "4900:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4887:18:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4e6f7420656e6f7567682065746820746f20627579206974656d",
                                "id": 2286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4907:28:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_bf401e21fd0f8905329259c36a81429cec0da138f5b4563635306a6979643bbd",
                                  "typeString": "literal_string \"Not enough eth to buy item\""
                                },
                                "value": "Not enough eth to buy item"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_bf401e21fd0f8905329259c36a81429cec0da138f5b4563635306a6979643bbd",
                                  "typeString": "literal_string \"Not enough eth to buy item\""
                                }
                              ],
                              "id": 2281,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4879:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 2287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4879:57:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2288,
                          "nodeType": "ExpressionStatement",
                          "src": "4879:57:7"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2291,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "4952:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2294,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 2292,
                                    "name": "price",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2228,
                                    "src": "4961:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2293,
                                    "name": "tax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2266,
                                    "src": "4969:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4961:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2295,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4960:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2296,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4975:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4979:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4975:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2298,
                              "name": "_seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2217,
                              "src": "4987:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2290,
                            "name": "send",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "4947:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,address,address)"
                            }
                          },
                          "id": 2299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:48:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2300,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:48:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2302,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "5011:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2303,
                              "name": "tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2266,
                              "src": "5019:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2304,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5024:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5028:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5024:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2306,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1619,
                              "src": "5036:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 2301,
                            "name": "send",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "5006:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,address,address)"
                            }
                          },
                          "id": 2307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5006:36:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2308,
                        "nodeType": "ExpressionStatement",
                        "src": "5006:36:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2310,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2215,
                              "src": "5066:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2311,
                              "name": "_seller",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2217,
                              "src": "5071:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2312,
                              "name": "_itemId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2219,
                              "src": "5080:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            {
                              "id": 2313,
                              "name": "price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "5089:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2314,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2222,
                              "src": "5096:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2315,
                              "name": "txId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1615,
                              "src": "5104:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2309,
                            "name": "newItem",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1705,
                            "src": "5058:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint16_$_t_uint256_$_t_contract$_IERC20_$729_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint16,uint256,contract IERC20,uint256)"
                            }
                          },
                          "id": 2316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5058:51:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2317,
                        "nodeType": "EmitStatement",
                        "src": "5053:56:7"
                      },
                      {
                        "expression": {
                          "id": 2319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5120:6:7",
                          "subExpression": {
                            "id": 2318,
                            "name": "txId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1615,
                            "src": "5120:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2320,
                        "nodeType": "ExpressionStatement",
                        "src": "5120:6:7"
                      }
                    ]
                  },
                  "functionSelector": "6d558bb2",
                  "id": 2322,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 2225,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2224,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "4538:12:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 818,
                        "src": "4538:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4538:14:7"
                    }
                  ],
                  "name": "buyItem",
                  "nameLocation": "4452:7:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2215,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "4468:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2322,
                        "src": "4460:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4460:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2217,
                        "mutability": "mutable",
                        "name": "_seller",
                        "nameLocation": "4481:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2322,
                        "src": "4473:15:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4473:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2219,
                        "mutability": "mutable",
                        "name": "_itemId",
                        "nameLocation": "4497:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2322,
                        "src": "4490:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 2218,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4490:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2222,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "4513:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2322,
                        "src": "4506:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2221,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2220,
                            "name": "IERC20",
                            "nameLocations": [
                              "4506:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "4506:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "4506:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4459:61:7"
                  },
                  "returnParameters": {
                    "id": 2226,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4552:0:7"
                  },
                  "scope": 2532,
                  "src": "4443:691:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2377,
                    "nodeType": "Block",
                    "src": "5235:294:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 2335,
                                  "name": "tokenPremiumPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1629,
                                  "src": "5254:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                    "typeString": "mapping(contract IERC20 => uint256)"
                                  }
                                },
                                "id": 2337,
                                "indexExpression": {
                                  "id": 2336,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2329,
                                  "src": "5272:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$729",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5254:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5282:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5254:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "63616e277420757365207468697320746f6b656e",
                              "id": 2340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5285:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1b0b536399333c31e9d266b85be6530adf9a2488ac324067c20e38cf60ab945a",
                                "typeString": "literal_string \"can't use this token\""
                              },
                              "value": "can't use this token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1b0b536399333c31e9d266b85be6530adf9a2488ac324067c20e38cf60ab945a",
                                "typeString": "literal_string \"can't use this token\""
                              }
                            ],
                            "id": 2334,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5246:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5246:62:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2342,
                        "nodeType": "ExpressionStatement",
                        "src": "5246:62:7"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 2350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2343,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2329,
                            "src": "5322:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2347,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5347:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2346,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5339:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2345,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5339:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2348,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5339:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2344,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "5332:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5332:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "5322:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2356,
                        "nodeType": "IfStatement",
                        "src": "5319:65:7",
                        "trueBody": {
                          "expression": {
                            "id": 2354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 2351,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "5365:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "expression": {
                                "id": 2352,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5375:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5379:5:7",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "5375:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5365:19:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2355,
                          "nodeType": "ExpressionStatement",
                          "src": "5365:19:7"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2358,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2329,
                              "src": "5400:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2359,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "5408:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 2360,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5417:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5421:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5417:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2362,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "5429:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2357,
                            "name": "send",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2485,
                            "src": "5395:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (contract IERC20,uint256,address,address)"
                            }
                          },
                          "id": 2363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5395:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2364,
                        "nodeType": "ExpressionStatement",
                        "src": "5395:40:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2366,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5463:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5467:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5463:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2368,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2324,
                              "src": "5475:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2369,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2326,
                              "src": "5482:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2370,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2329,
                              "src": "5491:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 2371,
                              "name": "txId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1615,
                              "src": "5499:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2365,
                            "name": "newDonation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1690,
                            "src": "5451:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_contract$_IERC20_$729_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256,contract IERC20,uint256)"
                            }
                          },
                          "id": 2372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5451:53:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2373,
                        "nodeType": "EmitStatement",
                        "src": "5446:58:7"
                      },
                      {
                        "expression": {
                          "id": 2375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "5515:6:7",
                          "subExpression": {
                            "id": 2374,
                            "name": "txId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1615,
                            "src": "5515:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2376,
                        "nodeType": "ExpressionStatement",
                        "src": "5515:6:7"
                      }
                    ]
                  },
                  "functionSelector": "1c61ed92",
                  "id": 2378,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 2332,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2331,
                        "name": "nonReentrant",
                        "nameLocations": [
                          "5221:12:7"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 818,
                        "src": "5221:12:7"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5221:14:7"
                    }
                  ],
                  "name": "donation",
                  "nameLocation": "5151:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2330,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2324,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "5168:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2378,
                        "src": "5160:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5160:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2326,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "5180:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2378,
                        "src": "5175:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2325,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5175:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2329,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "5196:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2378,
                        "src": "5189:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2328,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2327,
                            "name": "IERC20",
                            "nameLocations": [
                              "5189:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "5189:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "5189:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5159:44:7"
                  },
                  "returnParameters": {
                    "id": 2333,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5235:0:7"
                  },
                  "scope": 2532,
                  "src": "5142:387:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2408,
                    "nodeType": "Block",
                    "src": "5616:142:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 2389,
                                  "name": "tokenPremiumPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1629,
                                  "src": "5635:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                    "typeString": "mapping(contract IERC20 => uint256)"
                                  }
                                },
                                "id": 2391,
                                "indexExpression": {
                                  "id": 2390,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2381,
                                  "src": "5653:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$729",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5635:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2392,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5663:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5635:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e277420757365207468697320746f6b656e",
                              "id": 2394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5666:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9c3cd806b7cade9adedcb20dbc3237b2e93c42852d74778537f101b315ee201",
                                "typeString": "literal_string \"Can't use this token\""
                              },
                              "value": "Can't use this token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9c3cd806b7cade9adedcb20dbc3237b2e93c42852d74778537f101b315ee201",
                                "typeString": "literal_string \"Can't use this token\""
                              }
                            ],
                            "id": 2388,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5627:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5627:62:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2396,
                        "nodeType": "ExpressionStatement",
                        "src": "5627:62:7"
                      },
                      {
                        "expression": {
                          "id": 2406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2397,
                                  "name": "subLevelPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1651,
                                  "src": "5700:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                                    "typeString": "mapping(address => mapping(uint8 => mapping(contract IERC20 => uint256)))"
                                  }
                                },
                                "id": 2402,
                                "indexExpression": {
                                  "expression": {
                                    "id": 2398,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5714:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2399,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5718:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5714:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5700:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$",
                                  "typeString": "mapping(uint8 => mapping(contract IERC20 => uint256))"
                                }
                              },
                              "id": 2403,
                              "indexExpression": {
                                "id": 2400,
                                "name": "_level",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2383,
                                "src": "5726:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5700:33:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 2404,
                            "indexExpression": {
                              "id": 2401,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2381,
                              "src": "5734:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5700:41:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2405,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2385,
                            "src": "5744:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5700:50:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2407,
                        "nodeType": "ExpressionStatement",
                        "src": "5700:50:7"
                      }
                    ]
                  },
                  "functionSelector": "10aa9d34",
                  "id": 2409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeUserSubPrice",
                  "nameLocation": "5546:18:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2386,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2381,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "5572:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2409,
                        "src": "5565:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2380,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2379,
                            "name": "IERC20",
                            "nameLocations": [
                              "5565:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "5565:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "5565:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2383,
                        "mutability": "mutable",
                        "name": "_level",
                        "nameLocation": "5586:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2409,
                        "src": "5580:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2382,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5580:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2385,
                        "mutability": "mutable",
                        "name": "_price",
                        "nameLocation": "5599:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2409,
                        "src": "5594:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2384,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5594:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5564:42:7"
                  },
                  "returnParameters": {
                    "id": 2387,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5616:0:7"
                  },
                  "scope": 2532,
                  "src": "5537:221:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2439,
                    "nodeType": "Block",
                    "src": "5840:136:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2424,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 2420,
                                  "name": "tokenPremiumPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1629,
                                  "src": "5859:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                    "typeString": "mapping(contract IERC20 => uint256)"
                                  }
                                },
                                "id": 2422,
                                "indexExpression": {
                                  "id": 2421,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2412,
                                  "src": "5877:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$729",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5859:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 2423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5887:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5859:29:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e277420757365207468697320746f6b656e",
                              "id": 2425,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5890:22:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f9c3cd806b7cade9adedcb20dbc3237b2e93c42852d74778537f101b315ee201",
                                "typeString": "literal_string \"Can't use this token\""
                              },
                              "value": "Can't use this token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f9c3cd806b7cade9adedcb20dbc3237b2e93c42852d74778537f101b315ee201",
                                "typeString": "literal_string \"Can't use this token\""
                              }
                            ],
                            "id": 2419,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5851:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5851:62:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2427,
                        "nodeType": "ExpressionStatement",
                        "src": "5851:62:7"
                      },
                      {
                        "expression": {
                          "id": 2437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2428,
                                  "name": "itemPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "5924:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint16_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                                    "typeString": "mapping(address => mapping(uint16 => mapping(contract IERC20 => uint256)))"
                                  }
                                },
                                "id": 2433,
                                "indexExpression": {
                                  "expression": {
                                    "id": 2429,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5934:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5938:6:7",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5934:10:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5924:21:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint16_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$",
                                  "typeString": "mapping(uint16 => mapping(contract IERC20 => uint256))"
                                }
                              },
                              "id": 2434,
                              "indexExpression": {
                                "id": 2431,
                                "name": "_id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2414,
                                "src": "5946:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5924:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 2435,
                            "indexExpression": {
                              "id": 2432,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2412,
                              "src": "5951:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5924:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2436,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2416,
                            "src": "5961:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5924:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2438,
                        "nodeType": "ExpressionStatement",
                        "src": "5924:43:7"
                      }
                    ]
                  },
                  "functionSelector": "7849e367",
                  "id": 2440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "changeItemPrice",
                  "nameLocation": "5775:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2412,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "5798:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2440,
                        "src": "5791:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2411,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2410,
                            "name": "IERC20",
                            "nameLocations": [
                              "5791:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "5791:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "5791:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2414,
                        "mutability": "mutable",
                        "name": "_id",
                        "nameLocation": "5813:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2440,
                        "src": "5806:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "typeName": {
                          "id": 2413,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "5806:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2416,
                        "mutability": "mutable",
                        "name": "_price",
                        "nameLocation": "5823:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2440,
                        "src": "5818:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2415,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5818:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5790:40:7"
                  },
                  "returnParameters": {
                    "id": 2418,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5840:0:7"
                  },
                  "scope": 2532,
                  "src": "5766:210:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2484,
                    "nodeType": "Block",
                    "src": "6080:238:7",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          },
                          "id": 2459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2452,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2443,
                            "src": "6094:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 2456,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6119:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 2455,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6111:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2454,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6111:7:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6111:10:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2453,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 729,
                              "src": "6104:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$729_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 2458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6104:18:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$729",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "6094:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2482,
                          "nodeType": "Block",
                          "src": "6236:67:7",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2477,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2447,
                                    "src": "6271:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2478,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2449,
                                    "src": "6278:3:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2479,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2445,
                                    "src": "6283:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 2474,
                                    "name": "_token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2443,
                                    "src": "6251:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$729",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 2476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6258:12:7",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 728,
                                  "src": "6251:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 2480,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6251:40:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2481,
                              "nodeType": "ExpressionStatement",
                              "src": "6251:40:7"
                            }
                          ]
                        },
                        "id": 2483,
                        "nodeType": "IfStatement",
                        "src": "6091:212:7",
                        "trueBody": {
                          "id": 2473,
                          "nodeType": "Block",
                          "src": "6123:107:7",
                          "statements": [
                            {
                              "assignments": [
                                2461,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 2461,
                                  "mutability": "mutable",
                                  "name": "sent",
                                  "nameLocation": "6144:4:7",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2473,
                                  "src": "6139:9:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 2460,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6139:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 2468,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 2466,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6179:2:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "id": 2462,
                                      "name": "_to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2449,
                                      "src": "6154:3:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 2463,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6158:4:7",
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "6154:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 2465,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 2464,
                                      "name": "_amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2445,
                                      "src": "6170:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "6154:24:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 2467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6154:28:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6138:44:7"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 2470,
                                    "name": "sent",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2461,
                                    "src": "6205:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  ],
                                  "id": 2469,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "6197:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                    "typeString": "function (bool) pure"
                                  }
                                },
                                "id": 2471,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6197:13:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2472,
                              "nodeType": "ExpressionStatement",
                              "src": "6197:13:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 2485,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "send",
                  "nameLocation": "6010:4:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2450,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2443,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "6022:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2485,
                        "src": "6015:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2442,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2441,
                            "name": "IERC20",
                            "nameLocations": [
                              "6015:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "6015:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "6015:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2445,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "6035:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2485,
                        "src": "6030:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2444,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6030:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2447,
                        "mutability": "mutable",
                        "name": "_from",
                        "nameLocation": "6052:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2485,
                        "src": "6044:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2446,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6044:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2449,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "6067:3:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2485,
                        "src": "6059:11:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2448,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6059:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6014:57:7"
                  },
                  "returnParameters": {
                    "id": 2451,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6080:0:7"
                  },
                  "scope": 2532,
                  "src": "6001:317:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2507,
                    "nodeType": "Block",
                    "src": "6439:102:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2495,
                            "name": "_premiumPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2491,
                            "src": "6450:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2496,
                              "name": "tokenPremiumPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1629,
                              "src": "6466:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 2498,
                            "indexExpression": {
                              "id": 2497,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2488,
                              "src": "6484:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6466:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6450:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2500,
                        "nodeType": "ExpressionStatement",
                        "src": "6450:41:7"
                      },
                      {
                        "expression": {
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2501,
                            "name": "_aiPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2493,
                            "src": "6502:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 2502,
                              "name": "tokenAiPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1624,
                              "src": "6513:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 2504,
                            "indexExpression": {
                              "id": 2503,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2488,
                              "src": "6526:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6513:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6502:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2506,
                        "nodeType": "ExpressionStatement",
                        "src": "6502:31:7"
                      }
                    ]
                  },
                  "functionSelector": "ab17f1eb",
                  "id": 2508,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenPrices",
                  "nameLocation": "6351:14:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2488,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "6373:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2508,
                        "src": "6366:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2487,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2486,
                            "name": "IERC20",
                            "nameLocations": [
                              "6366:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "6366:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "6366:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6365:15:7"
                  },
                  "returnParameters": {
                    "id": 2494,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2491,
                        "mutability": "mutable",
                        "name": "_premiumPrice",
                        "nameLocation": "6409:13:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2508,
                        "src": "6404:18:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2490,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6404:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2493,
                        "mutability": "mutable",
                        "name": "_aiPrice",
                        "nameLocation": "6429:8:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2508,
                        "src": "6424:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2492,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6424:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6403:35:7"
                  },
                  "scope": 2532,
                  "src": "6342:199:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2530,
                    "nodeType": "Block",
                    "src": "6664:72:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2520,
                            "name": "_subLevelPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2518,
                            "src": "6675:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2521,
                                  "name": "subLevelPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1651,
                                  "src": "6692:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$_$",
                                    "typeString": "mapping(address => mapping(uint8 => mapping(contract IERC20 => uint256)))"
                                  }
                                },
                                "id": 2523,
                                "indexExpression": {
                                  "id": 2522,
                                  "name": "_user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2510,
                                  "src": "6706:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6692:20:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint8_$_t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$_$",
                                  "typeString": "mapping(uint8 => mapping(contract IERC20 => uint256))"
                                }
                              },
                              "id": 2525,
                              "indexExpression": {
                                "id": 2524,
                                "name": "_level",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2512,
                                "src": "6713:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6692:28:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$729_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 2527,
                            "indexExpression": {
                              "id": 2526,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2515,
                              "src": "6721:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6692:36:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6675:53:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2529,
                        "nodeType": "ExpressionStatement",
                        "src": "6675:53:7"
                      }
                    ]
                  },
                  "functionSelector": "392f0403",
                  "id": 2531,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserLevelPrice",
                  "nameLocation": "6558:17:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2516,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2510,
                        "mutability": "mutable",
                        "name": "_user",
                        "nameLocation": "6584:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2531,
                        "src": "6576:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6576:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2512,
                        "mutability": "mutable",
                        "name": "_level",
                        "nameLocation": "6597:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2531,
                        "src": "6591:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2511,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6591:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2515,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "6612:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2531,
                        "src": "6605:13:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2514,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2513,
                            "name": "IERC20",
                            "nameLocations": [
                              "6605:6:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "6605:6:7"
                          },
                          "referencedDeclaration": 729,
                          "src": "6605:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6575:44:7"
                  },
                  "returnParameters": {
                    "id": 2519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2518,
                        "mutability": "mutable",
                        "name": "_subLevelPrice",
                        "nameLocation": "6648:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2531,
                        "src": "6643:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2517,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6643:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6642:21:7"
                  },
                  "scope": 2532,
                  "src": "6549:187:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2533,
              "src": "185:6554:7",
              "usedErrors": [
                799
              ],
              "usedEvents": [
                1664,
                1677,
                1690,
                1705,
                1722
              ]
            }
          ],
          "src": "40:6701:7"
        },
        "id": 7
      },
      "contracts/interfaces/iPayment.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/iPayment.sol",
          "exportedSymbols": {
            "IERC20": [
              729
            ],
            "IPayment": [
              2546
            ]
          },
          "id": 2547,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2534,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "40:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2535,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2547,
              "sourceUnit": 730,
              "src": "66:56:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IPayment",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 2546,
              "linearizedBaseContracts": [
                2546
              ],
              "name": "IPayment",
              "nameLocation": "134:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "ab17f1eb",
                  "id": 2545,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTokenPrices",
                  "nameLocation": "161:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2538,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "183:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2545,
                        "src": "176:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 2537,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2536,
                            "name": "IERC20",
                            "nameLocations": [
                              "176:6:8"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "176:6:8"
                          },
                          "referencedDeclaration": 729,
                          "src": "176:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$729",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "175:15:8"
                  },
                  "returnParameters": {
                    "id": 2544,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2541,
                        "mutability": "mutable",
                        "name": "_premiumPrice",
                        "nameLocation": "219:13:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2545,
                        "src": "214:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2540,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "214:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2543,
                        "mutability": "mutable",
                        "name": "_aiPrice",
                        "nameLocation": "239:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2545,
                        "src": "234:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2542,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "234:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "213:35:8"
                  },
                  "scope": 2546,
                  "src": "152:97:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 2547,
              "src": "124:132:8",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "40:216:8"
        },
        "id": 8
      },
      "contracts/usdt.sol": {
        "ast": {
          "absolutePath": "contracts/usdt.sol",
          "exportedSymbols": {
            "Context": [
              785
            ],
            "ERC20": [
              651
            ],
            "IERC20": [
              729
            ],
            "IERC20Errors": [
              41
            ],
            "IERC20Metadata": [
              755
            ],
            "usdtMock": [
              2587
            ]
          },
          "id": 2588,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2548,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".18"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 2549,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2588,
              "sourceUnit": 652,
              "src": "61:55:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 2550,
                    "name": "ERC20",
                    "nameLocations": [
                      "141:5:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 651,
                    "src": "141:5:9"
                  },
                  "id": 2551,
                  "nodeType": "InheritanceSpecifier",
                  "src": "141:5:9"
                }
              ],
              "canonicalName": "usdtMock",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2587,
              "linearizedBaseContracts": [
                2587,
                651,
                41,
                755,
                729,
                785
              ],
              "name": "usdtMock",
              "nameLocation": "129:8:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2558,
                    "nodeType": "Block",
                    "src": "191:8:9",
                    "statements": []
                  },
                  "id": 2559,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "55534474",
                          "id": 2554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "175:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85884bc2158f4bdc08810b487538402e011f8d8877da6a41a8debb13af295c12",
                            "typeString": "literal_string \"USDt\""
                          },
                          "value": "USDt"
                        },
                        {
                          "hexValue": "55534474",
                          "id": 2555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "183:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_85884bc2158f4bdc08810b487538402e011f8d8877da6a41a8debb13af295c12",
                            "typeString": "literal_string \"USDt\""
                          },
                          "value": "USDt"
                        }
                      ],
                      "id": 2556,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 2553,
                        "name": "ERC20",
                        "nameLocations": [
                          "169:5:9"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 651,
                        "src": "169:5:9"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "169:21:9"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2552,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "165:3:9"
                  },
                  "returnParameters": {
                    "id": 2557,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "191:0:9"
                  },
                  "scope": 2587,
                  "src": "154:45:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2576,
                    "nodeType": "Block",
                    "src": "255:44:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2567,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2561,
                              "src": "268:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 2568,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2563,
                                "src": "273:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 2569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "280:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 2570,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      2586
                                    ],
                                    "referencedDeclaration": 2586,
                                    "src": "284:8:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint8_$",
                                      "typeString": "function () pure returns (uint8)"
                                    }
                                  },
                                  "id": 2571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "284:10:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "280:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "273:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2566,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "262:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "262:33:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2575,
                        "nodeType": "ExpressionStatement",
                        "src": "262:33:9"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 2577,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "214:4:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2561,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "227:4:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2577,
                        "src": "219:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2560,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "219:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2563,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "238:6:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 2577,
                        "src": "233:11:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2562,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "233:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "218:27:9"
                  },
                  "returnParameters": {
                    "id": 2565,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "255:0:9"
                  },
                  "scope": 2587,
                  "src": "205:94:9",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "baseFunctions": [
                    215
                  ],
                  "body": {
                    "id": 2585,
                    "nodeType": "Block",
                    "src": "358:20:9",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 2583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "372:2:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 2582,
                        "id": 2584,
                        "nodeType": "Return",
                        "src": "365:9:9"
                      }
                    ]
                  },
                  "functionSelector": "313ce567",
                  "id": 2586,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "312:8:9",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 2579,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "335:8:9"
                  },
                  "parameters": {
                    "id": 2578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "320:2:9"
                  },
                  "returnParameters": {
                    "id": 2582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2581,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2586,
                        "src": "352:5:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 2580,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "352:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "351:7:9"
                  },
                  "scope": 2587,
                  "src": "303:75:9",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2588,
              "src": "120:261:9",
              "usedErrors": [
                11,
                16,
                21,
                30,
                35,
                40
              ],
              "usedEvents": [
                663,
                672
              ]
            }
          ],
          "src": "33:348:9"
        },
        "id": 9
      }
    },
    "contracts": {
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "contracts/Giveaways.sol": {
        "Giveaways": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IPayment",
                  "name": "_payment",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint64",
                  "name": "id",
                  "type": "uint64"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "prize",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8[]",
                      "name": "prizeType",
                      "type": "uint8[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "prizeTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address[]",
                      "name": "users",
                      "type": "address[]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "winners",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    }
                  ],
                  "indexed": false,
                  "internalType": "struct Giveaways.Giveaway",
                  "name": "data",
                  "type": "tuple"
                }
              ],
              "name": "endGiveaways",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                }
              ],
              "name": "sendMoney",
              "type": "event"
            },
            {
              "stateMutability": "nonpayable",
              "type": "fallback"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "_id",
                  "type": "uint64"
                },
                {
                  "internalType": "uint256",
                  "name": "_prize",
                  "type": "uint256"
                }
              ],
              "name": "addPrize",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "_id",
                  "type": "uint64"
                },
                {
                  "internalType": "bool",
                  "name": "_active",
                  "type": "bool"
                }
              ],
              "name": "changeActive",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_prize",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint8[]",
                  "name": "_prizeType",
                  "type": "uint8[]"
                },
                {
                  "internalType": "uint256",
                  "name": "_startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_prizeTime",
                  "type": "uint256"
                }
              ],
              "name": "createGiveaway",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "_id",
                  "type": "uint64"
                },
                {
                  "internalType": "address[]",
                  "name": "_winners",
                  "type": "address[]"
                }
              ],
              "name": "endGiveaway",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "_id",
                  "type": "uint64"
                }
              ],
              "name": "getGiveaway",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "prize",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8[]",
                      "name": "prizeType",
                      "type": "uint8[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "prizeTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address[]",
                      "name": "users",
                      "type": "address[]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "winners",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Giveaways.Giveaway",
                  "name": "_gw",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "_page",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "_amount",
                  "type": "uint64"
                }
              ],
              "name": "getGiveaways",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "owner",
                      "type": "address"
                    },
                    {
                      "internalType": "contract IERC20",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "prize",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8[]",
                      "name": "prizeType",
                      "type": "uint8[]"
                    },
                    {
                      "internalType": "uint256",
                      "name": "startTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "endTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "prizeTime",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address[]",
                      "name": "users",
                      "type": "address[]"
                    },
                    {
                      "internalType": "address[]",
                      "name": "winners",
                      "type": "address[]"
                    },
                    {
                      "internalType": "bool",
                      "name": "active",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct Giveaways.Giveaway[]",
                  "name": "_gw",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "_id",
                  "type": "uint64"
                }
              ],
              "name": "getWinners",
              "outputs": [
                {
                  "internalType": "address[]",
                  "name": "_winners",
                  "type": "address[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint64",
                  "name": "_id",
                  "type": "uint64"
                }
              ],
              "name": "participate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_users",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_amount",
                  "type": "uint256[]"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "sendPrize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608034609457601f611ea538819003918201601f19168301916001600160401b03831184841017609957808492602094604052833981010312609457516001600160a01b038116810360945760016000819055600280546001600160a01b031916331790558054600160401b600160e01b031916604092831b600160401b600160e01b031617905551611df590816100b08239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040526004361015610022575b3615610020573461001b57005b600080fd5b005b60003560e01c80631dae1c8c14610e485780632d94913614610db65780635352937f14610d745780638d212a8914610bde5780638da5cb5b14610bb5578063c3f1276114610ab0578063ce1911ee14610a42578063d9b75a8c146103e5578063e399cbfd14610152578063f2849144146100eb5763f3fef3a30361000e573461001b57604036600319011261001b576004356001600160a01b038116810361001b57600254610020916001600160a01b03909116906100e2338314611c03565b60243590611ce0565b3461001b57604036600319011261001b57610104611065565b602435801515810361001b576100209161012960018060a01b03600254163314611c03565b60018060401b0316600052600360205260096040600020019060ff801983541691151516179055565b3461001b57606036600319011261001b576004356001600160401b03811161001b576101829036906004016111d9565b602435906001600160401b03821161001b573660238301121561001b578160040135916101ae836111c2565b926101bc604051948561119f565b8084526024602085019160051b8301019136831161001b57602401905b8282106103d55750506044359190506001600160a01b03821680830361001b5781518451036103905761021760018060a01b03600254163314611c03565b806102ac575060005b81518110156100205760019060008080806001600160a01b036102438689611869565b511661024f868b611869565b51905af161025b611ca1565b50610267575b01610220565b600080516020611da0833981519152828060a01b036102868386611869565b51166102928388611869565b51906102a48760405193849384611c7e565b0390a1610261565b929160005b8251811015610020576102fb9060206001600160a01b036102d28387611869565b51166102de8388611869565b5160405163a9059cbb60e01b815294859283929060048401611c63565b038160008a5af191821561038457600192610358575b50600080516020611da0833981519152828060a01b036103318387611869565b511661033d8388611869565b519061034f8660405193849384611c7e565b0390a1016102b1565b6103789060203d811161037d575b610370818361119f565b810190611c4b565b610311565b503d610366565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601e60248201527f617272617973206d757374206265207468652073616d65206c656e67746800006044820152606490fd5b81358152602091820191016101d9565b60c036600319011261001b576024356001600160a01b038116906004359082900361001b57604435916001600160401b03831161001b573660238401121561001b57826004013592610436846111c2565b90610444604051928361119f565b8482526024602083019560051b8201019036821161001b57602401945b818610610a2857505060249350606435926084359360a43591610482611d5d565b6001546040805163ab17f1eb60e01b8152600481018890529883928a91908290841c6001600160a01b03165afa978815610384576000986109f4575b508561099757505034955b81861115610944578583106108ff576104e3331515611c03565b156108c3578515610887576105076104ff61050f924290611c3e565b954290611c3e565b914290611c3e565b906040519461051d86611183565b3386526020808701958652604080880198895260608089019687526080890193845260a0890194855260c0890195865260e089018181526101008a0191825260016101208b0181815281546001600160401b039081166000908152600397889052959095209b518c546001600160a01b03199081166001600160a01b03928316178e559b51928d018054909c16921691909117909955995160028a0155955180519699969289019291821161075d57600160401b821161075d576020908354838555808410610839575b50019160005260206000208160051c9160005b8381106107f95750601f1981169003806107ad575b50509151600488015550505160058501555160068401555180519060078401906001600160401b03831161075d57600160401b831161075d576020908254848455808510610790575b500190600052602060002060005b8381106107735750509351805160088501955091506001600160401b03821161075d57600160401b821161075d576020908554838755808410610740575b500193600052602060002060005b828110610723576106d68560098651151591019060ff801983541691151516179055565b6001546001600160401b0380821690811461070d576001600160401b031990911660019182016001600160401b0316178155600055005b634e487b7160e01b600052601160045260246000fd5b85516001600160a01b0316818301556020909501946001016106b2565b610757908760005284846000209182019101611995565b866106a4565b634e487b7160e01b600052604160045260246000fd5b82516001600160a01b031681830155602090920191600101610666565b6107a7908460005285846000209182019101611995565b87610658565b9260009360005b8181106107c95750505001558780808061060f565b90919460206107ef6001928460ff8a5116919060ff809160031b9316831b921b19161790565b96019291016107b4565b6000805b602081106108125750838201556001016105fa565b865190969160019160209160ff60038b901b81811b199092169216901b17920196016107fd565b610865908560005283600020601f80870160051c8201928188168061086b575b500160051c0190611995565b8b6105e7565b600019850190815490600019908a0360031b1c16905538610859565b60405162461bcd60e51b8152602060048201526014602482015273063686f6f7365207072697a652061626f766520360641b6044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527321b0b713ba103ab9b2903a3434b9903a37b5b2b760611b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f5072697a652074696d65206d757374206265203e3d20656e642074696d6500006044820152606490fd5b60405162461bcd60e51b815260206004820152602560248201527f456e642074696d65206d757374206265206d6f7265207468616e2073746172746044820152642074696d6560d81b6064820152608490fd5b604097919751906323b872dd60e01b8252336004830152306024830152604482015260208160648160008a5af18015610384576109d5575b506104c9565b6109ed9060203d60201161037d57610370818361119f565b50876109cf565b9097506040813d604011610a20575b81610a106040938361119f565b8101031261001b575196886104be565b3d9150610a03565b853560ff8116810361001b57815260209586019501610461565b604036600319011261001b57610a56611065565b610a5e611d5d565b6001600160401b03166000908152600360205260409020600290610a83331515611c03565b8054610a99906001600160a01b03163314611c03565b01610aa76024358254611c3e565b90556001600055005b3461001b57602036600319011261001b57610ac9611065565b610ad1611247565b5060018060401b03166000526003602052610bb1604060002060ff600960405192610afb84611183565b80546001600160a01b0390811685526001820154166020850152600281015460408086019190915251610b3c81610b358160038601611294565b038261119f565b606085015260048101546080850152600581015460a0850152600681015460c0850152604051610b7381610b358160078601611826565b60e0850152604051610b8c81610b358160088601611826565b61010085015201541615156101208201526040519182916020835260208301906110b8565b0390f35b3461001b57600036600319011261001b576002546040516001600160a01b039091168152602090f35b3461001b57602036600319011261001b576001600160401b03610bff611065565b16806000526003602052604060002060ff60098201541615610d3657610c26331515611c03565b60008281526004602090815260408083203384529091529020546001600160401b0316610cf2576004810154421180610ce5575b15610ca757600701610c6c3382611893565b54600091825260046020908152604080842033855290915290912080546001600160401b0319166001600160401b0392909216919091179055005b60405162461bcd60e51b81526020600482015260166024820152756769766561776179206973206e6f742061637469766560501b6044820152606490fd5b5042600582015411610c5a565b60405162461bcd60e51b815260206004820152601c60248201527b165bdd48185c9948185b1c9958591e481c185c9d1a58da5c185d195960221b6044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152754769766561776179206973206e6f742061637469766560501b6044820152606490fd5b3461001b57604036600319011261001b57610d8d611065565b602435906001600160401b03821161001b57610db06100209236906004016111d9565b906119ac565b3461001b57602036600319011261001b576001600160401b03610dd7611065565b166000526003602052610b35610dfa600860406000200160405192838092611826565b60405180916020820160208352815180915260206040840192019060005b818110610e26575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610e18565b3461001b57604036600319011261001b57610e61611065565b6024356001600160401b038116919082810361001b5790911561104f575b6001600160401b031680610e92816111c2565b92610ea0604051948561119f565b818452601f19610eaf836111c2565b0160005b8181106110315750506001600160401b039081169190910290811690810361070d575b6001600160401b03811682811015610fc95780610fb7916000526003602052604060002060ff600960405192610f0b84611183565b80546001600160a01b0390811685526001820154166020850152600281015460408086019190915251610f4581610b358160038601611294565b606085015260048101546080850152600581015460a0850152600681015460c0850152604051610f7c81610b358160078601611826565b60e0850152604051610f9581610b358160088601611826565b6101008501520154161515610120820152610fb08287611869565b5284611869565b506001016001600160401b0316610ed6565b836040518091602082016020835281518091526040830190602060408260051b8601019301916000905b82821061100257505050500390f35b919360019193955060206110218192603f198a820301865288516110b8565b9601920192018594939192610ff3565b60209192935061103f611247565b8282880101520190839291610eb3565b50506001546000906001600160401b0316610e7f565b600435906001600160401b038216820361001b57565b906020808351928381520192019060005b8181106110995750505090565b82516001600160a01b031684526020938401939092019160010161108c565b90610140810160018060a01b03835116825260018060a01b03602084015116602083015260408301516040830152606083015190610140606084015281518091526020610160840192019060005b81811061116a5750505061012061115f61114b82936080870151608087015260a087015160a087015260c087015160c087015260e087015186820360e088015261107b565b61010086015185820361010087015261107b565b930151151591015290565b825160ff16845260209384019390920191600101611106565b61014081019081106001600160401b0382111761075d57604052565b601f909101601f19168101906001600160401b0382119082101761075d57604052565b6001600160401b03811161075d5760051b60200190565b9080601f8301121561001b578135906111f1826111c2565b926111ff604051948561119f565b82845260208085019360051b82010191821161001b57602001915b8183106112275750505090565b82356001600160a01b038116810361001b5781526020928301920161121a565b6040519061125482611183565b6000610120838281528260208201528260408201526060808201528260808201528260a08201528260c0820152606060e082015260606101008201520152565b8054808352600091825260208083209301925b81601f840110611684575491818110611670575b818110611659575b818110611642575b81811061162b575b818110611615575b8181106115fe575b8181106115e7575b8181106115d0575b8181106115b9575b8181106115a2575b81811061158b575b818110611574575b81811061155d575b818110611546575b81811061152f575b818110611518575b818110611501575b8181106114ea575b8181106114d3575b8181106114bc575b8181106114a5575b81811061148e575b818110611477575b818110611460575b818110611449575b818110611432575b81811061141b575b818110611404575b8181106113ed575b8181106113d6575b8181106113bf575b106113b4575090565b60f81c815260200190565b92602060019160ff8560f01c1681520193016113ab565b92602060019160ff8560e81c1681520193016113a3565b92602060019160ff8560e01c16815201930161139b565b92602060019160ff8560d81c168152019301611393565b92602060019160ff8560d01c16815201930161138b565b92602060019160ff8560c81c168152019301611383565b92602060019160ff8560c01c16815201930161137b565b92602060019160ff8560b81c168152019301611373565b92602060019160ff8560b01c16815201930161136b565b92602060019160ff8560a81c168152019301611363565b92602060019160ff8560a01c16815201930161135b565b92602060019160ff8560981c168152019301611353565b92602060019160ff8560901c16815201930161134b565b92602060019160ff8560881c168152019301611343565b92602060019160ff8560801c16815201930161133b565b92602060019160ff8560781c168152019301611333565b92602060019160ff8560701c16815201930161132b565b92602060019160ff8560681c168152019301611323565b92602060019160ff8560601c16815201930161131b565b92602060019160ff8560581c168152019301611313565b92602060019160ff8560501c16815201930161130b565b92602060019160ff8560481c168152019301611303565b92602060019160ff8560401c1681520193016112fb565b92602060019160ff8560381c1681520193016112f3565b92602060019160ff8560301c1681520193016112eb565b92602060019160ff8560281c1681520193016112e3565b92602060019160ff85831c1681520193016112db565b92602060019160ff8560181c1681520193016112d3565b92602060019160ff8560101c1681520193016112cb565b92602060019160ff8560081c1681520193016112c3565b92602060019160ff851681520193016112bb565b926001610400602092865460ff8116825260ff8160081c168583015260ff8160101c16604083015260ff8160181c16606083015260ff81861c16608083015260ff8160281c1660a083015260ff8160301c1660c083015260ff8160381c1660e083015260ff8160401c1661010083015260ff8160481c1661012083015260ff8160501c1661014083015260ff8160581c1661016083015260ff8160601c1661018083015260ff8160681c166101a083015260ff8160701c166101c083015260ff8160781c166101e083015260ff8160801c1661020083015260ff8160881c1661022083015260ff8160901c1661024083015260ff8160981c1661026083015260ff8160a01c1661028083015260ff8160a81c166102a083015260ff8160b01c166102c083015260ff8160b81c166102e083015260ff8160c01c1661030083015260ff8160c81c1661032083015260ff8160d01c1661034083015260ff8160d81c1661036083015260ff8160e01c1661038083015260ff8160e81c166103a083015260ff8160f01c166103c083015260f81c6103e08201520194019201916112a7565b906020825491828152019160005260206000209060005b81811061184a5750505090565b82546001600160a01b031684526020909301926001928301920161183d565b805182101561187d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b805490600160401b82101561075d576001820180825582101561187d576000908152602090200180546001600160a01b0319166001600160a01b03909216919091179055565b6001600160401b03909116815260406020820181905282546001600160a01b039081169183019190915260018301541660608201526002820154608082015261014060a082015261016060ff600961198961197361193e610180870160038901611294565b600488015460c0880152600588015460e08801526006880154610100880152868103603f190161012088015260078801611826565b858103603f190161014087015260088701611826565b94015416151591015290565b8181106119a0575050565b60008155600101611995565b91909160018060401b03811660005260036020526040600020906005820154421115611bc65760088201938454611b8d576002546001600160a01b03163303611b515760098301805460ff191690556007830154600384015490811115611a6e5750506001820154600283015483549495600080516020611d8083398151915295611a5a939192611a49926001600160a01b039283169216611ce0565b83546001600160a01b031690611893565b611a69604051928392836118d9565b0390a1565b815103611b15578051906001600160401b03821161075d57600160401b821161075d576020908654838855808410611af8575b50019460005260206000209460005b828110611adb57505050600080516020611d80833981519152929350611a69604051928392836118d9565b81516001600160a01b031681880155602090910190600101611ab0565b611b0f908860005284846000209182019101611995565b38611aa1565b60405162461bcd60e51b815260206004820152601460248201527315dc9bdb99c81dda5b9b995c9cc8185b5bdd5b9d60621b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932b713ba103a34329037bbb732b960611b6044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527011da5d99585dd85e481a5cc8195b991959607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527411da5d99585dd85e481a5cc81b9bdd08195b991959605a1b6044820152606490fd5b15611c0a57565b60405162461bcd60e51b815260206004820152600c60248201526b2bb937b7339039b2b73232b960a11b6044820152606490fd5b9190820180921161070d57565b9081602091031261001b5751801515810361001b5790565b6001600160a01b039091168152602081019190915260400190565b6001600160a01b0391821681526020810192909252909116604082015260600190565b3d15611cdb573d906001600160401b03821161075d5760405191611ccf601f8201601f19166020018461119f565b82523d6000602084013e565b606090565b9091906001600160a01b031680611d0b5750600080809381935af1611d03611ca1565b501561001b57565b91611d3192602092600060405180968195829463a9059cbb60e01b845260048401611c63565b03925af1801561038457611d425750565b611d5a9060203d60201161037d57610370818361119f565b50565b600260005414611d6e576002600055565b633ee5aeb560e01b60005260046000fdfe04c28ec0338a332133e6498addd8448c2a3391e5266cc871da83916c27ee191d9a9c2f752930c6b65ffe6835d58a652f85b2e0d2ce30c65872c1598efeced2bda2646970667358221220d0c38d07df61636986288328384bff80ade332a6c92d5c72e8751480e0102cb264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH1 0x94 JUMPI PUSH1 0x1F PUSH2 0x1EA5 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0x99 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0x94 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH1 0x94 JUMPI PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x40 SWAP3 DUP4 SHL PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB AND OR SWAP1 SSTORE MLOAD PUSH2 0x1DF5 SWAP1 DUP2 PUSH2 0xB0 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x22 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x20 JUMPI CALLVALUE PUSH2 0x1B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1DAE1C8C EQ PUSH2 0xE48 JUMPI DUP1 PUSH4 0x2D949136 EQ PUSH2 0xDB6 JUMPI DUP1 PUSH4 0x5352937F EQ PUSH2 0xD74 JUMPI DUP1 PUSH4 0x8D212A89 EQ PUSH2 0xBDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBB5 JUMPI DUP1 PUSH4 0xC3F12761 EQ PUSH2 0xAB0 JUMPI DUP1 PUSH4 0xCE1911EE EQ PUSH2 0xA42 JUMPI DUP1 PUSH4 0xD9B75A8C EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xE399CBFD EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xF2849144 EQ PUSH2 0xEB JUMPI PUSH4 0xF3FEF3A3 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1B JUMPI PUSH1 0x2 SLOAD PUSH2 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xE2 CALLER DUP4 EQ PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x104 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1B JUMPI PUSH2 0x20 SWAP2 PUSH2 0x129 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1B JUMPI PUSH2 0x182 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1B JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1B JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x1AE DUP4 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 PUSH2 0x1BC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x119F JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x1B JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3D5 JUMPI POP POP PUSH1 0x44 CALLDATALOAD SWAP2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x1B JUMPI DUP2 MLOAD DUP5 MLOAD SUB PUSH2 0x390 JUMPI PUSH2 0x217 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ PUSH2 0x1C03 JUMP JUMPDEST DUP1 PUSH2 0x2AC JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20 JUMPI PUSH1 0x1 SWAP1 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x243 DUP7 DUP10 PUSH2 0x1869 JUMP JUMPDEST MLOAD AND PUSH2 0x24F DUP7 DUP12 PUSH2 0x1869 JUMP JUMPDEST MLOAD SWAP1 GAS CALL PUSH2 0x25B PUSH2 0x1CA1 JUMP JUMPDEST POP PUSH2 0x267 JUMPI JUMPDEST ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DA0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x286 DUP4 DUP7 PUSH2 0x1869 JUMP JUMPDEST MLOAD AND PUSH2 0x292 DUP4 DUP9 PUSH2 0x1869 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A4 DUP8 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x1C7E JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x261 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x20 JUMPI PUSH2 0x2FB SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2D2 DUP4 DUP8 PUSH2 0x1869 JUMP JUMPDEST MLOAD AND PUSH2 0x2DE DUP4 DUP9 PUSH2 0x1869 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP3 SWAP1 PUSH1 0x4 DUP5 ADD PUSH2 0x1C63 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP11 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x384 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x358 JUMPI JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DA0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x331 DUP4 DUP8 PUSH2 0x1869 JUMP JUMPDEST MLOAD AND PUSH2 0x33D DUP4 DUP9 PUSH2 0x1869 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x34F DUP7 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x1C7E JUMP JUMPDEST SUB SWAP1 LOG1 ADD PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x378 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x37D JUMPI JUMPDEST PUSH2 0x370 DUP2 DUP4 PUSH2 0x119F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x617272617973206D757374206265207468652073616D65206C656E6774680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x4 CALLDATALOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x1B JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1B JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x1B JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH2 0x436 DUP5 PUSH2 0x11C2 JUMP JUMPDEST SWAP1 PUSH2 0x444 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x119F JUMP JUMPDEST DUP5 DUP3 MSTORE PUSH1 0x24 PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x1B JUMPI PUSH1 0x24 ADD SWAP5 JUMPDEST DUP2 DUP7 LT PUSH2 0xA28 JUMPI POP POP PUSH1 0x24 SWAP4 POP PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH2 0x482 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xAB17F1EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE SWAP9 DUP4 SWAP3 DUP11 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 SWAP9 PUSH2 0x9F4 JUMPI JUMPDEST POP DUP6 PUSH2 0x997 JUMPI POP POP CALLVALUE SWAP6 JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0x944 JUMPI DUP6 DUP4 LT PUSH2 0x8FF JUMPI PUSH2 0x4E3 CALLER ISZERO ISZERO PUSH2 0x1C03 JUMP JUMPDEST ISZERO PUSH2 0x8C3 JUMPI DUP6 ISZERO PUSH2 0x887 JUMPI PUSH2 0x507 PUSH2 0x4FF PUSH2 0x50F SWAP3 TIMESTAMP SWAP1 PUSH2 0x1C3E JUMP JUMPDEST SWAP6 TIMESTAMP SWAP1 PUSH2 0x1C3E JUMP JUMPDEST SWAP2 TIMESTAMP SWAP1 PUSH2 0x1C3E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x51D DUP7 PUSH2 0x1183 JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 DUP1 DUP9 ADD SWAP9 DUP10 MSTORE PUSH1 0x60 DUP1 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP10 ADD SWAP5 DUP6 MSTORE PUSH1 0xC0 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0xE0 DUP10 ADD DUP2 DUP2 MSTORE PUSH2 0x100 DUP11 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH2 0x120 DUP12 ADD DUP2 DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP8 DUP9 SWAP1 MSTORE SWAP6 SWAP1 SWAP6 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP15 SSTORE SWAP12 MLOAD SWAP3 DUP14 ADD DUP1 SLOAD SWAP1 SWAP13 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP10 SSTORE SWAP10 MLOAD PUSH1 0x2 DUP11 ADD SSTORE SWAP6 MLOAD DUP1 MLOAD SWAP7 SWAP10 SWAP7 SWAP3 DUP10 ADD SWAP3 SWAP2 DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x20 SWAP1 DUP4 SLOAD DUP4 DUP6 SSTORE DUP1 DUP5 LT PUSH2 0x839 JUMPI JUMPDEST POP ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x7F9 JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x7AD JUMPI JUMPDEST POP POP SWAP2 MLOAD PUSH1 0x4 DUP9 ADD SSTORE POP POP MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH1 0x7 DUP5 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x75D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x75D JUMPI PUSH1 0x20 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x790 JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x773 JUMPI POP POP SWAP4 MLOAD DUP1 MLOAD PUSH1 0x8 DUP6 ADD SWAP6 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x20 SWAP1 DUP6 SLOAD DUP4 DUP8 SSTORE DUP1 DUP5 LT PUSH2 0x740 JUMPI JUMPDEST POP ADD SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x723 JUMPI PUSH2 0x6D6 DUP6 PUSH1 0x9 DUP7 MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR DUP2 SSTORE PUSH1 0x0 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1 ADD PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x757 SWAP1 DUP8 PUSH1 0x0 MSTORE DUP5 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1995 JUMP JUMPDEST DUP7 PUSH2 0x6A4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7A7 SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1995 JUMP JUMPDEST DUP8 PUSH2 0x658 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7C9 JUMPI POP POP POP ADD SSTORE DUP8 DUP1 DUP1 DUP1 PUSH2 0x60F JUMP JUMPDEST SWAP1 SWAP2 SWAP5 PUSH1 0x20 PUSH2 0x7EF PUSH1 0x1 SWAP3 DUP5 PUSH1 0xFF DUP11 MLOAD AND SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x812 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x5FA JUMP JUMPDEST DUP7 MLOAD SWAP1 SWAP7 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x20 SWAP2 PUSH1 0xFF PUSH1 0x3 DUP12 SWAP1 SHL DUP2 DUP2 SHL NOT SWAP1 SWAP3 AND SWAP3 AND SWAP1 SHL OR SWAP3 ADD SWAP7 ADD PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x865 SWAP1 DUP6 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP9 AND DUP1 PUSH2 0x86B JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1995 JUMP JUMPDEST DUP12 PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 DUP11 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x63686F6F7365207072697A652061626F7665203 PUSH1 0x64 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B713BA103AB9B2903A3434B9903A37B5B2B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072697A652074696D65206D757374206265203E3D20656E642074696D650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D757374206265206D6F7265207468616E207374617274 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2074696D65 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP8 SWAP2 SWAP8 MLOAD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x384 JUMPI PUSH2 0x9D5 JUMPI JUMPDEST POP PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x9ED SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x37D JUMPI PUSH2 0x370 DUP2 DUP4 PUSH2 0x119F JUMP JUMPDEST POP DUP8 PUSH2 0x9CF JUMP JUMPDEST SWAP1 SWAP8 POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xA20 JUMPI JUMPDEST DUP2 PUSH2 0xA10 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x119F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1B JUMPI MLOAD SWAP7 DUP9 PUSH2 0x4BE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA03 JUMP JUMPDEST DUP6 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x1B JUMPI DUP2 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 ADD PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xA56 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0xA5E PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 PUSH2 0xA83 CALLER ISZERO ISZERO PUSH2 0x1C03 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xA99 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C03 JUMP JUMPDEST ADD PUSH2 0xAA7 PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x1C3E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xAC9 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0xAD1 PUSH2 0x1247 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xBB1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xAFB DUP5 PUSH2 0x1183 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH2 0xB3C DUP2 PUSH2 0xB35 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x1294 JUMP JUMPDEST SUB DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xB73 DUP2 PUSH2 0xB35 DUP2 PUSH1 0x7 DUP7 ADD PUSH2 0x1826 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xB8C DUP2 PUSH2 0xB35 DUP2 PUSH1 0x8 DUP7 ADD PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x10B8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xBFF PUSH2 0x1065 JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x9 DUP3 ADD SLOAD AND ISZERO PUSH2 0xD36 JUMPI PUSH2 0xC26 CALLER ISZERO ISZERO PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xCF2 JUMPI PUSH1 0x4 DUP2 ADD SLOAD TIMESTAMP GT DUP1 PUSH2 0xCE5 JUMPI JUMPDEST ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x7 ADD PUSH2 0xC6C CALLER DUP3 PUSH2 0x1893 JUMP JUMPDEST SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x6769766561776179206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP TIMESTAMP PUSH1 0x5 DUP3 ADD SLOAD GT PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x165BDD48185C9948185B1C9958591E481C185C9D1A58DA5C185D1959 PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4769766561776179206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xD8D PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1B JUMPI PUSH2 0xDB0 PUSH2 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11D9 JUMP JUMPDEST SWAP1 PUSH2 0x19AC JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xDD7 PUSH2 0x1065 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xB35 PUSH2 0xDFA PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xE26 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xE18 JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xE61 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP2 SUB PUSH2 0x1B JUMPI SWAP1 SWAP2 ISZERO PUSH2 0x104F JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP1 PUSH2 0xE92 DUP2 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 PUSH2 0xEA0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x119F JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0xEAF DUP4 PUSH2 0x11C2 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1031 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP1 DUP2 AND SWAP1 DUP2 SUB PUSH2 0x70D JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP3 DUP2 LT ISZERO PUSH2 0xFC9 JUMPI DUP1 PUSH2 0xFB7 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xF0B DUP5 PUSH2 0x1183 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH2 0xF45 DUP2 PUSH2 0xB35 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF7C DUP2 PUSH2 0xB35 DUP2 PUSH1 0x7 DUP7 ADD PUSH2 0x1826 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF95 DUP2 PUSH2 0xB35 DUP2 PUSH1 0x8 DUP7 ADD PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0xFB0 DUP3 DUP8 PUSH2 0x1869 JUMP JUMPDEST MSTORE DUP5 PUSH2 0x1869 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xED6 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1002 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1021 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x10B8 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP3 SWAP4 POP PUSH2 0x103F PUSH2 0x1247 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0xEB3 JUMP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1099 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x108C JUMP JUMPDEST SWAP1 PUSH2 0x140 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD SWAP1 PUSH2 0x140 PUSH1 0x60 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH2 0x160 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x116A JUMPI POP POP POP PUSH2 0x120 PUSH2 0x115F PUSH2 0x114B DUP3 SWAP4 PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP8 ADD MLOAD DUP7 DUP3 SUB PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x107B JUMP JUMPDEST PUSH2 0x100 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x107B JUMP JUMPDEST SWAP4 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0xFF AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x75D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x75D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x75D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1B JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x11F1 DUP3 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 PUSH2 0x11FF PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x119F JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x1B JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1227 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1B JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x121A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1254 DUP3 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP4 ADD SWAP3 JUMPDEST DUP2 PUSH1 0x1F DUP5 ADD LT PUSH2 0x1684 JUMPI SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x1670 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1659 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1642 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x162B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1615 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15FE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15E7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15D0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15B9 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15A2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x158B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1574 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x155D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1546 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x152F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1518 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1501 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x14EA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x14D3 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x14BC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x14A5 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x148E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1477 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1460 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1449 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1432 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x141B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1404 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x13ED JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x13D6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x13BF JUMPI JUMPDEST LT PUSH2 0x13B4 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xF0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x139B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1393 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x138B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1383 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x137B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x136B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x135B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x98 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x90 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x134B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x88 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x80 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x133B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x78 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x70 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x132B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x68 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1323 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x60 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x131B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x58 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1313 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x50 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x130B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x48 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1303 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x40 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12FB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x38 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x30 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12EB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x28 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 DUP4 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x18 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x10 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12CB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH2 0x400 PUSH1 0x20 SWAP3 DUP7 SLOAD PUSH1 0xFF DUP2 AND DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND DUP6 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x18 SHR AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF DUP2 DUP7 SHR AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x28 SHR AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x30 SHR AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x38 SHR AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x48 SHR AND PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x50 SHR AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x58 SHR AND PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x60 SHR AND PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x68 SHR AND PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x70 SHR AND PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x78 SHR AND PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x80 SHR AND PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x88 SHR AND PUSH2 0x220 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x90 SHR AND PUSH2 0x240 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x98 SHR AND PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x280 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH2 0x2A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND PUSH2 0x2C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND PUSH2 0x2E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC0 SHR AND PUSH2 0x300 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC8 SHR AND PUSH2 0x320 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD0 SHR AND PUSH2 0x340 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD8 SHR AND PUSH2 0x360 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE0 SHR AND PUSH2 0x380 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE8 SHR AND PUSH2 0x3A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xF0 SHR AND PUSH2 0x3C0 DUP4 ADD MSTORE PUSH1 0xF8 SHR PUSH2 0x3E0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP3 ADD SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x184A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x183D JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x187D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x75D JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x187D JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x140 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x160 PUSH1 0xFF PUSH1 0x9 PUSH2 0x1989 PUSH2 0x1973 PUSH2 0x193E PUSH2 0x180 DUP8 ADD PUSH1 0x3 DUP10 ADD PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x4 DUP9 ADD SLOAD PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0x5 DUP9 ADD SLOAD PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x6 DUP9 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE DUP7 DUP2 SUB PUSH1 0x3F NOT ADD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0x7 DUP9 ADD PUSH2 0x1826 JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x3F NOT ADD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x8 DUP8 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP5 ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x19A0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1995 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1BC6 JUMPI PUSH1 0x8 DUP3 ADD SWAP4 DUP5 SLOAD PUSH2 0x1B8D JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1B51 JUMPI PUSH1 0x9 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP1 DUP2 GT ISZERO PUSH2 0x1A6E JUMPI POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD DUP4 SLOAD SWAP5 SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D80 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH2 0x1A5A SWAP4 SWAP2 SWAP3 PUSH2 0x1A49 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 AND PUSH2 0x1CE0 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x1A69 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x18D9 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST DUP2 MLOAD SUB PUSH2 0x1B15 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x20 SWAP1 DUP7 SLOAD DUP4 DUP9 SSTORE DUP1 DUP5 LT PUSH2 0x1AF8 JUMPI JUMPDEST POP ADD SWAP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1ADB JUMPI POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D80 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP4 POP PUSH2 0x1A69 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x18D9 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP9 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x1B0F SWAP1 DUP9 PUSH1 0x0 MSTORE DUP5 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1995 JUMP JUMPDEST CODESIZE PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15DC9BDB99C81DDA5B9B995C9CC8185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2CB7BA9030B932B713BA103A34329037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11DA5D99585DD85E481A5CC8195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DA5D99585DD85E481A5CC81B9BDD08195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C0A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2BB937B7339039B2B73232B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x70D JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1CDB JUMPI RETURNDATASIZE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1CCF PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x119F JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1D0B JUMPI POP PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x1D03 PUSH2 0x1CA1 JUMP JUMPDEST POP ISZERO PUSH2 0x1B JUMPI JUMP JUMPDEST SWAP2 PUSH2 0x1D31 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x1C63 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x384 JUMPI PUSH2 0x1D42 JUMPI POP JUMP JUMPDEST PUSH2 0x1D5A SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x37D JUMPI PUSH2 0x370 DUP2 DUP4 PUSH2 0x119F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1D6E JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID DIV 0xC2 DUP15 0xC0 CALLER DUP11 CALLER 0x21 CALLER 0xE6 BLOBHASH DUP11 0xDD 0xD8 PREVRANDAO DUP13 0x2A CALLER SWAP2 0xE5 0x26 PUSH13 0xC871DA83916C27EE191D9A9C2F PUSH22 0x2930C6B65FFE6835D58A652F85B2E0D2CE30C65872C1 MSIZE DUP15 INVALID 0xCE 0xD2 0xBD LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC3 DUP14 SMOD 0xDF PUSH2 0x6369 DUP7 0x28 DUP4 0x28 CODESIZE 0x4B SELFDESTRUCT DUP1 0xAD 0xE3 ORIGIN 0xA6 0xC9 0x2D TLOAD PUSH19 0xE8751480E0102CB264736F6C634300081C0033 ",
              "sourceMap": "160:5521:6:-:0;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;1857:1:5;-1:-1:-1;1857:1:5;;;817:27:6;160:5521;;-1:-1:-1;;;;;;160:5521:6;833:10;160:5521;;;;;-1:-1:-1;;;;;;;;160:5521:6;;;;;-1:-1:-1;;;;;;;160:5521:6;;;;;;;;;;;;;-1:-1:-1;160:5521:6;;;;;;-1:-1:-1;160:5521:6;;;;;-1:-1:-1;160:5521:6"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_array_address_dyn": {
                  "entryPoint": 4569,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 7243,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint64": {
                  "entryPoint": 4197,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 7267,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256_contract_IERC20": {
                  "entryPoint": 7294,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_array_address_dyn": {
                  "entryPoint": 4219,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_address_dyn_storage": {
                  "entryPoint": 6182,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_array_uint8_dyn_storage": {
                  "entryPoint": 4756,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_Giveaway": {
                  "entryPoint": 4280,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint64_struct_Giveaway_storage_ptr": {
                  "entryPoint": 6361,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "allocate_and_zero_memory_struct_struct_Giveaway": {
                  "entryPoint": 4679,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_allocation_size_array_address_dyn": {
                  "entryPoint": 4546,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_address_to_array_address_dyn_storage_ptr": {
                  "entryPoint": 6291,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "checked_add_uint256": {
                  "entryPoint": 7230,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clear_storage_range_address": {
                  "entryPoint": 6549,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_returndata": {
                  "entryPoint": 7329,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 4511,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_19578": {
                  "entryPoint": 4483,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_endGiveaway": {
                  "entryPoint": 6572,
                  "id": 1050,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 7517,
                  "id": 834,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_send": {
                  "entryPoint": 7392,
                  "id": 1514,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "memory_array_index_access_struct_Giveaway_dyn": {
                  "entryPoint": 6249,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "require_helper_stringliteral_a1c5": {
                  "entryPoint": 7171,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "update_byte_slice_dynamic1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "update_storage_value_offset_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610022575b3615610020573461001b57005b600080fd5b005b60003560e01c80631dae1c8c14610e485780632d94913614610db65780635352937f14610d745780638d212a8914610bde5780638da5cb5b14610bb5578063c3f1276114610ab0578063ce1911ee14610a42578063d9b75a8c146103e5578063e399cbfd14610152578063f2849144146100eb5763f3fef3a30361000e573461001b57604036600319011261001b576004356001600160a01b038116810361001b57600254610020916001600160a01b03909116906100e2338314611c03565b60243590611ce0565b3461001b57604036600319011261001b57610104611065565b602435801515810361001b576100209161012960018060a01b03600254163314611c03565b60018060401b0316600052600360205260096040600020019060ff801983541691151516179055565b3461001b57606036600319011261001b576004356001600160401b03811161001b576101829036906004016111d9565b602435906001600160401b03821161001b573660238301121561001b578160040135916101ae836111c2565b926101bc604051948561119f565b8084526024602085019160051b8301019136831161001b57602401905b8282106103d55750506044359190506001600160a01b03821680830361001b5781518451036103905761021760018060a01b03600254163314611c03565b806102ac575060005b81518110156100205760019060008080806001600160a01b036102438689611869565b511661024f868b611869565b51905af161025b611ca1565b50610267575b01610220565b600080516020611da0833981519152828060a01b036102868386611869565b51166102928388611869565b51906102a48760405193849384611c7e565b0390a1610261565b929160005b8251811015610020576102fb9060206001600160a01b036102d28387611869565b51166102de8388611869565b5160405163a9059cbb60e01b815294859283929060048401611c63565b038160008a5af191821561038457600192610358575b50600080516020611da0833981519152828060a01b036103318387611869565b511661033d8388611869565b519061034f8660405193849384611c7e565b0390a1016102b1565b6103789060203d811161037d575b610370818361119f565b810190611c4b565b610311565b503d610366565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601e60248201527f617272617973206d757374206265207468652073616d65206c656e67746800006044820152606490fd5b81358152602091820191016101d9565b60c036600319011261001b576024356001600160a01b038116906004359082900361001b57604435916001600160401b03831161001b573660238401121561001b57826004013592610436846111c2565b90610444604051928361119f565b8482526024602083019560051b8201019036821161001b57602401945b818610610a2857505060249350606435926084359360a43591610482611d5d565b6001546040805163ab17f1eb60e01b8152600481018890529883928a91908290841c6001600160a01b03165afa978815610384576000986109f4575b508561099757505034955b81861115610944578583106108ff576104e3331515611c03565b156108c3578515610887576105076104ff61050f924290611c3e565b954290611c3e565b914290611c3e565b906040519461051d86611183565b3386526020808701958652604080880198895260608089019687526080890193845260a0890194855260c0890195865260e089018181526101008a0191825260016101208b0181815281546001600160401b039081166000908152600397889052959095209b518c546001600160a01b03199081166001600160a01b03928316178e559b51928d018054909c16921691909117909955995160028a0155955180519699969289019291821161075d57600160401b821161075d576020908354838555808410610839575b50019160005260206000208160051c9160005b8381106107f95750601f1981169003806107ad575b50509151600488015550505160058501555160068401555180519060078401906001600160401b03831161075d57600160401b831161075d576020908254848455808510610790575b500190600052602060002060005b8381106107735750509351805160088501955091506001600160401b03821161075d57600160401b821161075d576020908554838755808410610740575b500193600052602060002060005b828110610723576106d68560098651151591019060ff801983541691151516179055565b6001546001600160401b0380821690811461070d576001600160401b031990911660019182016001600160401b0316178155600055005b634e487b7160e01b600052601160045260246000fd5b85516001600160a01b0316818301556020909501946001016106b2565b610757908760005284846000209182019101611995565b866106a4565b634e487b7160e01b600052604160045260246000fd5b82516001600160a01b031681830155602090920191600101610666565b6107a7908460005285846000209182019101611995565b87610658565b9260009360005b8181106107c95750505001558780808061060f565b90919460206107ef6001928460ff8a5116919060ff809160031b9316831b921b19161790565b96019291016107b4565b6000805b602081106108125750838201556001016105fa565b865190969160019160209160ff60038b901b81811b199092169216901b17920196016107fd565b610865908560005283600020601f80870160051c8201928188168061086b575b500160051c0190611995565b8b6105e7565b600019850190815490600019908a0360031b1c16905538610859565b60405162461bcd60e51b8152602060048201526014602482015273063686f6f7365207072697a652061626f766520360641b6044820152606490fd5b60405162461bcd60e51b815260206004820152601460248201527321b0b713ba103ab9b2903a3434b9903a37b5b2b760611b6044820152606490fd5b60405162461bcd60e51b815260206004820152601e60248201527f5072697a652074696d65206d757374206265203e3d20656e642074696d6500006044820152606490fd5b60405162461bcd60e51b815260206004820152602560248201527f456e642074696d65206d757374206265206d6f7265207468616e2073746172746044820152642074696d6560d81b6064820152608490fd5b604097919751906323b872dd60e01b8252336004830152306024830152604482015260208160648160008a5af18015610384576109d5575b506104c9565b6109ed9060203d60201161037d57610370818361119f565b50876109cf565b9097506040813d604011610a20575b81610a106040938361119f565b8101031261001b575196886104be565b3d9150610a03565b853560ff8116810361001b57815260209586019501610461565b604036600319011261001b57610a56611065565b610a5e611d5d565b6001600160401b03166000908152600360205260409020600290610a83331515611c03565b8054610a99906001600160a01b03163314611c03565b01610aa76024358254611c3e565b90556001600055005b3461001b57602036600319011261001b57610ac9611065565b610ad1611247565b5060018060401b03166000526003602052610bb1604060002060ff600960405192610afb84611183565b80546001600160a01b0390811685526001820154166020850152600281015460408086019190915251610b3c81610b358160038601611294565b038261119f565b606085015260048101546080850152600581015460a0850152600681015460c0850152604051610b7381610b358160078601611826565b60e0850152604051610b8c81610b358160088601611826565b61010085015201541615156101208201526040519182916020835260208301906110b8565b0390f35b3461001b57600036600319011261001b576002546040516001600160a01b039091168152602090f35b3461001b57602036600319011261001b576001600160401b03610bff611065565b16806000526003602052604060002060ff60098201541615610d3657610c26331515611c03565b60008281526004602090815260408083203384529091529020546001600160401b0316610cf2576004810154421180610ce5575b15610ca757600701610c6c3382611893565b54600091825260046020908152604080842033855290915290912080546001600160401b0319166001600160401b0392909216919091179055005b60405162461bcd60e51b81526020600482015260166024820152756769766561776179206973206e6f742061637469766560501b6044820152606490fd5b5042600582015411610c5a565b60405162461bcd60e51b815260206004820152601c60248201527b165bdd48185c9948185b1c9958591e481c185c9d1a58da5c185d195960221b6044820152606490fd5b60405162461bcd60e51b81526020600482015260166024820152754769766561776179206973206e6f742061637469766560501b6044820152606490fd5b3461001b57604036600319011261001b57610d8d611065565b602435906001600160401b03821161001b57610db06100209236906004016111d9565b906119ac565b3461001b57602036600319011261001b576001600160401b03610dd7611065565b166000526003602052610b35610dfa600860406000200160405192838092611826565b60405180916020820160208352815180915260206040840192019060005b818110610e26575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610e18565b3461001b57604036600319011261001b57610e61611065565b6024356001600160401b038116919082810361001b5790911561104f575b6001600160401b031680610e92816111c2565b92610ea0604051948561119f565b818452601f19610eaf836111c2565b0160005b8181106110315750506001600160401b039081169190910290811690810361070d575b6001600160401b03811682811015610fc95780610fb7916000526003602052604060002060ff600960405192610f0b84611183565b80546001600160a01b0390811685526001820154166020850152600281015460408086019190915251610f4581610b358160038601611294565b606085015260048101546080850152600581015460a0850152600681015460c0850152604051610f7c81610b358160078601611826565b60e0850152604051610f9581610b358160088601611826565b6101008501520154161515610120820152610fb08287611869565b5284611869565b506001016001600160401b0316610ed6565b836040518091602082016020835281518091526040830190602060408260051b8601019301916000905b82821061100257505050500390f35b919360019193955060206110218192603f198a820301865288516110b8565b9601920192018594939192610ff3565b60209192935061103f611247565b8282880101520190839291610eb3565b50506001546000906001600160401b0316610e7f565b600435906001600160401b038216820361001b57565b906020808351928381520192019060005b8181106110995750505090565b82516001600160a01b031684526020938401939092019160010161108c565b90610140810160018060a01b03835116825260018060a01b03602084015116602083015260408301516040830152606083015190610140606084015281518091526020610160840192019060005b81811061116a5750505061012061115f61114b82936080870151608087015260a087015160a087015260c087015160c087015260e087015186820360e088015261107b565b61010086015185820361010087015261107b565b930151151591015290565b825160ff16845260209384019390920191600101611106565b61014081019081106001600160401b0382111761075d57604052565b601f909101601f19168101906001600160401b0382119082101761075d57604052565b6001600160401b03811161075d5760051b60200190565b9080601f8301121561001b578135906111f1826111c2565b926111ff604051948561119f565b82845260208085019360051b82010191821161001b57602001915b8183106112275750505090565b82356001600160a01b038116810361001b5781526020928301920161121a565b6040519061125482611183565b6000610120838281528260208201528260408201526060808201528260808201528260a08201528260c0820152606060e082015260606101008201520152565b8054808352600091825260208083209301925b81601f840110611684575491818110611670575b818110611659575b818110611642575b81811061162b575b818110611615575b8181106115fe575b8181106115e7575b8181106115d0575b8181106115b9575b8181106115a2575b81811061158b575b818110611574575b81811061155d575b818110611546575b81811061152f575b818110611518575b818110611501575b8181106114ea575b8181106114d3575b8181106114bc575b8181106114a5575b81811061148e575b818110611477575b818110611460575b818110611449575b818110611432575b81811061141b575b818110611404575b8181106113ed575b8181106113d6575b8181106113bf575b106113b4575090565b60f81c815260200190565b92602060019160ff8560f01c1681520193016113ab565b92602060019160ff8560e81c1681520193016113a3565b92602060019160ff8560e01c16815201930161139b565b92602060019160ff8560d81c168152019301611393565b92602060019160ff8560d01c16815201930161138b565b92602060019160ff8560c81c168152019301611383565b92602060019160ff8560c01c16815201930161137b565b92602060019160ff8560b81c168152019301611373565b92602060019160ff8560b01c16815201930161136b565b92602060019160ff8560a81c168152019301611363565b92602060019160ff8560a01c16815201930161135b565b92602060019160ff8560981c168152019301611353565b92602060019160ff8560901c16815201930161134b565b92602060019160ff8560881c168152019301611343565b92602060019160ff8560801c16815201930161133b565b92602060019160ff8560781c168152019301611333565b92602060019160ff8560701c16815201930161132b565b92602060019160ff8560681c168152019301611323565b92602060019160ff8560601c16815201930161131b565b92602060019160ff8560581c168152019301611313565b92602060019160ff8560501c16815201930161130b565b92602060019160ff8560481c168152019301611303565b92602060019160ff8560401c1681520193016112fb565b92602060019160ff8560381c1681520193016112f3565b92602060019160ff8560301c1681520193016112eb565b92602060019160ff8560281c1681520193016112e3565b92602060019160ff85831c1681520193016112db565b92602060019160ff8560181c1681520193016112d3565b92602060019160ff8560101c1681520193016112cb565b92602060019160ff8560081c1681520193016112c3565b92602060019160ff851681520193016112bb565b926001610400602092865460ff8116825260ff8160081c168583015260ff8160101c16604083015260ff8160181c16606083015260ff81861c16608083015260ff8160281c1660a083015260ff8160301c1660c083015260ff8160381c1660e083015260ff8160401c1661010083015260ff8160481c1661012083015260ff8160501c1661014083015260ff8160581c1661016083015260ff8160601c1661018083015260ff8160681c166101a083015260ff8160701c166101c083015260ff8160781c166101e083015260ff8160801c1661020083015260ff8160881c1661022083015260ff8160901c1661024083015260ff8160981c1661026083015260ff8160a01c1661028083015260ff8160a81c166102a083015260ff8160b01c166102c083015260ff8160b81c166102e083015260ff8160c01c1661030083015260ff8160c81c1661032083015260ff8160d01c1661034083015260ff8160d81c1661036083015260ff8160e01c1661038083015260ff8160e81c166103a083015260ff8160f01c166103c083015260f81c6103e08201520194019201916112a7565b906020825491828152019160005260206000209060005b81811061184a5750505090565b82546001600160a01b031684526020909301926001928301920161183d565b805182101561187d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b805490600160401b82101561075d576001820180825582101561187d576000908152602090200180546001600160a01b0319166001600160a01b03909216919091179055565b6001600160401b03909116815260406020820181905282546001600160a01b039081169183019190915260018301541660608201526002820154608082015261014060a082015261016060ff600961198961197361193e610180870160038901611294565b600488015460c0880152600588015460e08801526006880154610100880152868103603f190161012088015260078801611826565b858103603f190161014087015260088701611826565b94015416151591015290565b8181106119a0575050565b60008155600101611995565b91909160018060401b03811660005260036020526040600020906005820154421115611bc65760088201938454611b8d576002546001600160a01b03163303611b515760098301805460ff191690556007830154600384015490811115611a6e5750506001820154600283015483549495600080516020611d8083398151915295611a5a939192611a49926001600160a01b039283169216611ce0565b83546001600160a01b031690611893565b611a69604051928392836118d9565b0390a1565b815103611b15578051906001600160401b03821161075d57600160401b821161075d576020908654838855808410611af8575b50019460005260206000209460005b828110611adb57505050600080516020611d80833981519152929350611a69604051928392836118d9565b81516001600160a01b031681880155602090910190600101611ab0565b611b0f908860005284846000209182019101611995565b38611aa1565b60405162461bcd60e51b815260206004820152601460248201527315dc9bdb99c81dda5b9b995c9cc8185b5bdd5b9d60621b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932b713ba103a34329037bbb732b960611b6044820152606490fd5b60405162461bcd60e51b815260206004820152601160248201527011da5d99585dd85e481a5cc8195b991959607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601560248201527411da5d99585dd85e481a5cc81b9bdd08195b991959605a1b6044820152606490fd5b15611c0a57565b60405162461bcd60e51b815260206004820152600c60248201526b2bb937b7339039b2b73232b960a11b6044820152606490fd5b9190820180921161070d57565b9081602091031261001b5751801515810361001b5790565b6001600160a01b039091168152602081019190915260400190565b6001600160a01b0391821681526020810192909252909116604082015260600190565b3d15611cdb573d906001600160401b03821161075d5760405191611ccf601f8201601f19166020018461119f565b82523d6000602084013e565b606090565b9091906001600160a01b031680611d0b5750600080809381935af1611d03611ca1565b501561001b57565b91611d3192602092600060405180968195829463a9059cbb60e01b845260048401611c63565b03925af1801561038457611d425750565b611d5a9060203d60201161037d57610370818361119f565b50565b600260005414611d6e576002600055565b633ee5aeb560e01b60005260046000fdfe04c28ec0338a332133e6498addd8448c2a3391e5266cc871da83916c27ee191d9a9c2f752930c6b65ffe6835d58a652f85b2e0d2ce30c65872c1598efeced2bda2646970667358221220d0c38d07df61636986288328384bff80ade332a6c92d5c72e8751480e0102cb264736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x22 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x20 JUMPI CALLVALUE PUSH2 0x1B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1DAE1C8C EQ PUSH2 0xE48 JUMPI DUP1 PUSH4 0x2D949136 EQ PUSH2 0xDB6 JUMPI DUP1 PUSH4 0x5352937F EQ PUSH2 0xD74 JUMPI DUP1 PUSH4 0x8D212A89 EQ PUSH2 0xBDE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xBB5 JUMPI DUP1 PUSH4 0xC3F12761 EQ PUSH2 0xAB0 JUMPI DUP1 PUSH4 0xCE1911EE EQ PUSH2 0xA42 JUMPI DUP1 PUSH4 0xD9B75A8C EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xE399CBFD EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xF2849144 EQ PUSH2 0xEB JUMPI PUSH4 0xF3FEF3A3 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1B JUMPI PUSH1 0x2 SLOAD PUSH2 0x20 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0xE2 CALLER DUP4 EQ PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1CE0 JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x104 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1B JUMPI PUSH2 0x20 SWAP2 PUSH2 0x129 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x9 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1B JUMPI PUSH2 0x182 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11D9 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1B JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1B JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x1AE DUP4 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 PUSH2 0x1BC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x119F JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x1B JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3D5 JUMPI POP POP PUSH1 0x44 CALLDATALOAD SWAP2 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP1 DUP4 SUB PUSH2 0x1B JUMPI DUP2 MLOAD DUP5 MLOAD SUB PUSH2 0x390 JUMPI PUSH2 0x217 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ PUSH2 0x1C03 JUMP JUMPDEST DUP1 PUSH2 0x2AC JUMPI POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x20 JUMPI PUSH1 0x1 SWAP1 PUSH1 0x0 DUP1 DUP1 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x243 DUP7 DUP10 PUSH2 0x1869 JUMP JUMPDEST MLOAD AND PUSH2 0x24F DUP7 DUP12 PUSH2 0x1869 JUMP JUMPDEST MLOAD SWAP1 GAS CALL PUSH2 0x25B PUSH2 0x1CA1 JUMP JUMPDEST POP PUSH2 0x267 JUMPI JUMPDEST ADD PUSH2 0x220 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DA0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x286 DUP4 DUP7 PUSH2 0x1869 JUMP JUMPDEST MLOAD AND PUSH2 0x292 DUP4 DUP9 PUSH2 0x1869 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A4 DUP8 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x1C7E JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0x261 JUMP JUMPDEST SWAP3 SWAP2 PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x20 JUMPI PUSH2 0x2FB SWAP1 PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2D2 DUP4 DUP8 PUSH2 0x1869 JUMP JUMPDEST MLOAD AND PUSH2 0x2DE DUP4 DUP9 PUSH2 0x1869 JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP5 DUP6 SWAP3 DUP4 SWAP3 SWAP1 PUSH1 0x4 DUP5 ADD PUSH2 0x1C63 JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP11 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x384 JUMPI PUSH1 0x1 SWAP3 PUSH2 0x358 JUMPI JUMPDEST POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1DA0 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP3 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x331 DUP4 DUP8 PUSH2 0x1869 JUMP JUMPDEST MLOAD AND PUSH2 0x33D DUP4 DUP9 PUSH2 0x1869 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x34F DUP7 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH2 0x1C7E JUMP JUMPDEST SUB SWAP1 LOG1 ADD PUSH2 0x2B1 JUMP JUMPDEST PUSH2 0x378 SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x37D JUMPI JUMPDEST PUSH2 0x370 DUP2 DUP4 PUSH2 0x119F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1C4B JUMP JUMPDEST PUSH2 0x311 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x617272617973206D757374206265207468652073616D65206C656E6774680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1D9 JUMP JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x4 CALLDATALOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x1B JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1B JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x1B JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH2 0x436 DUP5 PUSH2 0x11C2 JUMP JUMPDEST SWAP1 PUSH2 0x444 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x119F JUMP JUMPDEST DUP5 DUP3 MSTORE PUSH1 0x24 PUSH1 0x20 DUP4 ADD SWAP6 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x1B JUMPI PUSH1 0x24 ADD SWAP5 JUMPDEST DUP2 DUP7 LT PUSH2 0xA28 JUMPI POP POP PUSH1 0x24 SWAP4 POP PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP2 PUSH2 0x482 PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xAB17F1EB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE SWAP9 DUP4 SWAP3 DUP11 SWAP2 SWAP1 DUP3 SWAP1 DUP5 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP8 DUP9 ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 SWAP9 PUSH2 0x9F4 JUMPI JUMPDEST POP DUP6 PUSH2 0x997 JUMPI POP POP CALLVALUE SWAP6 JUMPDEST DUP2 DUP7 GT ISZERO PUSH2 0x944 JUMPI DUP6 DUP4 LT PUSH2 0x8FF JUMPI PUSH2 0x4E3 CALLER ISZERO ISZERO PUSH2 0x1C03 JUMP JUMPDEST ISZERO PUSH2 0x8C3 JUMPI DUP6 ISZERO PUSH2 0x887 JUMPI PUSH2 0x507 PUSH2 0x4FF PUSH2 0x50F SWAP3 TIMESTAMP SWAP1 PUSH2 0x1C3E JUMP JUMPDEST SWAP6 TIMESTAMP SWAP1 PUSH2 0x1C3E JUMP JUMPDEST SWAP2 TIMESTAMP SWAP1 PUSH2 0x1C3E JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x51D DUP7 PUSH2 0x1183 JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 DUP1 DUP9 ADD SWAP9 DUP10 MSTORE PUSH1 0x60 DUP1 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0x80 DUP10 ADD SWAP4 DUP5 MSTORE PUSH1 0xA0 DUP10 ADD SWAP5 DUP6 MSTORE PUSH1 0xC0 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0xE0 DUP10 ADD DUP2 DUP2 MSTORE PUSH2 0x100 DUP11 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH2 0x120 DUP12 ADD DUP2 DUP2 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP8 DUP9 SWAP1 MSTORE SWAP6 SWAP1 SWAP6 KECCAK256 SWAP12 MLOAD DUP13 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND OR DUP15 SSTORE SWAP12 MLOAD SWAP3 DUP14 ADD DUP1 SLOAD SWAP1 SWAP13 AND SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP10 SSTORE SWAP10 MLOAD PUSH1 0x2 DUP11 ADD SSTORE SWAP6 MLOAD DUP1 MLOAD SWAP7 SWAP10 SWAP7 SWAP3 DUP10 ADD SWAP3 SWAP2 DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x20 SWAP1 DUP4 SLOAD DUP4 DUP6 SSTORE DUP1 DUP5 LT PUSH2 0x839 JUMPI JUMPDEST POP ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x7F9 JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x7AD JUMPI JUMPDEST POP POP SWAP2 MLOAD PUSH1 0x4 DUP9 ADD SSTORE POP POP MLOAD PUSH1 0x5 DUP6 ADD SSTORE MLOAD PUSH1 0x6 DUP5 ADD SSTORE MLOAD DUP1 MLOAD SWAP1 PUSH1 0x7 DUP5 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x75D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP4 GT PUSH2 0x75D JUMPI PUSH1 0x20 SWAP1 DUP3 SLOAD DUP5 DUP5 SSTORE DUP1 DUP6 LT PUSH2 0x790 JUMPI JUMPDEST POP ADD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x773 JUMPI POP POP SWAP4 MLOAD DUP1 MLOAD PUSH1 0x8 DUP6 ADD SWAP6 POP SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x20 SWAP1 DUP6 SLOAD DUP4 DUP8 SSTORE DUP1 DUP5 LT PUSH2 0x740 JUMPI JUMPDEST POP ADD SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x723 JUMPI PUSH2 0x6D6 DUP6 PUSH1 0x9 DUP7 MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND SWAP1 DUP2 EQ PUSH2 0x70D JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 SWAP2 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR DUP2 SSTORE PUSH1 0x0 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1 ADD PUSH2 0x6B2 JUMP JUMPDEST PUSH2 0x757 SWAP1 DUP8 PUSH1 0x0 MSTORE DUP5 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1995 JUMP JUMPDEST DUP7 PUSH2 0x6A4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP4 ADD SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x666 JUMP JUMPDEST PUSH2 0x7A7 SWAP1 DUP5 PUSH1 0x0 MSTORE DUP6 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1995 JUMP JUMPDEST DUP8 PUSH2 0x658 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP4 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7C9 JUMPI POP POP POP ADD SSTORE DUP8 DUP1 DUP1 DUP1 PUSH2 0x60F JUMP JUMPDEST SWAP1 SWAP2 SWAP5 PUSH1 0x20 PUSH2 0x7EF PUSH1 0x1 SWAP3 DUP5 PUSH1 0xFF DUP11 MLOAD AND SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x812 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x5FA JUMP JUMPDEST DUP7 MLOAD SWAP1 SWAP7 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x20 SWAP2 PUSH1 0xFF PUSH1 0x3 DUP12 SWAP1 SHL DUP2 DUP2 SHL NOT SWAP1 SWAP3 AND SWAP3 AND SWAP1 SHL OR SWAP3 ADD SWAP7 ADD PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x865 SWAP1 DUP6 PUSH1 0x0 MSTORE DUP4 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP2 DUP9 AND DUP1 PUSH2 0x86B JUMPI JUMPDEST POP ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x1995 JUMP JUMPDEST DUP12 PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 DUP11 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x63686F6F7365207072697A652061626F7665203 PUSH1 0x64 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B713BA103AB9B2903A3434B9903A37B5B2B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072697A652074696D65206D757374206265203E3D20656E642074696D650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D757374206265206D6F7265207468616E207374617274 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x2074696D65 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 SWAP8 SWAP2 SWAP8 MLOAD SWAP1 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 PUSH1 0x0 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x384 JUMPI PUSH2 0x9D5 JUMPI JUMPDEST POP PUSH2 0x4C9 JUMP JUMPDEST PUSH2 0x9ED SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x37D JUMPI PUSH2 0x370 DUP2 DUP4 PUSH2 0x119F JUMP JUMPDEST POP DUP8 PUSH2 0x9CF JUMP JUMPDEST SWAP1 SWAP8 POP PUSH1 0x40 DUP2 RETURNDATASIZE PUSH1 0x40 GT PUSH2 0xA20 JUMPI JUMPDEST DUP2 PUSH2 0xA10 PUSH1 0x40 SWAP4 DUP4 PUSH2 0x119F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1B JUMPI MLOAD SWAP7 DUP9 PUSH2 0x4BE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA03 JUMP JUMPDEST DUP6 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x1B JUMPI DUP2 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 ADD PUSH2 0x461 JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xA56 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0xA5E PUSH2 0x1D5D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 SWAP1 PUSH2 0xA83 CALLER ISZERO ISZERO PUSH2 0x1C03 JUMP JUMPDEST DUP1 SLOAD PUSH2 0xA99 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C03 JUMP JUMPDEST ADD PUSH2 0xAA7 PUSH1 0x24 CALLDATALOAD DUP3 SLOAD PUSH2 0x1C3E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x1 PUSH1 0x0 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xAC9 PUSH2 0x1065 JUMP JUMPDEST PUSH2 0xAD1 PUSH2 0x1247 JUMP JUMPDEST POP PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xBB1 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xAFB DUP5 PUSH2 0x1183 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH2 0xB3C DUP2 PUSH2 0xB35 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x1294 JUMP JUMPDEST SUB DUP3 PUSH2 0x119F JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xB73 DUP2 PUSH2 0xB35 DUP2 PUSH1 0x7 DUP7 ADD PUSH2 0x1826 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xB8C DUP2 PUSH2 0xB35 DUP2 PUSH1 0x8 DUP7 ADD PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x10B8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xBFF PUSH2 0x1065 JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x9 DUP3 ADD SLOAD AND ISZERO PUSH2 0xD36 JUMPI PUSH2 0xC26 CALLER ISZERO ISZERO PUSH2 0x1C03 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xCF2 JUMPI PUSH1 0x4 DUP2 ADD SLOAD TIMESTAMP GT DUP1 PUSH2 0xCE5 JUMPI JUMPDEST ISZERO PUSH2 0xCA7 JUMPI PUSH1 0x7 ADD PUSH2 0xC6C CALLER DUP3 PUSH2 0x1893 JUMP JUMPDEST SLOAD PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x6769766561776179206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP TIMESTAMP PUSH1 0x5 DUP3 ADD SLOAD GT PUSH2 0xC5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH28 0x165BDD48185C9948185B1C9958591E481C185C9D1A58DA5C185D1959 PUSH1 0x22 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4769766561776179206973206E6F7420616374697665 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xD8D PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1B JUMPI PUSH2 0xDB0 PUSH2 0x20 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x11D9 JUMP JUMPDEST SWAP1 PUSH2 0x19AC JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH2 0xDD7 PUSH2 0x1065 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xB35 PUSH2 0xDFA PUSH1 0x8 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x1826 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xE26 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xE18 JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xE61 PUSH2 0x1065 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 DUP2 SUB PUSH2 0x1B JUMPI SWAP1 SWAP2 ISZERO PUSH2 0x104F JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP1 PUSH2 0xE92 DUP2 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 PUSH2 0xEA0 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x119F JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x1F NOT PUSH2 0xEAF DUP4 PUSH2 0x11C2 JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1031 JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP1 DUP2 AND SWAP1 DUP2 SUB PUSH2 0x70D JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND DUP3 DUP2 LT ISZERO PUSH2 0xFC9 JUMPI DUP1 PUSH2 0xFB7 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x9 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xF0B DUP5 PUSH2 0x1183 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH2 0xF45 DUP2 PUSH2 0xB35 DUP2 PUSH1 0x3 DUP7 ADD PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF7C DUP2 PUSH2 0xB35 DUP2 PUSH1 0x7 DUP7 ADD PUSH2 0x1826 JUMP JUMPDEST PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x40 MLOAD PUSH2 0xF95 DUP2 PUSH2 0xB35 DUP2 PUSH1 0x8 DUP7 ADD PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x100 DUP6 ADD MSTORE ADD SLOAD AND ISZERO ISZERO PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0xFB0 DUP3 DUP8 PUSH2 0x1869 JUMP JUMPDEST MSTORE DUP5 PUSH2 0x1869 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xED6 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x20 PUSH1 0x40 DUP3 PUSH1 0x5 SHL DUP7 ADD ADD SWAP4 ADD SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1002 JUMPI POP POP POP POP SUB SWAP1 RETURN JUMPDEST SWAP2 SWAP4 PUSH1 0x1 SWAP2 SWAP4 SWAP6 POP PUSH1 0x20 PUSH2 0x1021 DUP2 SWAP3 PUSH1 0x3F NOT DUP11 DUP3 SUB ADD DUP7 MSTORE DUP9 MLOAD PUSH2 0x10B8 JUMP JUMPDEST SWAP7 ADD SWAP3 ADD SWAP3 ADD DUP6 SWAP5 SWAP4 SWAP2 SWAP3 PUSH2 0xFF3 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP3 SWAP4 POP PUSH2 0x103F PUSH2 0x1247 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD SWAP1 DUP4 SWAP3 SWAP2 PUSH2 0xEB3 JUMP JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xE7F JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1099 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x108C JUMP JUMPDEST SWAP1 PUSH2 0x140 DUP2 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD SWAP1 PUSH2 0x140 PUSH1 0x60 DUP5 ADD MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH2 0x160 DUP5 ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x116A JUMPI POP POP POP PUSH2 0x120 PUSH2 0x115F PUSH2 0x114B DUP3 SWAP4 PUSH1 0x80 DUP8 ADD MLOAD PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xA0 DUP8 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP8 ADD MLOAD PUSH1 0xC0 DUP8 ADD MSTORE PUSH1 0xE0 DUP8 ADD MLOAD DUP7 DUP3 SUB PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x107B JUMP JUMPDEST PUSH2 0x100 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x107B JUMP JUMPDEST SWAP4 ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 MLOAD PUSH1 0xFF AND DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x75D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x75D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x75D JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1B JUMPI DUP2 CALLDATALOAD SWAP1 PUSH2 0x11F1 DUP3 PUSH2 0x11C2 JUMP JUMPDEST SWAP3 PUSH2 0x11FF PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x119F JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x1B JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1227 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x1B JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x121A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1254 DUP3 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x60 PUSH2 0x100 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP4 ADD SWAP3 JUMPDEST DUP2 PUSH1 0x1F DUP5 ADD LT PUSH2 0x1684 JUMPI SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0x1670 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1659 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1642 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x162B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1615 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15FE JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15E7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15D0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15B9 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x15A2 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x158B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1574 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x155D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1546 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x152F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1518 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1501 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x14EA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x14D3 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x14BC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x14A5 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x148E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1477 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1460 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1449 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1432 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x141B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x1404 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x13ED JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x13D6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0x13BF JUMPI JUMPDEST LT PUSH2 0x13B4 JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0xF8 SHR DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xF0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x13AB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x13A3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x139B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1393 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x138B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1383 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x137B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1373 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x136B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1363 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA0 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x135B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x98 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1353 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x90 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x134B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x88 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1343 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x80 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x133B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x78 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1333 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x70 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x132B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x68 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1323 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x60 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x131B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x58 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1313 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x50 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x130B JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x48 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x1303 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x40 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12FB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x38 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12F3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x30 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12EB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x28 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12E3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 DUP4 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12DB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x18 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12D3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x10 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12CB JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12C3 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 AND DUP2 MSTORE ADD SWAP4 ADD PUSH2 0x12BB JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH2 0x400 PUSH1 0x20 SWAP3 DUP7 SLOAD PUSH1 0xFF DUP2 AND DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND DUP6 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x18 SHR AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF DUP2 DUP7 SHR AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x28 SHR AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x30 SHR AND PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x38 SHR AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x48 SHR AND PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x50 SHR AND PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x58 SHR AND PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x60 SHR AND PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x68 SHR AND PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x70 SHR AND PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x78 SHR AND PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x80 SHR AND PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x88 SHR AND PUSH2 0x220 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x90 SHR AND PUSH2 0x240 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x98 SHR AND PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND PUSH2 0x280 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH2 0x2A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND PUSH2 0x2C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND PUSH2 0x2E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC0 SHR AND PUSH2 0x300 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC8 SHR AND PUSH2 0x320 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD0 SHR AND PUSH2 0x340 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD8 SHR AND PUSH2 0x360 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE0 SHR AND PUSH2 0x380 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE8 SHR AND PUSH2 0x3A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xF0 SHR AND PUSH2 0x3C0 DUP4 ADD MSTORE PUSH1 0xF8 SHR PUSH2 0x3E0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP3 ADD SWAP2 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x184A JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x183D JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x187D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x75D JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x187D JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP4 ADD SLOAD AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x140 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x160 PUSH1 0xFF PUSH1 0x9 PUSH2 0x1989 PUSH2 0x1973 PUSH2 0x193E PUSH2 0x180 DUP8 ADD PUSH1 0x3 DUP10 ADD PUSH2 0x1294 JUMP JUMPDEST PUSH1 0x4 DUP9 ADD SLOAD PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0x5 DUP9 ADD SLOAD PUSH1 0xE0 DUP9 ADD MSTORE PUSH1 0x6 DUP9 ADD SLOAD PUSH2 0x100 DUP9 ADD MSTORE DUP7 DUP2 SUB PUSH1 0x3F NOT ADD PUSH2 0x120 DUP9 ADD MSTORE PUSH1 0x7 DUP9 ADD PUSH2 0x1826 JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x3F NOT ADD PUSH2 0x140 DUP8 ADD MSTORE PUSH1 0x8 DUP8 ADD PUSH2 0x1826 JUMP JUMPDEST SWAP5 ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x19A0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1995 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x1 DUP1 PUSH1 0x40 SHL SUB DUP2 AND PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 DUP3 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1BC6 JUMPI PUSH1 0x8 DUP3 ADD SWAP4 DUP5 SLOAD PUSH2 0x1B8D JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1B51 JUMPI PUSH1 0x9 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x7 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD SWAP1 DUP2 GT ISZERO PUSH2 0x1A6E JUMPI POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD DUP4 SLOAD SWAP5 SWAP6 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D80 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 PUSH2 0x1A5A SWAP4 SWAP2 SWAP3 PUSH2 0x1A49 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 AND PUSH2 0x1CE0 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x1A69 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x18D9 JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST DUP2 MLOAD SUB PUSH2 0x1B15 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x20 SWAP1 DUP7 SLOAD DUP4 DUP9 SSTORE DUP1 DUP5 LT PUSH2 0x1AF8 JUMPI JUMPDEST POP ADD SWAP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1ADB JUMPI POP POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1D80 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 SWAP4 POP PUSH2 0x1A69 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x18D9 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP9 ADD SSTORE PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1AB0 JUMP JUMPDEST PUSH2 0x1B0F SWAP1 DUP9 PUSH1 0x0 MSTORE DUP5 DUP5 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1995 JUMP JUMPDEST CODESIZE PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x15DC9BDB99C81DDA5B9B995C9CC8185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2CB7BA9030B932B713BA103A34329037BBB732B9 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x11DA5D99585DD85E481A5CC8195B991959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x11DA5D99585DD85E481A5CC81B9BDD08195B991959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1C0A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2BB937B7339039B2B73232B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x70D JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1B JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1CDB JUMPI RETURNDATASIZE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x75D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1CCF PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x119F JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x1D0B JUMPI POP PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0x1D03 PUSH2 0x1CA1 JUMP JUMPDEST POP ISZERO PUSH2 0x1B JUMPI JUMP JUMPDEST SWAP2 PUSH2 0x1D31 SWAP3 PUSH1 0x20 SWAP3 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x1C63 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x384 JUMPI PUSH2 0x1D42 JUMPI POP JUMP JUMPDEST PUSH2 0x1D5A SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x37D JUMPI PUSH2 0x370 DUP2 DUP4 PUSH2 0x119F JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0x1D6E JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID DIV 0xC2 DUP15 0xC0 CALLER DUP11 CALLER 0x21 CALLER 0xE6 BLOBHASH DUP11 0xDD 0xD8 PREVRANDAO DUP13 0x2A CALLER SWAP2 0xE5 0x26 PUSH13 0xC871DA83916C27EE191D9A9C2F PUSH22 0x2930C6B65FFE6835D58A652F85B2E0D2CE30C65872C1 MSIZE DUP15 INVALID 0xCE 0xD2 0xBD LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC3 DUP14 SMOD 0xDF PUSH2 0x6369 DUP7 0x28 DUP4 0x28 CODESIZE 0x4B SELFDESTRUCT DUP1 0xAD 0xE3 ORIGIN 0xA6 0xC9 0x2D TLOAD PUSH19 0xE8751480E0102CB264736F6C634300081C0033 ",
              "sourceMap": "160:5521:6:-:0;;;;;;;;;-1:-1:-1;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;1940:5;160:5521;1972:26;;-1:-1:-1;;;;;160:5521:6;;;;1918:44;1926:10;:19;;1918:44;:::i;:::-;160:5521;;1972:26;;:::i;160:5521::-;;;;;;-1:-1:-1;;160:5521:6;;;;;;:::i;:::-;;;;;;;;;;1808:31;160:5521;1754:44;160:5521;;;;;1776:5;160:5521;;1762:10;:19;1754:44;:::i;:::-;160:5521;;;;;;;;1808:9;160:5521;;1808:21;160:5521;;;1808:21;160:5521;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;-1:-1:-1;;;;;;160:5521:6;;;;;;;;;;;2120:31;160:5521;;2196:44;160:5521;;;;;2218:5;160:5521;;2204:10;:19;2196:44;:::i;:::-;2254:28;160:5521;;2301:10;160:5521;2332:3;160:5521;;2313:17;;;;;160:5521;;;;;;-1:-1:-1;;;;;2370:9:6;160:5521;2370:9;;:::i;:::-;160:5521;;2392:10;;;;:::i;:::-;160:5521;2370:37;;;;;:::i;:::-;;2425:94;;2332:3;160:5521;2301:10;;2425:94;-1:-1:-1;;;;;;;;;;;160:5521:6;;;;;2470:9;;;;:::i;:::-;160:5521;;2481:10;;;;:::i;:::-;160:5521;;2460:40;160:5521;;;2460:40;;;;;:::i;:::-;;;;2425:94;;2250:513;2584:10;;160:5521;2615:3;160:5521;;2596:17;;;;;2637:38;;160:5521;-1:-1:-1;;;;;2653:9:6;160:5521;2653:9;;:::i;:::-;160:5521;;2664:10;;;;:::i;:::-;160:5521;;;-1:-1:-1;;;2637:38:6;;160:5521;;;;;;;2637:38;;;:::i;:::-;;;160:5521;2637:38;;;;;;;;160:5521;2637:38;;;2615:3;160:5521;-1:-1:-1;;;;;;;;;;;160:5521:6;;;;;2708:9;;;;:::i;:::-;160:5521;;2719:10;;;;:::i;:::-;160:5521;;2698:40;160:5521;;;2698:40;;;;;:::i;:::-;;;;160:5521;2584:10;;2637:38;;;160:5521;2637:38;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;160:5521;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2466:103:5;;;:::i;:::-;160:5521:6;;;;;-1:-1:-1;;;2987:30:6;;160:5521;2987:30;;160:5521;;;;2531:1:5;;160:5521:6;;;;;;;-1:-1:-1;;;;;160:5521:6;2987:30;;;;;;;160:5521;2987:30;;;160:5521;-1:-1:-1;3030:28:6;160:5521;;3083:9;;;3027:161;;3205:21;;;160:5521;;;3286:22;;;160:5521;;3353:49;3361:10;:24;;3353:49;:::i;:::-;3420:16;160:5521;;3479:10;;160:5521;;3563:27;3524:29;3600;3538:15;;3524:29;;:::i;:::-;3538:15;;3563:27;;:::i;:::-;3538:15;;3600:29;;:::i;:::-;160:5521;;;;;;;:::i;:::-;3361:10;160:5521;;;3688:234;;;160:5521;;;;3688:234;;;160:5521;;;;3688:234;;;160:5521;;;;3688:234;;160:5521;;;;3688:234;;160:5521;;;;3688:234;;160:5521;;;;3688:234;;160:5521;;;3688:234;;;160:5521;;;;3688:234;;;160:5521;;;;;-1:-1:-1;;;;;160:5521:6;;;-1:-1:-1;160:5521:6;;;3672:9;160:5521;;;;;;;;;;;;-1:-1:-1;;;;;;160:5521:6;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3688:234;;;160:5521;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;3027:161;160:5521;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;-1:-1:-1;;160:5521:6;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;;;-1:-1:-1;160:5521:6;-1:-1:-1;;;;;;160:5521:6;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;-1:-1:-1;;;;;;160:5521:6;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3672:9;160:5521;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;3027:161;160:5521;;;;;;;;;3123:54;;3143:10;160:5521;3123:54;;160:5521;3163:4;160:5521;;;;;;;;;3123:54;160:5521;3123:54;160:5521;3123:54;;;;;;;;;3027:161;;;;3123:54;;;160:5521;3123:54;160:5521;3123:54;;;;;;;:::i;:::-;;;;;2987:30;;;;160:5521;2987:30;;160:5521;2987:30;;;;;;160:5521;2987:30;;;:::i;:::-;;;160:5521;;;;;2987:30;;;;;;;-1:-1:-1;2987:30:6;;160:5521;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;:::i;:::-;2466:103:5;;:::i;:::-;-1:-1:-1;;;;;160:5521:6;;;;;4055:9;160:5521;;;;;4195:8;;4079:49;4087:10;:24;;4079:49;:::i;:::-;160:5521;;4138:47;;-1:-1:-1;;;;;160:5521:6;4087:10;4146:22;4138:47;:::i;:::-;4195:8;:18;160:5521;;;;4195:18;:::i;:::-;160:5521;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;5145:9;160:5521;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5145:9;160:5521;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;525:28;160:5521;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;-1:-1:-1;;;;;160:5521:6;;:::i;:::-;;;;;4300:9;160:5521;;;;;;4332:9;;;160:5521;;;;;4378:49;4386:10;:24;;4378:49;:::i;:::-;160:5521;;;;;;;;;;;;;4386:10;160:5521;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;4525:12;;160:5521;4540:15;-1:-1:-1;4525:62:6;;;160:5521;;;;4624:8;;:34;4386:10;4624:34;;:::i;:::-;160:5521;;;;;;;;;;;;;;4386:10;160:5521;;;;;;;;;;-1:-1:-1;;;;;;160:5521:6;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;4525:62;4540:15;;4559:10;;;160:5521;4559:28;4525:62;;160:5521;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;160:5521:6;;;;-1:-1:-1;;;;;160:5521:6;;:::i;:::-;;;;5650:9;160:5521;;;;5650:22;160:5521;;;5650:22;160:5521;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;-1:-1:-1;160:5521:6;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;:::i;:::-;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;5283:12;;5280:76;;160:5521;-1:-1:-1;;;;;160:5521:6;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;160:5521:6;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;;;160:5521:6;;;;;;;;;;;;;;;5444:3;-1:-1:-1;;;;;160:5521:6;;5434:9;;;;;;160:5521;5511:13;160:5521;;;5485:9;160:5521;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5485:9;160:5521;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;5511:13;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;160:5521:6;;-1:-1:-1;;;;;160:5521:6;5408:24;;5434:9;;160:5521;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;5280:76;-1:-1:-1;;160:5521:6;;;;-1:-1:-1;;;;;160:5521:6;5280:76;;160:5521;;;;-1:-1:-1;;;;;160:5521:6;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;160:5521:6;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;:::o;:::-;;;;;-1:-1:-1;;160:5521:6;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;160:5521:6;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::oo;:::-;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;-1:-1:-1;160:5521:6;;;;;;;;;-1:-1:-1;;;;;;160:5521:6;-1:-1:-1;;;;;160:5521:6;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;160:5521:6;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;960:721;;;;160:5521;;;;;;;-1:-1:-1;160:5521:6;1061:9;160:5521;;;-1:-1:-1;160:5521:6;1093:10;;;;160:5521;1106:15;-1:-1:-1;160:5521:6;;;1165:10;;;160:5521;;;;;1241:5;160:5521;-1:-1:-1;;;;;160:5521:6;1227:10;:19;160:5521;;1281:9;;;160:5521;;-1:-1:-1;;160:5521:6;;;1312:8;;;160:5521;1061:9;1330:12;;160:5521;;1312:37;-1:-1:-1;1312:37:6;;;-1:-1:-1;;160:5521:6;1369:8;;160:5521;1241:5;1378:8;;160:5521;;;;;-1:-1:-1;;;;;;;;;;;1454:21:6;1410:25;;160:5521;;1387:8;;-1:-1:-1;;;;;160:5521:6;;;;;1387:8;:::i;:::-;160:5521;;-1:-1:-1;;;;;160:5521:6;;1410:25;:::i;:::-;1454:21;160:5521;;1454:21;;;;;:::i;:::-;;;;1489:7::o;1309:299::-;160:5521;;1532:40;160:5521;;;;;-1:-1:-1;;;;;160:5521:6;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;1309:299;160:5521;;;-1:-1:-1;160:5521:6;;-1:-1:-1;160:5521:6;;-1:-1:-1;160:5521:6;;;;;;;;;-1:-1:-1;;;;;;;;;;;160:5521:6;;;1653:21;160:5521;;1653:21;;;;;:::i;160:5521::-;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;-1:-1:-1;160:5521:6;;;-1:-1:-1;160:5521:6;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;-1:-1:-1;;;160:5521:6;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;160:5521:6;;;;;;;;;;;-1:-1:-1;;160:5521:6;;;;;:::i;:::-;;;;-1:-1:-1;160:5521:6;;;;:::o;:::-;;;:::o;4746:284::-;;;;-1:-1:-1;;;;;160:5521:6;4823:28;160:5521;;4882:28;4848:1;4882:28;;;;;;;;;:::i;:::-;;160:5521;;;4746:284::o;4820:196::-;160:5521;4976:29;160:5521;4976:29;160:5521;4848:1;160:5521;;;;;;;;;;;4976:29;;;;;;:::i;:::-;;;;;;;;;;;4820:196;4746:284::o;4976:29::-;;;;;;;;;;;;;:::i;:::-;;4746:284::o;2575:307:5:-;1899:1;2702:7;160:5521:6;2702:18:5;2698:86;;1899:1;2702:7;160:5521:6;2575:307:5:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30"
            },
            "methodIdentifiers": {
              "addPrize(uint64,uint256)": "ce1911ee",
              "changeActive(uint64,bool)": "f2849144",
              "createGiveaway(uint256,address,uint8[],uint256,uint256,uint256)": "d9b75a8c",
              "endGiveaway(uint64,address[])": "5352937f",
              "getGiveaway(uint64)": "c3f12761",
              "getGiveaways(uint64,uint64)": "1dae1c8c",
              "getWinners(uint64)": "2d949136",
              "owner()": "8da5cb5b",
              "participate(uint64)": "8d212a89",
              "sendPrize(address[],uint256[],address)": "e399cbfd",
              "withdraw(address,uint256)": "f3fef3a3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPayment\",\"name\":\"_payment\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"id\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"},{\"internalType\":\"uint8[]\",\"name\":\"prizeType\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeTime\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct Giveaways.Giveaway\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"endGiveaways\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"sendMoney\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_prize\",\"type\":\"uint256\"}],\"name\":\"addPrize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"_active\",\"type\":\"bool\"}],\"name\":\"changeActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_prize\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint8[]\",\"name\":\"_prizeType\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prizeTime\",\"type\":\"uint256\"}],\"name\":\"createGiveaway\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"},{\"internalType\":\"address[]\",\"name\":\"_winners\",\"type\":\"address[]\"}],\"name\":\"endGiveaway\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"getGiveaway\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"},{\"internalType\":\"uint8[]\",\"name\":\"prizeType\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeTime\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct Giveaways.Giveaway\",\"name\":\"_gw\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_page\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"getGiveaways\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"},{\"internalType\":\"uint8[]\",\"name\":\"prizeType\",\"type\":\"uint8[]\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizeTime\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"winners\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct Giveaways.Giveaway[]\",\"name\":\"_gw\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"getWinners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_winners\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_id\",\"type\":\"uint64\"}],\"name\":\"participate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"sendPrize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Giveaways.sol\":\"Giveaways\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/Giveaways.sol\":{\"keccak256\":\"0xd92a377a09ee70367815ec73c6fb18813fee91f14bc17d566436c93774eb52e6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c7f8fe9914e32a0d3699e4e06397d82dfa739c4735867f46ca141a6eb6e867f\",\"dweb:/ipfs/QmT8e31Fb6gthNcgjsHYZqgQtV9ynB6fRU7Wy9VPSbdpaJ\"]},\"contracts/interfaces/iPayment.sol\":{\"keccak256\":\"0x1c311edd23485208fbc1bcdc90023dd90cdcd0edbabeb53690f946ad0cb0eb77\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://31284277af4f1c97a8d3b00bce26761cc340869bc38123ff756b4ca6cecb67bd\",\"dweb:/ipfs/QmYhtNc24bYwKGCYj1RCv5ey9ttEtS1VJt4Zzx5Cqv1vsX\"]}},\"version\":1}"
        }
      },
      "contracts/Payment.sol": {
        "Payments": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "amount",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "newAiToken",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "newDonation",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "seller",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint16",
                  "name": "itemId",
                  "type": "uint16"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "newItem",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "month",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "newPremium",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "subscribeTo",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "month",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint8",
                  "name": "level",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "contract IERC20",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "name": "newSubToUser",
              "type": "event"
            },
            {
              "stateMutability": "nonpayable",
              "type": "fallback"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "_amount",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "buyAiToken",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_seller",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "_itemId",
                  "type": "uint16"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "buyItem",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "_month",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "buyPremium",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "_month",
                  "type": "uint8"
                },
                {
                  "internalType": "uint8",
                  "name": "_level",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "buySubToUser",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_owner",
                  "type": "address"
                }
              ],
              "name": "chagneOwner",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint16",
                  "name": "_fee",
                  "type": "uint16"
                }
              ],
              "name": "changeFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "_id",
                  "type": "uint16"
                },
                {
                  "internalType": "uint256",
                  "name": "_price",
                  "type": "uint256"
                }
              ],
              "name": "changeItemPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                },
                {
                  "internalType": "uint16",
                  "name": "_fee",
                  "type": "uint16"
                }
              ],
              "name": "changePersonalFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_premiumPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_aiPrice",
                  "type": "uint256"
                }
              ],
              "name": "changeTokenPrices",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "_level",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_price",
                  "type": "uint256"
                }
              ],
              "name": "changeUserSubPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "donation",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "getTokenPrices",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_premiumPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_aiPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_user",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "_level",
                  "type": "uint8"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "getUserLevelPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_subLevelPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "personalFee",
              "outputs": [
                {
                  "internalType": "uint16",
                  "name": "",
                  "type": "uint16"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x3C JUMPI PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT AND CALLER PUSH1 0x10 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND OR SWAP1 SSTORE PUSH2 0xFA7 SWAP1 DUP2 PUSH2 0x42 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x22 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x20 JUMPI CALLVALUE PUSH2 0x1B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10AA9D34 EQ PUSH2 0xBBD JUMPI DUP1 PUSH4 0x1C61ED92 EQ PUSH2 0xAC6 JUMPI DUP1 PUSH4 0x31829FF1 EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0x3407FACD EQ PUSH2 0x867 JUMPI DUP1 PUSH4 0x392F0403 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0x402AF311 EQ PUSH2 0x797 JUMPI DUP1 PUSH4 0x4B5AD09E EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x6D558BB2 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x7849E367 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x87311B9A EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xAB17F1EB EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xCC6533DD EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xDED97A9D EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xF0AECBC8 EQ PUSH2 0x1B4 JUMPI PUSH4 0xF3FEF3A3 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xF0 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x112 CALLER DUP4 EQ PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH2 0x14D JUMPI POP POP PUSH1 0x2 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x10 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x145 PUSH2 0xE7E JUMP JUMPDEST POP ISZERO PUSH2 0x1B JUMPI STOP JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 SWAP4 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH2 0x180 JUMPI STOP JUMPDEST PUSH2 0x20 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A1 JUMPI JUMPDEST PUSH2 0x199 DUP2 DUP4 PUSH2 0xE2D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE66 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x1CD PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x1E5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD PUSH1 0x10 SHR AND CALLER EQ PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x24 CALLDATALOAD SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE STOP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x340 PUSH2 0x229 PUSH2 0xC3D JUMP JUMPDEST PUSH32 0xB349E4993CEF149E70B6E1C4B249CBF8571C7DF1605D213AD5152C245E9E24DC PUSH2 0x252 PUSH2 0xC69 JUMP JUMPDEST PUSH2 0x25A PUSH2 0xC53 JUMP JUMPDEST SWAP3 PUSH2 0x263 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x338 PUSH1 0xFF DUP4 AND PUSH1 0x1 DUP2 EQ DUP1 ISZERO PUSH2 0x379 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x36F JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x365 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x35B JUMPI JUMPDEST PUSH2 0x293 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x2D8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x2B9 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x2C4 CALLER ISZERO ISZERO PUSH2 0xD93 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCE JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x34A JUMPI JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2FA SWAP1 PUSH1 0x10 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 DUP10 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP7 AND PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE SWAP3 DUP2 SWAP1 PUSH1 0xA0 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x356 DUP2 CALLVALUE LT ISZERO PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST POP PUSH1 0xC DUP2 EQ PUSH2 0x28A JUMP JUMPDEST POP PUSH1 0x9 DUP2 EQ PUSH2 0x283 JUMP JUMPDEST POP PUSH1 0x6 DUP2 EQ PUSH2 0x27C JUMP JUMPDEST POP PUSH1 0x3 DUP2 EQ PUSH2 0x275 JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3A4 PUSH2 0xC3D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3E4 PUSH2 0xC3D JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x340 PUSH2 0x451 PUSH2 0xC3D JUMP JUMPDEST PUSH32 0x1AA13D83D0941F18B84EC5BD2489673B21A33087534EA39F9C2F69D8FFEBF265 PUSH2 0x47A PUSH2 0xC69 JUMP JUMPDEST PUSH2 0x482 PUSH2 0xC53 JUMP JUMPDEST SWAP3 PUSH2 0x48B PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x338 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x4B0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x4BB CALLER ISZERO ISZERO PUSH2 0xD93 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x2D8 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF DUP7 AND SWAP1 PUSH2 0xDCE JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x4F0 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x51C SWAP1 ISZERO ISZERO PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x56C PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x574 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x1B JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 DUP6 SUB PUSH2 0x1B JUMPI PUSH2 0x5A2 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x734 JUMPI JUMPDEST PUSH2 0x5F4 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x715 JUMPI PUSH2 0x3E8 PUSH2 0x625 PUSH2 0xFFFF DUP1 PUSH1 0x2 SLOAD AND JUMPDEST AND DUP10 PUSH2 0xDCE JUMP JUMPDEST DIV SWAP2 DUP5 ISZERO PUSH2 0x6BB JUMPI JUMPDEST SWAP3 PUSH2 0x689 PUSH1 0xC0 SWAP6 SWAP4 PUSH2 0x340 SWAP10 SWAP4 PUSH2 0x672 PUSH32 0xF75BFE060373B450661E4E6EB654AAD71847DF6D54C2E9818B7AB96462EE101E SWAP10 SWAP8 CALLER PUSH2 0x66C DUP6 DUP10 PUSH2 0xE20 JUMP JUMPDEST DUP5 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x10 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 CALLER SWAP2 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE DUP4 PUSH1 0xA0 DUP3 ADD MSTORE LOG1 PUSH2 0xCE3 JUMP JUMPDEST SWAP7 SWAP1 SWAP4 SWAP2 SWAP5 SWAP3 DUP2 CALLVALUE LT PUSH2 0x6D3 JUMPI SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP7 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x4E6F7420656E6F7567682065746820746F20627579206974656D PUSH1 0x30 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x3E8 PUSH2 0x625 PUSH2 0xFFFF DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x61E JUMP JUMPDEST POP DUP7 ISZERO ISZERO PUSH2 0x5EB JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x756 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x772 CALLER PUSH1 0x10 DUP5 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD93 JUMP JUMPDEST PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND OR PUSH1 0x2 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x7B0 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x7B8 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH2 0x7D1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD PUSH1 0x10 SHR AND CALLER EQ PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH2 0xFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x813 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x81B PUSH2 0xC69 JUMP JUMPDEST PUSH2 0x823 PUSH2 0xC53 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1B JUMPI PUSH1 0x2 SLOAD PUSH2 0x8A2 CALLER PUSH1 0x10 DUP4 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xFFFF NOT AND OR PUSH1 0x2 SSTORE STOP JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x8C1 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1B JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1B JUMPI PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP7 SUB PUSH2 0x1B JUMPI PUSH2 0x340 SWAP6 PUSH32 0x1B011D73E7DF1D8680C86A339410375BB01AE38E38411FC30C0912D61E2A4AA8 SWAP5 PUSH1 0xE0 SWAP5 PUSH2 0x92C PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 ISZERO PUSH2 0xABC JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xAB2 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xAA8 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xA9E JUMPI JUMPDEST PUSH2 0x955 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0xA1D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP9 DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0xA87 JUMPI JUMPDEST PUSH2 0x99A SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x9A5 CALLER ISZERO ISZERO PUSH2 0xD93 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x9D5 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCE JUMP JUMPDEST SWAP5 CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xA65 JUMPI PUSH2 0x672 PUSH2 0x3E8 PUSH2 0xA09 PUSH2 0xFFFF DUP1 PUSH1 0x2 SLOAD AND AND DUP10 PUSH2 0xDCE JUMP JUMPDEST DIV SWAP3 DUP9 ISZERO PUSH2 0xA54 JUMPI JUMPDEST CALLER PUSH2 0x66C DUP6 DUP11 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE LOG1 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0xA60 DUP9 CALLVALUE LT ISZERO PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x672 PUSH2 0x3E8 PUSH2 0xA09 PUSH2 0xFFFF DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x991 JUMP JUMPDEST POP PUSH1 0xC DUP2 EQ PUSH2 0x94C JUMP JUMPDEST POP PUSH1 0x9 DUP2 EQ PUSH2 0x945 JUMP JUMPDEST POP PUSH1 0x6 DUP2 EQ PUSH2 0x93E JUMP JUMPDEST POP PUSH1 0x3 DUP2 EQ PUSH2 0x937 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xADA PUSH2 0xC3D JUMP JUMPDEST PUSH2 0xAE2 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xAEB PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP2 SWAP1 ISZERO PUSH2 0xB81 JUMPI PUSH2 0x340 SWAP4 DUP2 ISZERO PUSH2 0xB79 JUMPI JUMPDEST SWAP2 PUSH1 0xA0 SWAP2 PUSH2 0xB4C DUP3 PUSH32 0x5A2F1AD79D3B13290E448AD9BE056A7E0663F2109E69B98665AA82CC884CB73B SWAP6 DUP8 CALLER SWAP2 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP3 CALLER DUP5 MSTORE PUSH1 0x1 DUP1 DUP7 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE LOG1 PUSH2 0xCE3 JUMP JUMPDEST CALLVALUE SWAP4 POP PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x31B0B713BA103AB9B2903A3434B9903A37B5B2B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xBD6 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0xBDE PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC02 SWAP1 ISZERO ISZERO PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xFFFF DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST ISZERO PUSH2 0xCA7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B713BA103AB9B2903A3434B9903A37B5B2B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xCF2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0xD0F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x86D0DEDEE6CA40C6DEE4E4CAC6E840DADEDCE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xD52 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x21B0B713BA103830BC903BB4BA34103A3434B9903A37B5B2B7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xD9A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2BB937B7339039B2B73232B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xCF2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0xDE8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x15DC9BDB99C8195D1A08185B5BDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xCF2 JUMPI JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xE50 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1B JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xEAC PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xE2D JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xECE JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xF0C JUMPI POP POP PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0xF04 PUSH2 0xE7E JUMP JUMPDEST POP ISZERO PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH2 0xF56 JUMPI POP JUMP JUMPDEST PUSH2 0xF6E SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A1 JUMPI PUSH2 0x199 DUP2 DUP4 PUSH2 0xE2D JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP1 0xAB TIMESTAMP 0xCA PUSH10 0xDC01686DC29C08BB4CED 0x4D SWAP3 0xE2 SHL ISZERO PC SWAP5 SWAP5 MSTORE DUP13 KECCAK256 0x2C 0xBC RETURN SELFBALANCE ADD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "185:6554:7:-:0;;;;;;;1857:1:5;2061:21;1857:1;1142:27:7;185:6554;;-1:-1:-1;;;;;;185:6554:7;1158:10;185:6554;;-1:-1:-1;;;;;185:6554:7;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3193,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 3686,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_contract_IERC20": {
                  "entryPoint": 3155,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_t_contract_IERC20": {
                  "entryPoint": 3133,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_uint16": {
                  "entryPoint": 3215,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_uint8": {
                  "entryPoint": 3177,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_address_uint8_uint256_contract_IERC20_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 3534,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 3616,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_returndata": {
                  "entryPoint": 3710,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 3629,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_nonReentrantBefore": {
                  "entryPoint": 3773,
                  "id": 834,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_send": {
                  "entryPoint": 3807,
                  "id": 2485,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "increment_uint256": {
                  "entryPoint": 3299,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper_stringliteral": {
                  "entryPoint": 3553,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_55f0": {
                  "entryPoint": 3403,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_9c9b": {
                  "entryPoint": 3336,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_a1c5": {
                  "entryPoint": 3475,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_f9c3": {
                  "entryPoint": 3232,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "60806040526004361015610022575b3615610020573461001b57005b600080fd5b005b60003560e01c806310aa9d3414610bbd5780631c61ed9214610ac657806331829ff1146108ad5780633407facd14610867578063392f0403146107fa578063402af311146107975780634b5ad09e1461073d5780636d558bb2146105585780637849e367146104d757806387311b9a1461043a5780638da5cb5b1461040d578063ab17f1eb146103c1578063cc6533dd14610383578063ded97a9d14610212578063f0aecbc8146101b45763f3fef3a30361000e573461001b57604036600319011261001b576100f0610c3d565b6002546024359160109190911c6001600160a01b031690610112338314610d93565b6001600160a01b0316908161014d57505060025460009182918291829160101c6001600160a01b03165af1610145610e7e565b501561001b57005b916044602092936000604051958694859363a9059cbb60e01b8552600485015260248401525af180156101a85761018057005b6100209060203d6020116101a1575b6101998183610e2d565b810190610e66565b503d61018f565b6040513d6000823e3d90fd5b3461001b57606036600319011261001b576101cd610c3d565b6101e560018060a01b0360025460101c163314610d93565b6001600160a01b031660009081526004602090815260408083206024359055600390915290206044359055005b606036600319011261001b57610340610229610c3d565b7fb349e4993cef149e70b6e1c4b249cbf8571c7df1605d213ad5152c245e9e24dc610252610c69565b61025a610c53565b92610263610ebd565b61033860ff8316600181148015610379575b801561036f575b8015610365575b801561035b575b61029390610d08565b6102d860018060a01b038716918260005260046020526102b96040600020541515610d4b565b6102c4331515610d93565b826000526004602052604060002054610dce565b901561034a575b6002546102fa9060101c6001600160a01b0316338389610edf565b600154604080516001600160a01b03958616815260ff90961660208701528501919091529190941660608301526080820181905292819060a0820190565b0390a1610ce3565b6001908155600055005b61035681341015610de1565b6102df565b50600c811461028a565b5060098114610283565b506006811461027c565b5060038114610275565b3461001b57602036600319011261001b576001600160a01b036103a4610c3d565b166000526005602052602061ffff60406000205416604051908152f35b3461001b57602036600319011261001b5760406001600160a01b036103e4610c3d565b168060005260046020528160002054906000526003602052816000205482519182526020820152f35b3461001b57600036600319011261001b5760025460405160109190911c6001600160a01b03168152602090f35b606036600319011261001b57610340610451610c3d565b7f1aa13d83d0941f18b84ec5bd2489673b21a33087534ea39f9c2f69d8ffebf26561047a610c69565b610482610c53565b9261048b610ebd565b61033860018060a01b0385168060005260036020526104b06040600020541515610d4b565b6104bb331515610d93565b8060005260036020526102d860406000205460ff861690610dce565b3461001b57606036600319011261001b576104f0610c3d565b6104f8610c8f565b6001600160a01b03821660009081526004602052604090205461051c901515610ca0565b33600052600660205261ffff6040600020911660005260205260406000209060018060a01b031660005260205260406000206044359055600080f35b608036600319011261001b5761056c610c3d565b610574610c79565b6044359161ffff831680930361001b57606435926001600160a01b0384169081850361001b576105a2610ebd565b60018060a01b0384169384600052600660205260406000208260005260205260406000208360005260205260406000205495836000526004602052604060002054151580610734575b6105f490610ca0565b33600052600560205261ffff6040600020541615600014610715576103e861062561ffff80600254165b1689610dce565b049184156106bb575b9261068960c0959361034099936106727ff75bfe060373b450661e4e6eb654aad71847df6d54c2e9818b7ab96462ee101e99973361066c8589610e20565b84610edf565b60025460101c6001600160a01b0316913391610edf565b600154966040519460018060a01b0316855260208501526040840152606083015260808201528360a0820152a1610ce3565b9690939194928134106106d35792949193909661062e565b60405162461bcd60e51b815260206004820152601a6024820152794e6f7420656e6f7567682065746820746f20627579206974656d60301b6044820152606490fd5b3360005260056020526103e861062561ffff806040600020541661061e565b508615156105eb565b3461001b57602036600319011261001b57610756610c3d565b6002549061077233601084901c6001600160a01b031614610d93565b62010000600160b01b031990911660109190911b62010000600160b01b031617600255005b3461001b57604036600319011261001b576107b0610c3d565b6107b8610c8f565b906107d160018060a01b0360025460101c163314610d93565b60018060a01b0316600052600560205261ffff6040600020911661ffff19825416179055600080f35b3461001b57606036600319011261001b57610813610c3d565b61081b610c69565b610823610c53565b9160018060a01b0316600052600760205260ff6040600020911660005260205260406000209060018060a01b03166000526020526020604060002054604051908152f35b3461001b57602036600319011261001b5760043561ffff811680910361001b576002546108a233601083901c6001600160a01b031614610d93565b61ffff191617600255005b60a036600319011261001b576108c1610c3d565b6108c9610c79565b60443560ff811680910361001b576064359060ff821680920361001b57608435936001600160a01b03851680860361001b57610340957f1b011d73e7df1d8680c86a339410375bb01ae38e38411fc30c0912d61e2a4aa89460e09461092c610ebd565b600181148015610abc575b8015610ab2575b8015610aa8575b8015610a9e575b61095590610d08565b610a1d60018060a01b03891698896000526007602052604060002084600052602052604060002086600052602052604060002054151580610a87575b61099a90610d4b565b6109a5331515610d93565b8960005260076020526040600020846000526020526040600020866000526020526109d583604060002054610dce565b9433600052600560205261ffff6040600020541615600014610a65576106726103e8610a0961ffff80600254161689610dce565b04928815610a54575b3361066c858a610e20565b600154976040519560018060a01b03168652602086015260408501526060840152608083015260a08201528360c0820152a1610ce3565b610a6088341015610de1565b610a12565b3360005260056020526106726103e8610a0961ffff806040600020541661061e565b506000868152600460205260409020541515610991565b50600c811461094c565b5060098114610945565b506006811461093e565b5060038114610937565b606036600319011261001b57610ada610c3d565b610ae2610c53565b90610aeb610ebd565b6001600160a01b03821660008181526004602052604090205460243592919015610b8157610340938115610b79575b9160a091610b4c827f5a2f1ad79d3b13290e448ad9be056a7e0663f2109e69b98665aa82cc884cb73b95873391610edf565b6001549460405192338452600180861b0316602084015260408301526060820152836080820152a1610ce3565b349350610b1a565b60405162461bcd60e51b815260206004820152601460248201527331b0b713ba103ab9b2903a3434b9903a37b5b2b760611b6044820152606490fd5b3461001b57606036600319011261001b57610bd6610c3d565b610bde610c69565b6001600160a01b038216600090815260046020526040902054610c02901515610ca0565b33600052600760205260ff6040600020911660005260205260406000209060018060a01b031660005260205260406000206044359055600080f35b600435906001600160a01b038216820361001b57565b604435906001600160a01b038216820361001b57565b6024359060ff8216820361001b57565b602435906001600160a01b038216820361001b57565b6024359061ffff8216820361001b57565b15610ca757565b60405162461bcd60e51b815260206004820152601460248201527321b0b713ba103ab9b2903a3434b9903a37b5b2b760611b6044820152606490fd5b6000198114610cf25760010190565b634e487b7160e01b600052601160045260246000fd5b15610d0f57565b60405162461bcd60e51b8152602060048201526014602482015273086d0dedee6ca40c6dee4e4cac6e840dadedce8d60631b6044820152606490fd5b15610d5257565b60405162461bcd60e51b815260206004820152601960248201527821b0b713ba103830bc903bb4ba34103a3434b9903a37b5b2b760391b6044820152606490fd5b15610d9a57565b60405162461bcd60e51b815260206004820152600c60248201526b2bb937b7339039b2b73232b960a11b6044820152606490fd5b81810292918115918404141715610cf257565b15610de857565b60405162461bcd60e51b815260206004820152601060248201526f15dc9bdb99c8195d1a08185b5bdd5b9d60821b6044820152606490fd5b91908203918211610cf257565b601f909101601f19168101906001600160401b03821190821017610e5057604052565b634e487b7160e01b600052604160045260246000fd5b9081602091031261001b5751801515810361001b5790565b3d15610eb8573d906001600160401b038211610e505760405191610eac601f8201601f191660200184610e2d565b82523d6000602084013e565b606090565b600260005414610ece576002600055565b633ee5aeb560e01b60005260046000fd5b909291906001600160a01b031680610f0c575050600080809381935af1610f04610e7e565b501561001b57565b6040516323b872dd60e01b81526001600160a01b0392831660048201529190921660248201526044810192909252602090829060649082906000905af180156101a857610f565750565b610f6e9060203d6020116101a1576101998183610e2d565b5056fea26469706673582212209690ab42ca69dc01686dc29c08bb4ced4d92e21b15589494528c202cbcf3470164736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x22 JUMPI JUMPDEST CALLDATASIZE ISZERO PUSH2 0x20 JUMPI CALLVALUE PUSH2 0x1B JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x10AA9D34 EQ PUSH2 0xBBD JUMPI DUP1 PUSH4 0x1C61ED92 EQ PUSH2 0xAC6 JUMPI DUP1 PUSH4 0x31829FF1 EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0x3407FACD EQ PUSH2 0x867 JUMPI DUP1 PUSH4 0x392F0403 EQ PUSH2 0x7FA JUMPI DUP1 PUSH4 0x402AF311 EQ PUSH2 0x797 JUMPI DUP1 PUSH4 0x4B5AD09E EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x6D558BB2 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0x7849E367 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x87311B9A EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0xAB17F1EB EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0xCC6533DD EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0xDED97A9D EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0xF0AECBC8 EQ PUSH2 0x1B4 JUMPI PUSH4 0xF3FEF3A3 SUB PUSH2 0xE JUMPI CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xF0 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH2 0x112 CALLER DUP4 EQ PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH2 0x14D JUMPI POP POP PUSH1 0x2 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 PUSH1 0x10 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL PUSH2 0x145 PUSH2 0xE7E JUMP JUMPDEST POP ISZERO PUSH2 0x1B JUMPI STOP JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x20 SWAP3 SWAP4 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH2 0x180 JUMPI STOP JUMPDEST PUSH2 0x20 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A1 JUMPI JUMPDEST PUSH2 0x199 DUP2 DUP4 PUSH2 0xE2D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xE66 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x1CD PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x1E5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD PUSH1 0x10 SHR AND CALLER EQ PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x24 CALLDATALOAD SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE STOP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x340 PUSH2 0x229 PUSH2 0xC3D JUMP JUMPDEST PUSH32 0xB349E4993CEF149E70B6E1C4B249CBF8571C7DF1605D213AD5152C245E9E24DC PUSH2 0x252 PUSH2 0xC69 JUMP JUMPDEST PUSH2 0x25A PUSH2 0xC53 JUMP JUMPDEST SWAP3 PUSH2 0x263 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x338 PUSH1 0xFF DUP4 AND PUSH1 0x1 DUP2 EQ DUP1 ISZERO PUSH2 0x379 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x36F JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x365 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x35B JUMPI JUMPDEST PUSH2 0x293 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x2D8 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x2B9 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x2C4 CALLER ISZERO ISZERO PUSH2 0xD93 JUMP JUMPDEST DUP3 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCE JUMP JUMPDEST SWAP1 ISZERO PUSH2 0x34A JUMPI JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2FA SWAP1 PUSH1 0x10 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 DUP10 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP7 AND PUSH1 0x20 DUP8 ADD MSTORE DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE SWAP3 DUP2 SWAP1 PUSH1 0xA0 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x0 SSTORE STOP JUMPDEST PUSH2 0x356 DUP2 CALLVALUE LT ISZERO PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0x2DF JUMP JUMPDEST POP PUSH1 0xC DUP2 EQ PUSH2 0x28A JUMP JUMPDEST POP PUSH1 0x9 DUP2 EQ PUSH2 0x283 JUMP JUMPDEST POP PUSH1 0x6 DUP2 EQ PUSH2 0x27C JUMP JUMPDEST POP PUSH1 0x3 DUP2 EQ PUSH2 0x275 JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3A4 PUSH2 0xC3D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3E4 PUSH2 0xC3D JUMP JUMPDEST AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 SLOAD SWAP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x340 PUSH2 0x451 PUSH2 0xC3D JUMP JUMPDEST PUSH32 0x1AA13D83D0941F18B84EC5BD2489673B21A33087534EA39F9C2F69D8FFEBF265 PUSH2 0x47A PUSH2 0xC69 JUMP JUMPDEST PUSH2 0x482 PUSH2 0xC53 JUMP JUMPDEST SWAP3 PUSH2 0x48B PUSH2 0xEBD JUMP JUMPDEST PUSH2 0x338 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x4B0 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x4BB CALLER ISZERO ISZERO PUSH2 0xD93 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0x2D8 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0xFF DUP7 AND SWAP1 PUSH2 0xDCE JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x4F0 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x51C SWAP1 ISZERO ISZERO PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x56C PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x574 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xFFFF DUP4 AND DUP1 SWAP4 SUB PUSH2 0x1B JUMPI PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 DUP6 SUB PUSH2 0x1B JUMPI PUSH2 0x5A2 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP4 DUP5 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP6 DUP4 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0x734 JUMPI JUMPDEST PUSH2 0x5F4 SWAP1 PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0x715 JUMPI PUSH2 0x3E8 PUSH2 0x625 PUSH2 0xFFFF DUP1 PUSH1 0x2 SLOAD AND JUMPDEST AND DUP10 PUSH2 0xDCE JUMP JUMPDEST DIV SWAP2 DUP5 ISZERO PUSH2 0x6BB JUMPI JUMPDEST SWAP3 PUSH2 0x689 PUSH1 0xC0 SWAP6 SWAP4 PUSH2 0x340 SWAP10 SWAP4 PUSH2 0x672 PUSH32 0xF75BFE060373B450661E4E6EB654AAD71847DF6D54C2E9818B7AB96462EE101E SWAP10 SWAP8 CALLER PUSH2 0x66C DUP6 DUP10 PUSH2 0xE20 JUMP JUMPDEST DUP5 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x10 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 CALLER SWAP2 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP7 PUSH1 0x40 MLOAD SWAP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE DUP4 PUSH1 0xA0 DUP3 ADD MSTORE LOG1 PUSH2 0xCE3 JUMP JUMPDEST SWAP7 SWAP1 SWAP4 SWAP2 SWAP5 SWAP3 DUP2 CALLVALUE LT PUSH2 0x6D3 JUMPI SWAP3 SWAP5 SWAP2 SWAP4 SWAP1 SWAP7 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH26 0x4E6F7420656E6F7567682065746820746F20627579206974656D PUSH1 0x30 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x3E8 PUSH2 0x625 PUSH2 0xFFFF DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x61E JUMP JUMPDEST POP DUP7 ISZERO ISZERO PUSH2 0x5EB JUMP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x756 PUSH2 0xC3D JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x772 CALLER PUSH1 0x10 DUP5 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD93 JUMP JUMPDEST PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x10 SWAP2 SWAP1 SWAP2 SHL PUSH3 0x10000 PUSH1 0x1 PUSH1 0xB0 SHL SUB AND OR PUSH1 0x2 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x7B0 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x7B8 PUSH2 0xC8F JUMP JUMPDEST SWAP1 PUSH2 0x7D1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD PUSH1 0x10 SHR AND CALLER EQ PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH2 0xFFFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x813 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x81B PUSH2 0xC69 JUMP JUMPDEST PUSH2 0x823 PUSH2 0xC53 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1B JUMPI PUSH1 0x2 SLOAD PUSH2 0x8A2 CALLER PUSH1 0x10 DUP4 SWAP1 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD93 JUMP JUMPDEST PUSH2 0xFFFF NOT AND OR PUSH1 0x2 SSTORE STOP JUMPDEST PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0x8C1 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0xC79 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1B JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1B JUMPI PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP7 SUB PUSH2 0x1B JUMPI PUSH2 0x340 SWAP6 PUSH32 0x1B011D73E7DF1D8680C86A339410375BB01AE38E38411FC30C0912D61E2A4AA8 SWAP5 PUSH1 0xE0 SWAP5 PUSH2 0x92C PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 DUP2 EQ DUP1 ISZERO PUSH2 0xABC JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xAB2 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xAA8 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0xA9E JUMPI JUMPDEST PUSH2 0x955 SWAP1 PUSH2 0xD08 JUMP JUMPDEST PUSH2 0xA1D PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP9 DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO ISZERO DUP1 PUSH2 0xA87 JUMPI JUMPDEST PUSH2 0x99A SWAP1 PUSH2 0xD4B JUMP JUMPDEST PUSH2 0x9A5 CALLER ISZERO ISZERO PUSH2 0xD93 JUMP JUMPDEST DUP10 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH2 0x9D5 DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xDCE JUMP JUMPDEST SWAP5 CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0xFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH1 0x0 EQ PUSH2 0xA65 JUMPI PUSH2 0x672 PUSH2 0x3E8 PUSH2 0xA09 PUSH2 0xFFFF DUP1 PUSH1 0x2 SLOAD AND AND DUP10 PUSH2 0xDCE JUMP JUMPDEST DIV SWAP3 DUP9 ISZERO PUSH2 0xA54 JUMPI JUMPDEST CALLER PUSH2 0x66C DUP6 DUP11 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE DUP4 PUSH1 0xC0 DUP3 ADD MSTORE LOG1 PUSH2 0xCE3 JUMP JUMPDEST PUSH2 0xA60 DUP9 CALLVALUE LT ISZERO PUSH2 0xDE1 JUMP JUMPDEST PUSH2 0xA12 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x672 PUSH2 0x3E8 PUSH2 0xA09 PUSH2 0xFFFF DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0x991 JUMP JUMPDEST POP PUSH1 0xC DUP2 EQ PUSH2 0x94C JUMP JUMPDEST POP PUSH1 0x9 DUP2 EQ PUSH2 0x945 JUMP JUMPDEST POP PUSH1 0x6 DUP2 EQ PUSH2 0x93E JUMP JUMPDEST POP PUSH1 0x3 DUP2 EQ PUSH2 0x937 JUMP JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xADA PUSH2 0xC3D JUMP JUMPDEST PUSH2 0xAE2 PUSH2 0xC53 JUMP JUMPDEST SWAP1 PUSH2 0xAEB PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x24 CALLDATALOAD SWAP3 SWAP2 SWAP1 ISZERO PUSH2 0xB81 JUMPI PUSH2 0x340 SWAP4 DUP2 ISZERO PUSH2 0xB79 JUMPI JUMPDEST SWAP2 PUSH1 0xA0 SWAP2 PUSH2 0xB4C DUP3 PUSH32 0x5A2F1AD79D3B13290E448AD9BE056A7E0663F2109E69B98665AA82CC884CB73B SWAP6 DUP8 CALLER SWAP2 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP3 CALLER DUP5 MSTORE PUSH1 0x1 DUP1 DUP7 SHL SUB AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP4 PUSH1 0x80 DUP3 ADD MSTORE LOG1 PUSH2 0xCE3 JUMP JUMPDEST CALLVALUE SWAP4 POP PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x31B0B713BA103AB9B2903A3434B9903A37B5B2B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B JUMPI PUSH2 0xBD6 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0xBDE PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xC02 SWAP1 ISZERO ISZERO PUSH2 0xCA0 JUMP JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xFFFF DUP3 AND DUP3 SUB PUSH2 0x1B JUMPI JUMP JUMPDEST ISZERO PUSH2 0xCA7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B0B713BA103AB9B2903A3434B9903A37B5B2B7 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xCF2 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0xD0F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x86D0DEDEE6CA40C6DEE4E4CAC6E840DADEDCE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xD52 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x21B0B713BA103830BC903BB4BA34103A3434B9903A37B5B2B7 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0xD9A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2BB937B7339039B2B73232B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xCF2 JUMPI JUMP JUMPDEST ISZERO PUSH2 0xDE8 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x15DC9BDB99C8195D1A08185B5BDD5B9D PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xCF2 JUMPI JUMP JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0xE50 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1B JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1B JUMPI SWAP1 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xEB8 JUMPI RETURNDATASIZE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0xEAC PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0xE2D JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ PUSH2 0xECE JUMPI PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0xF0C JUMPI POP POP PUSH1 0x0 DUP1 DUP1 SWAP4 DUP2 SWAP4 GAS CALL PUSH2 0xF04 PUSH2 0xE7E JUMP JUMPDEST POP ISZERO PUSH2 0x1B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x1A8 JUMPI PUSH2 0xF56 JUMPI POP JUMP JUMPDEST PUSH2 0xF6E SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1A1 JUMPI PUSH2 0x199 DUP2 DUP4 PUSH2 0xE2D JUMP JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP1 0xAB TIMESTAMP 0xCA PUSH10 0xDC01686DC29C08BB4CED 0x4D SWAP3 0xE2 SHL ISZERO PC SWAP5 SWAP5 MSTORE DUP13 KECCAK256 0x2C 0xBC RETURN SELFBALANCE ADD PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "185:6554:7:-:0;;;;;;;;;-1:-1:-1;185:6554:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;1602:5;185:6554;;;;;;;;;-1:-1:-1;;;;;185:6554:7;;1580:44;1588:10;:19;;1580:44;:::i;:::-;-1:-1:-1;;;;;185:6554:7;;1638:28;185:6554;;-1:-1:-1;;1602:5:7;185:6554;;;;;;;;;;;-1:-1:-1;;;;;185:6554:7;1698:30;;;;:::i;:::-;;185:6554;;;;1635:205;185:6554;1797:31;185:6554;;;;;;;;;;;;;;1797:31;;185:6554;1797:31;;185:6554;;;;;1797:31;;;;;;;;185:6554;1797:31;;;185:6554;1797:31;185:6554;1797:31;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;185:6554;;;;;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;1359:44;185:6554;;;;;1381:5;185:6554;;;;1367:10;:19;1359:44;:::i;:::-;-1:-1:-1;;;;;185:6554:7;;;;;;;;;;;;;;;;;;1466:12;185:6554;;;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;3487:6;185:6554;;:::i;:::-;3432:44;185:6554;;:::i;:::-;;;:::i;:::-;2466:103:5;;;:::i;:::-;3432:44:7;185:6554;;;2980:1;2970:11;;:26;;;;185:6554;2970:41;;;;185:6554;2970:56;;;;185:6554;2970:72;;;;185:6554;2962:105;;;:::i;:::-;3229:34;185:6554;;;;;;;;;;;;;;3078:67;185:6554;;;;3086:29;;3078:67;:::i;:::-;3156:49;3164:10;:24;;3156:49;:::i;:::-;185:6554;;;;;;;;;;3229:34;:::i;:::-;3277:28;;3274:93;;185:6554;3410:5;185:6554;3378:38;;185:6554;;-1:-1:-1;;;;;185:6554:7;3164:10;3378:38;;;:::i;:::-;2980:1;185:6554;;;;-1:-1:-1;;;;;185:6554:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3432:44;;;;3487:6;:::i;:::-;2980:1;185:6554;;;;;;3274:93;3320:47;3328:9;;:18;;3320:47;:::i;:::-;3274:93;;2970:72;-1:-1:-1;3040:2:7;3030:12;;2970:72;;:56;3015:11;3025:1;3015:11;;2970:56;;:41;3000:11;3010:1;3000:11;;2970:41;;:26;2985:11;2995:1;2985:11;;2970:26;;185:6554;;;;;;-1:-1:-1;;185:6554:7;;;;-1:-1:-1;;;;;185:6554:7;;:::i;:::-;;;;419:46;185:6554;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;;-1:-1:-1;;;;;185:6554:7;;:::i;:::-;;;;;;;;;;;;;;;6513:12;185:6554;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;291:28;185:6554;;;;;;;;-1:-1:-1;;;;;185:6554:7;;;;;;;;;-1:-1:-1;;185:6554:7;;;;2836:6;185:6554;;:::i;:::-;2780:45;185:6554;;:::i;:::-;;;:::i;:::-;2466:103:5;;;:::i;:::-;2780:45:7;185:6554;;;;;;;;;;2443:12;185:6554;;2435:62;185:6554;;;;2443:24;;2435:62;:::i;:::-;2508:49;2516:10;:24;;2508:49;:::i;:::-;185:6554;;;2443:12;185:6554;;2581:30;185:6554;;;;;;;2581:30;;:::i;185:6554::-;;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;185:6554:7;;;;;;;;;;;;;5851:62;;5859:29;;5851:62;:::i;:::-;5934:10;185:6554;;5924:9;185:6554;;;;;;5924:26;185:6554;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;5924:34;185:6554;;;;;;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;185:6554:7;;;;;;;;2466:103:5;;:::i;:::-;185:6554:7;;;;;;;;;;;4576:9;185:6554;;;;;;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;;;;;;;;;;;;;4630:29;;:42;;;185:6554;4622:75;;;:::i;:::-;4732:10;185:6554;;4720:11;185:6554;;;;;;;;4720:28;:60;;;;4817:4;4802:12;185:6554;;4751:3;185:6554;;4720:60;185:6554;4802:12;;:::i;:::-;185:6554;4836:28;;;4833:103;;4720:60;4732:10;5006:36;185:6554;4732:10;;5120:6;4732:10;;4987:7;5058:51;4732:10;;;4961:11;;;;:::i;:::-;4987:7;;:::i;:::-;5036:5;185:6554;;;-1:-1:-1;;;;;185:6554:7;;4732:10;;5006:36;:::i;:::-;5104:4;185:6554;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5058:51;5120:6;:::i;4833:103::-;4887:9;;;;;;;;:18;185:6554;;4833:103;;;;;;;;185:6554;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;-1:-1:-1;;;185:6554:7;;;;;;;4720:60;4732:10;185:6554;;4720:11;185:6554;;4817:4;4802:12;185:6554;;;;;;;4720:60;;4630:42;-1:-1:-1;4663:9:7;;;4630:42;;185:6554;;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;1934:5;185:6554;;1912:44;1920:10;185:6554;;;;-1:-1:-1;;;;;185:6554:7;1920:19;1912:44;:::i;:::-;-1:-1:-1;;;;;;185:6554:7;;;;;;;;-1:-1:-1;;;;;185:6554:7;;1934:5;185:6554;;;;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;;;:::i;:::-;;2218:44;185:6554;;;;;2240:5;185:6554;;;;2226:10;:19;2218:44;:::i;:::-;185:6554;;;;;;;;2273:11;185:6554;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;6692:13;185:6554;;;;;;6692:28;185:6554;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;6692:36;185:6554;;;;;;-1:-1:-1;185:6554:7;;;;;-1:-1:-1;185:6554:7;;;;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;;;;;;;;;;;2084:5;185:6554;2062:44;2070:10;185:6554;;;;-1:-1:-1;;;;;185:6554:7;2070:19;2062:44;:::i;:::-;-1:-1:-1;;185:6554:7;;2084:5;185:6554;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;185:6554:7;;;;;;;4421:6;2466:103:5;4349:61:7;2466:103:5;185:6554:7;2466:103:5;;;:::i;:::-;3662:1:7;3652:11;;:26;;;;185:6554;3652:41;;;;185:6554;3652:56;;;;185:6554;3652:72;;;;185:6554;3644:105;;;:::i;:::-;4297:36;185:6554;;;;;;;;;;;3768:13;185:6554;;;;;;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;;3768:40;;:73;;;185:6554;3760:111;;;:::i;:::-;3882:49;3890:10;:24;;3882:49;:::i;:::-;185:6554;;;3768:13;185:6554;;;;;;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;;-1:-1:-1;185:6554:7;;;3955:45;185:6554;;-1:-1:-1;185:6554:7;;3955:45;:::i;:::-;3890:10;;185:6554;;4023:11;185:6554;;;;;;;;4023:28;:60;;;;4280:5;4120:4;4105:12;185:6554;;4054:3;185:6554;;;4105:12;;:::i;:::-;185:6554;4139:28;;;4136:93;;4023:60;3890:10;4254:11;;;;:::i;4297:36::-;3662:1;185:6554;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4349:61;4421:6;:::i;4136:93::-;4182:47;4190:9;;:18;;4182:47;:::i;:::-;4136:93;;4023:60;3890:10;185:6554;;4023:11;185:6554;;4280:5;4120:4;4105:12;185:6554;;;;;;;4023:60;;3768:73;-1:-1:-1;185:6554:7;;;;;;;;;;;3812:29;;3768:73;;3652:72;-1:-1:-1;3722:2:7;3712:12;;3652:72;;:56;3697:11;3707:1;3697:11;;3652:56;;:41;3682:11;3692:1;3682:11;;3652:41;;:26;3667:11;3677:1;3667:11;;3652:26;;185:6554;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;;;:::i;:::-;2466:103:5;;;:::i;:::-;-1:-1:-1;;;;;185:6554:7;;;;;;;;;;;;;;;;;;5254:29;185:6554;;5515:6;5322:28;;;5319:65;;185:6554;5417:10;185:6554;5417:10;5429:5;5417:10;5451:53;5417:10;;;5429:5;;:::i;:::-;185:6554;;;;;5417:10;;185:6554;;;;;;;;;;;;;;;;;;;;;;;;;5451:53;5515:6;:::i;5319:65::-;5375:9;;-1:-1:-1;5319:65:7;;185:6554;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;185:6554:7;;;;;;;;;;;;;5627:62;;5635:29;;5627:62;:::i;:::-;5714:10;185:6554;;5700:13;185:6554;;;;;;5700:33;185:6554;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;5700:41;185:6554;;;;;;-1:-1:-1;185:6554:7;;;;-1:-1:-1;185:6554:7;;;;;;;;;;;;-1:-1:-1;;;;;185:6554:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;185:6554:7;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;185:6554:7;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;-1:-1:-1;;;185:6554:7;;;;;;;;-1:-1:-1;;185:6554:7;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;-1:-1:-1;;;185:6554:7;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;185:6554:7;;;;-1:-1:-1;;;;;185:6554:7;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;185:6554:7;;;;;-1:-1:-1;185:6554:7;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;185:6554:7;;;;;;;;;;;-1:-1:-1;;185:6554:7;;;;;:::i;:::-;;;;-1:-1:-1;185:6554:7;;;;:::o;:::-;;;:::o;2575:307:5:-;1899:1;2702:7;185:6554:7;2702:18:5;2698:86;;1899:1;2702:7;185:6554:7;2575:307:5:o;2698:86::-;2743:30;;;2702:7;2743:30;;2702:7;2743:30;6001:317:7;;;;;-1:-1:-1;;;;;185:6554:7;6094:28;185:6554;;6154:28;;6119:1;6154:28;;;;;;;;;:::i;:::-;;185:6554;;;6001:317::o;6091:212::-;185:6554;;-1:-1:-1;;;6251:40:7;;-1:-1:-1;;;;;185:6554:7;;;6251:40;;;185:6554;;;;;;;;;;;;;;;;;;;;6251:40;;185:6554;;6119:1;;6251:40;;;;;;;;6091:212;6001:317::o;6251:40::-;;;185:6554;6251:40;185:6554;6251:40;;;;;;;:::i;:::-;;6001:317::o"
            },
            "methodIdentifiers": {
              "buyAiToken(address,uint8,address)": "87311b9a",
              "buyItem(address,address,uint16,address)": "6d558bb2",
              "buyPremium(address,uint8,address)": "ded97a9d",
              "buySubToUser(address,address,uint8,uint8,address)": "31829ff1",
              "chagneOwner(address)": "4b5ad09e",
              "changeFee(uint16)": "3407facd",
              "changeItemPrice(address,uint16,uint256)": "7849e367",
              "changePersonalFee(address,uint16)": "402af311",
              "changeTokenPrices(address,uint256,uint256)": "f0aecbc8",
              "changeUserSubPrice(address,uint8,uint256)": "10aa9d34",
              "donation(address,uint256,address)": "1c61ed92",
              "getTokenPrices(address)": "ab17f1eb",
              "getUserLevelPrice(address,uint8,address)": "392f0403",
              "owner()": "8da5cb5b",
              "personalFee(address)": "cc6533dd",
              "withdraw(address,uint256)": "f3fef3a3"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"amount\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"newAiToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"newDonation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"itemId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"newItem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"month\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"newPremium\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subscribeTo\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"month\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"newSubToUser\",\"type\":\"event\"},{\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_amount\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"buyAiToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_itemId\",\"type\":\"uint16\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_month\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"buyPremium\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_month\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_level\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"buySubToUser\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"chagneOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_id\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changeItemPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_fee\",\"type\":\"uint16\"}],\"name\":\"changePersonalFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_premiumPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_aiPrice\",\"type\":\"uint256\"}],\"name\":\"changeTokenPrices\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_level\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changeUserSubPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"donation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_premiumPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_aiPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_level\",\"type\":\"uint8\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getUserLevelPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_subLevelPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"personalFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Payment.sol\":\"Payments\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"contracts/Payment.sol\":{\"keccak256\":\"0x796ab536415834a2d1a464ea3d1df49cd0df91eb33808361f0ccd0ad0636429c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://eba458db3f5999586981be5063b7c450fa6a854c9578a6f3e648a4d8f6ccf7b1\",\"dweb:/ipfs/QmXbBnDTjjAYqGxrK6M7VxsKzyKbCRU19cWec6PfQ3XWqk\"]}},\"version\":1}"
        }
      },
      "contracts/interfaces/iPayment.sol": {
        "IPayment": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "name": "getTokenPrices",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "_premiumPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_aiPrice",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getTokenPrices(address)": "ab17f1eb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokenPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_premiumPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_aiPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/iPayment.sol\":\"IPayment\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/interfaces/iPayment.sol\":{\"keccak256\":\"0x1c311edd23485208fbc1bcdc90023dd90cdcd0edbabeb53690f946ad0cb0eb77\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://31284277af4f1c97a8d3b00bce26761cc340869bc38123ff756b4ca6cecb67bd\",\"dweb:/ipfs/QmYhtNc24bYwKGCYj1RCv5ey9ttEtS1VJt4Zzx5Cqv1vsX\"]}},\"version\":1}"
        }
      },
      "contracts/usdt.sol": {
        "usdtMock": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "copy_literal_to_memory_85884bc2158f4bdc08810b487538402e011f8d8877da6a41a8debb13af295c12": {
                  "entryPoint": 733,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052346102d8576100116102dd565b6100196102dd565b81516001600160401b0381116101e357600354600181811c911680156102ce575b60208210146101c357601f8111610269575b50602092601f821160011461020457928192936000926101f9575b50508160011b916000199060031b1c1916176003555b80516001600160401b0381116101e357600454600181811c911680156101d9575b60208210146101c357601f811161015e575b50602091601f82116001146100fa579181926000926100ef575b50508160011b916000199060031b1c1916176004555b604051610710908161030e8239f35b0151905038806100ca565b601f198216926004600052806000209160005b8581106101465750836001951061012d575b505050811b016004556100e0565b015160001960f88460031b161c1916905538808061011f565b9192602060018192868501518155019401920161010d565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106101b9575b601f0160051c01905b8181106101ad57506100b0565b600081556001016101a0565b9091508190610197565b634e487b7160e01b600052602260045260246000fd5b90607f169061009e565b634e487b7160e01b600052604160045260246000fd5b015190503880610067565b601f198216936003600052806000209160005b8681106102515750836001959610610238575b505050811b0160035561007d565b015160001960f88460031b161c1916905538808061022a565b91926020600181928685015181550194019201610217565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106102c4575b601f0160051c01905b8181106102b8575061004c565b600081556001016102ab565b90915081906102a2565b90607f169061003a565b600080fd5b60408051919082016001600160401b038111838210176101e35760405260048252631554d11d60e21b602083015256fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146104d657508063095ea7b31461045057806318160ddd1461043257806323b872dd14610345578063313ce5671461032957806340c10f191461026e57806370a082311461023457806395d89b4114610114578063a9059cbb146100e35763dd62ed3e1461008d57600080fd5b346100de5760403660031901126100de576100a66105f1565b6100ae610607565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100de5760403660031901126100de576101096100ff6105f1565b602435903361061d565b602060405160018152f35b346100de5760003660031901126100de5760405160006004548060011c9060018116801561022a575b602083108114610216578285529081156101fa57506001146101a3575b50819003601f01601f19168101906001600160401b0382118183101761018d57610189829182604052826105a8565b0390f35b634e487b7160e01b600052604160045260246000fd5b600460009081529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8282106101e45750602091508201018261015a565b60018160209254838588010152019101906101cf565b90506020925060ff191682840152151560051b8201018261015a565b634e487b7160e01b84526022600452602484fd5b91607f169161013d565b346100de5760203660031901126100de576001600160a01b036102556105f1565b1660005260006020526020604060002054604051908152f35b346100de5760403660031901126100de576102876105f1565b60243590670de0b6b3a7640000820291808304670de0b6b3a764000014901517156102fd576001600160a01b0316801561031357600254918083018093116102fd576020926002556000805160206106bb833981519152600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b346100de5760003660031901126100de57602060405160128152f35b346100de5760603660031901126100de5761035e6105f1565b610366610607565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106103a6575b50610109935061061d565b8381106104155784156103ff5733156103e957610109946000526001602052604060002060018060a01b033316600052602052836040600020910390558461039b565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100de5760003660031901126100de576020600254604051908152f35b346100de5760403660031901126100de576104696105f1565b6024359033156103ff576001600160a01b03169081156103e957336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100de5760003660031901126100de5760006003548060011c9060018116801561059e575b602083108114610216578285529081156101fa57506001146105475750819003601f01601f19168101906001600160401b0382118183101761018d57610189829182604052826105a8565b600360009081529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8282106105885750602091508201018261015a565b6001816020925483858801015201910190610573565b91607f16916104fc565b91909160208152825180602083015260005b8181106105db575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016105ba565b600435906001600160a01b03821682036100de57565b602435906001600160a01b03821682036100de57565b6001600160a01b03169081156106a4576001600160a01b031691821561031357600082815280602052604081205482811061068a5791604082826000805160206106bb833981519152958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205ab7311662e6183a000c5de131dd848b67910a951372fb86cb1a3ee353dec44e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2D8 JUMPI PUSH2 0x11 PUSH2 0x2DD JUMP JUMPDEST PUSH2 0x19 PUSH2 0x2DD JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E3 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2CE JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x1C3 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x269 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x204 JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x1F9 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1E3 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x1D9 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x1C3 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x15E JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0xFA JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0xEF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x710 SWAP1 DUP2 PUSH2 0x30E DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xCA JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x146 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x12D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0xE0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x11F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x10D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x1B9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1AD JUMPI POP PUSH2 0xB0 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1A0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x197 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x9E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x67 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x251 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x238 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0x7D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x22A JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x217 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x2C4 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2B8 JUMPI POP PUSH2 0x4C JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x2A2 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x3A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x1E3 JUMPI PUSH1 0x40 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH4 0x1554D11D PUSH1 0xE2 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x4D6 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE3 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0xA6 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x109 PUSH2 0xFF PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x61D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x22A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x216 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FA JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A3 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18D JUMPI PUSH2 0x189 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x5A8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP3 LT PUSH2 0x1E4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1CF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x13D JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x255 PUSH2 0x5F1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x287 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH8 0xDE0B6B3A7640000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x2FD JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x35E PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x366 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x3A6 JUMPI JUMPDEST POP PUSH2 0x109 SWAP4 POP PUSH2 0x61D JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x415 JUMPI DUP5 ISZERO PUSH2 0x3FF JUMPI CALLER ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x109 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x39B JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x469 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x3FF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3E9 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x59E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x216 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FA JUMPI POP PUSH1 0x1 EQ PUSH2 0x547 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18D JUMPI PUSH2 0x189 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP3 LT PUSH2 0x588 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x573 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4FC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5DB JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x6A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x68A JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xB7 BALANCE AND PUSH3 0xE6183A STOP 0xC TSTORE 0xE1 BALANCE 0xDD DUP5 DUP12 PUSH8 0x910A951372FB86CB BYTE RETURNDATACOPY 0xE3 MSTORE8 0xDE 0xC4 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "120:261:9:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;120:261:9;;;;1648:13:1;120:261:9;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;;;;;1648:13:1;120:261:9;;;;;1648:13:1;120:261:9;;;;-1:-1:-1;;;;;120:261:9;;;;1671:17:1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;;;;;1648:13:1;120:261:9;;;;;1671:17:1;120:261:9;;;;;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;;1671:17:1;-1:-1:-1;120:261:9;;-1:-1:-1;120:261:9;;-1:-1:-1;120:261:9;;;;;;;;;;;;;;;;;;;;1671:17:1;120:261:9;;;;;;;;;;1648:13:1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:1;-1:-1:-1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;-1:-1:-1;120:261:9;;1671:17:1;120:261:9;;-1:-1:-1;120:261:9;;;;;;;;;;;;-1:-1:-1;120:261:9;;1671:17:1;120:261:9;;-1:-1:-1;120:261:9;;;;;-1:-1:-1;120:261:9;;;;;;;;;;1648:13:1;-1:-1:-1;120:261:9;;-1:-1:-1;120:261:9;;-1:-1:-1;120:261:9;;;;;;;;;;;;;;;;;;;;;1648:13:1;120:261:9;;;;;;;;;;1648:13:1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:1;-1:-1:-1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;120:261:9;;;;;;;;;;;;;-1:-1:-1;;;120:261:9;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1521,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_address_3527": {
                  "entryPoint": 1543,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 1448,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "fun_transfer": {
                  "entryPoint": 1565,
                  "id": 381,
                  "parameterSlots": 3,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146104d657508063095ea7b31461045057806318160ddd1461043257806323b872dd14610345578063313ce5671461032957806340c10f191461026e57806370a082311461023457806395d89b4114610114578063a9059cbb146100e35763dd62ed3e1461008d57600080fd5b346100de5760403660031901126100de576100a66105f1565b6100ae610607565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100de5760403660031901126100de576101096100ff6105f1565b602435903361061d565b602060405160018152f35b346100de5760003660031901126100de5760405160006004548060011c9060018116801561022a575b602083108114610216578285529081156101fa57506001146101a3575b50819003601f01601f19168101906001600160401b0382118183101761018d57610189829182604052826105a8565b0390f35b634e487b7160e01b600052604160045260246000fd5b600460009081529091507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8282106101e45750602091508201018261015a565b60018160209254838588010152019101906101cf565b90506020925060ff191682840152151560051b8201018261015a565b634e487b7160e01b84526022600452602484fd5b91607f169161013d565b346100de5760203660031901126100de576001600160a01b036102556105f1565b1660005260006020526020604060002054604051908152f35b346100de5760403660031901126100de576102876105f1565b60243590670de0b6b3a7640000820291808304670de0b6b3a764000014901517156102fd576001600160a01b0316801561031357600254918083018093116102fd576020926002556000805160206106bb833981519152600093849284845283825260408420818154019055604051908152a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b346100de5760003660031901126100de57602060405160128152f35b346100de5760603660031901126100de5761035e6105f1565b610366610607565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106103a6575b50610109935061061d565b8381106104155784156103ff5733156103e957610109946000526001602052604060002060018060a01b033316600052602052836040600020910390558461039b565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100de5760003660031901126100de576020600254604051908152f35b346100de5760403660031901126100de576104696105f1565b6024359033156103ff576001600160a01b03169081156103e957336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100de5760003660031901126100de5760006003548060011c9060018116801561059e575b602083108114610216578285529081156101fa57506001146105475750819003601f01601f19168101906001600160401b0382118183101761018d57610189829182604052826105a8565b600360009081529091507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8282106105885750602091508201018261015a565b6001816020925483858801015201910190610573565b91607f16916104fc565b91909160208152825180602083015260005b8181106105db575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016105ba565b600435906001600160a01b03821682036100de57565b602435906001600160a01b03821682036100de57565b6001600160a01b03169081156106a4576001600160a01b031691821561031357600082815280602052604081205482811061068a5791604082826000805160206106bb833981519152958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b634b637e8f60e11b600052600060045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212205ab7311662e6183a000c5de131dd848b67910a951372fb86cb1a3ee353dec44e64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x4D6 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x114 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xE3 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0xA6 PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0xAE PUSH2 0x607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x109 PUSH2 0xFF PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x61D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x22A JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x216 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FA JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A3 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18D JUMPI PUSH2 0x189 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x5A8 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 SWAP2 POP PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B JUMPDEST DUP3 DUP3 LT PUSH2 0x1E4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1CF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x13D JUMP JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x255 PUSH2 0x5F1 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x287 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xDE0B6B3A7640000 DUP3 MUL SWAP2 DUP1 DUP4 DIV PUSH8 0xDE0B6B3A7640000 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x2FD JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x313 JUMPI PUSH1 0x2 SLOAD SWAP2 DUP1 DUP4 ADD DUP1 SWAP4 GT PUSH2 0x2FD JUMPI PUSH1 0x20 SWAP3 PUSH1 0x2 SSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SWAP4 DUP5 SWAP3 DUP5 DUP5 MSTORE DUP4 DUP3 MSTORE PUSH1 0x40 DUP5 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x35E PUSH2 0x5F1 JUMP JUMPDEST PUSH2 0x366 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x3A6 JUMPI JUMPDEST POP PUSH2 0x109 SWAP4 POP PUSH2 0x61D JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x415 JUMPI DUP5 ISZERO PUSH2 0x3FF JUMPI CALLER ISZERO PUSH2 0x3E9 JUMPI PUSH2 0x109 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x39B JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH2 0x469 PUSH2 0x5F1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x3FF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3E9 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xDE JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xDE JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x59E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x216 JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1FA JUMPI POP PUSH1 0x1 EQ PUSH2 0x547 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT DUP2 DUP4 LT OR PUSH2 0x18D JUMPI PUSH2 0x189 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 SWAP2 POP PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP3 DUP3 LT PUSH2 0x588 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x573 JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4FC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x5DB JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xDE JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x6A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x313 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x68A JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x6BB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xB7 BALANCE AND PUSH3 0xE6183A STOP 0xC TSTORE 0xE1 BALANCE 0xDD DUP5 DUP12 PUSH8 0x910A951372FB86CB BYTE RETURNDATACOPY 0xE3 MSTORE8 0xDE 0xC4 0x4E PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "120:261:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;120:261:9;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;120:261:9;;;;3440:5:1;120:261:9;;:::i;:::-;;;735:10:4;;3440:5:1;:::i;:::-;120:261:9;;;;;;;;;;;;;-1:-1:-1;;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;-1:-1:-1;;120:261:9;;;;-1:-1:-1;;;;;120:261:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;120:261:9;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;120:261:9;;;;-1:-1:-1;;;;;120:261:9;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;120:261:9;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;120:261:9;7509:21:1;;7505:91;;6214:21;120:261:9;;;;;;;;;;;;6214:21:1;120:261:9;-1:-1:-1;;;;;;;;;;;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;7064:25:1;120:261:9;;;;;;;;;;;;;;7505:91:1;7553:32;;;120:261:9;7553:32:1;120:261:9;;;;;7553:32:1;120:261:9;;;;;;-1:-1:-1;;120:261:9;;;;;;;372:2;120:261;;;;;;;;;-1:-1:-1;;120:261:9;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;120:261:9;;;;;;;;;;;;;;;735:10:4;120:261:9;;;;;;;;;;;;;;-1:-1:-1;;10561:36:1;;10557:309;;120:261:9;4967:5:1;;;;;:::i;10557:309::-;10617:24;;;10613:130;;9794:19;;9790:89;;735:10:4;9892:21:1;9888:90;;4967:5;120:261:9;;;;;;;;;;;;;;735:10:4;120:261:9;-1:-1:-1;120:261:9;;;;;-1:-1:-1;120:261:9;;;;;10557:309:1;;;9888:90;9936:31;;;120:261:9;9936:31:1;120:261:9;;;;;9936:31:1;9790:89;9836:32;;;120:261:9;9836:32:1;120:261:9;;;;;9836:32:1;10613:130;10668:60;;;;;120:261:9;10668:60:1;735:10:4;120:261:9;;;;;;;;10668:60:1;120:261:9;;;;;;-1:-1:-1;;120:261:9;;;;;2908:12:1;120:261:9;;;;;;;;;;;;;-1:-1:-1;;120:261:9;;;;;;:::i;:::-;;;735:10:4;;9794:19:1;9790:89;;-1:-1:-1;;;;;120:261:9;;9892:21:1;;9888:90;;735:10:4;120:261:9;;;;;;;;;-1:-1:-1;120:261:9;;;;;-1:-1:-1;120:261:9;;;;;;;10066:31:1;120:261:9;735:10:4;10066:31:1;;120:261:9;;;;;;;;;;;;;-1:-1:-1;;120:261:9;;;;;1837:5:1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;120:261:9;;;;;-1:-1:-1;;120:261:9;;;;-1:-1:-1;;;;;120:261:9;;;;;;;;;;;;;;;;:::i;:::-;1837:5:1;120:261:9;;;;;;-1:-1:-1;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;120:261:9;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;120:261:9;;;;;;:::o;5374:300:1:-;-1:-1:-1;;;;;120:261:9;;5457:18:1;;5453:86;;-1:-1:-1;;;;;120:261:9;;5552:16:1;;5548:86;;5473:1;120:261:9;;;;;;;;;;6321:19:1;;;6317:115;;120:261:9;;;;-1:-1:-1;;;;;;;;;;;120:261:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7064:25:1;5374:300::o;6317:115::-;6367:50;120:261:9;6367:50:1;;;;;;;;120:261:9;;;;;6367:50:1;5453:86;5498:30;;;5473:1;5498:30;5473:1;5498:30;120:261:9;;5473:1:1;5498:30"
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/usdt.sol\":\"usdtMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/usdt.sol\":{\"keccak256\":\"0xd0efb4736a6667e48dc2b87bf3f589e800c20a812c48d06af63c47dc5605cc34\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13b0e83aa653fc67b3b6e6b9e560bf2f498d289cd47e37ad0ab6703b48fe0cb7\",\"dweb:/ipfs/QmUiXCXfejTkgvxHBaxh9Ne4up2R25SFmRbLyLc3MVc79W\"]}},\"version\":1}"
        }
      }
    }
  }
}